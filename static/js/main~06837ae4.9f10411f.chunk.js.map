{"version":3,"sources":["components/WhyIcon.js","components/EmptyTableIndicator.js","components/NumericInput.js","colors.js","AppLayout.js","components/SideBarDrawer.js","components/MobileIndicator.js","components/I.js","App.js","components/SimpleTableWidget.js","components/SecondaryNavBar.js","components/services/MarketService.js","charting_library/charting_library.min.js","components/top-nav-bar/SiteLogo.js","components/services/DexAccountBalanceService.js","components/services/DexAccountOrderService.js","components/services/DexAccountService.js","components/services/HealthCheckService.js","components/services/MetaMaskService.js","components/services/WebSocketService.js","components/top-nav-bar/BaseEntranceButton.js","components/top-nav-bar/EntranceButton.js","components/top-nav-bar/TopNavBar.js","components/DefaultTracker.js","components/services/utils.js"],"names":["WhyIcon","text","placement","overlayStyle","color","colors","textWhite","fontSize","title","s","style","theme","marginLeft","icon","faQuestionCircle","EmptyTableIndicatorWrapper","styled","div","textDim","EmptyTableIndicator","props","marginTop","width","height","userSelect","opacity","src","alt","draggable","paddingTop","defaultProps","NumericInput","onChange","e","value","target","decimals","reg","RegExp","Number","isNaN","test","toString","indexOf","removedFirstZerosValue","replace","valueInFloat","parseFloat","error","onBlur","charAt","length","slice","defaultOnKeyDown","this","suffix","autoComplete","onClick","placeholder","toFixed","maxLength","lineHeight","onKeyDown","disabled","React","Component","green","red","orange","highlight","background","foreground","lightForeground","sidePanelBackground","buttonBackground","textBright","textWhiteBulk","textSidebarMenu","textLowContrast","border","innerBorderWidth","borderWidth","tradePanelWidth","orderBookWidth","tradeHistoryWidth","sidePadding","topNavBarHeight","tickerBarHeight","mainScreenHeight","tradeOrderAndTradeHeight","tradeOrderBaseTableHeightNoPagination","tradeOrderBaseTableHeight","tradeOrderBaseTableScrollYNoPagination","tradeOrderBaseTableScrollY","simpleSecondaryPageHeight","modalWidth","Content","SideBarGroupLabel","SideBarGroupSeperator","SideBarButton","colortxt","hoverbg","MenuFontAwesomeIcon","FontAwesomeIcon","SideBarDrawer","header","body","onClose","footer","visible","closable","drawerStyle","bodyStyle","padding","headerStyle","onMouseLeave","textAlign","AppLayout","MobileIndicator","backgroundColor","hasSider","borderLeftStyle","margin","fontWeight","faMobile","display","marginBottom","size","connect","state","layoutManager","I","t","App","history","tracker","fallback","routes","SimpleTableContainer","SimpleTable","Cell","Header","SimpleTableWidget","columnBuilders","rowData","emptyText","hasPagination","_rowData","columns","map","builder","j","label","dataIndex","dataSource","row","i","rowValue","key","forEach","getColValue","renderEmpty","tableLayout","pagination","total","pageSize","NavButton","selected","id","href","TheButton","push","trackEvent","type","data","location","SecondaryNavBar","subPages","paddingLeft","paddingRight","paddingBottom","Group","borderRadius","config","url","MarketService","checkMarketValid","a","fetchTokens","fetchMarketList","mainFunctionToCallApi","mounted","market","fetchCandles","currentMarket","current","tokens","setTimeout","getRefreshDurationInMillionSeconds","prevProps","prevState","marketList","marketNames","newMarket","match","params","pair","includes","notifyError","toUpperCase","setMarket","updateOrderBooksLevel","emptyTradePanel","exchange","dispatch","marketName","level","Object","assign","o","arguments","n","prototype","hasOwnProperty","call","Array","isArray","mobile","disabled_features","enabled_features","symbol","interval","timezone","container_id","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","r","_id","Math","random","substring","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","bind","datafeed","Error","_options","preset","concat","console","warn","loading_screen","_create","onChartReady","headerReady","_innerWindowLoaded","then","_innerWindow","onGrayedObjectClicked","_innerAPI","onShortcut","createShortcutAction","subscribe","unsubscribe","chart","setLanguage","remove","setSymbol","changeSymbol","window","removeEventListener","splice","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","save","saveChart","load","loadChart","json","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","symbolInterval","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","addCustomCSSFile","applyOverrides","applyStudiesOverrides","watchList","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","undoRedoState","tradingViewApi","contentWindow","innerHeight","_render","document","getElementById","innerHTML","querySelector","addEventListener","Promise","widgetReady","initializationFinished","customFormatters","brokerFactory","studiesOverrides","disabledFeatures","enabledFeatures","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","customIndicatorsUrl","indicators_file_name","saved_data","chartContent","encodeURIComponent","timeframe","toolbar_bg","studies_access","JSON","stringify","drawings_access","String","charts_storage_url","custom_css_url","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","TradingView","version","widget","defineProperty","exports","LanguageButton","MyFontAwesomeIcon","SiteLogo","isSettingsVisible","changeLanguage","i18n","saveLanguage","updateColor","setState","handleSettingsVisibleChange","mouseEnterDelay","process","getRelayerHost","marginRight","minWidth","showSettingIcon","className","overlayClassName","content","justify","span","faGlobeAsia","getLanguage","lang","trigger","onVisibleChange","faCog","pathname","router","language","DexAccountBalanceService","dexAccount","account","accountId","compareDexAccounts","apiKey","fetchMyAccountPage","DexAccountOrderService","fetchMyOpenOrders","myOrders","openOrdersLimit","openOrdersOffset","fetchMyHistoryOrders","historyOrdersLimit","historyOrdersOffset","emptyMyOpenOrders","emptyMyHistoryOrders","limit","offset","DexAccountService","init","updateAccount","NOT_REGISTERED","REGISTERING","RESETTING_PASSWORD","LOGGED_IN","lightconeGetAccount","wallet","address","relayAccount","publicKeyX","publicKeyY","keyPairCipherText","password","isFreeze","REGISTERED","exchangeId","metaMask","isDesiredNetwork","canShowLoginModal","showLoginModal","loginInteval","setInterval","clearInterval","message","registerAccountModal","registerInteval","log","lockInterval","updateRecord","getUpdateRecordByAddress","removeUpdateRecord","from","tradingPrivKey","decrypt","Wallet","web3","secretKey","signed","getApiKey","signature","show","loginModal","HealthCheckService","isVisible","getTimestamp","MaintenanceModal","MetaMaskService","context","mount","initMetaMaskConnection","ethereum","isMetaMask","autoRefreshOnNetworkChange","detectIfMetaMaskInstalled","updateMetaMask","chainId","getLoginRecord","connectToMetaMask","on","accounts","toLowerCase","emptyBalances","emptyUserTransactions","emptyAllOpenOrders","emptyAllHistoryOrders","emptyDeposits","emptyWithdrawals","changeAccount","accountChange","networkVersion","metaMaskNotFound","referenceCount","startConnecting","enable","fetchAccounts","metaMaskInterval","eth","updateAccountStateInRedux","METAMASK_NOT_FOUND","notifyWarning","WALLET_UNCONNECTED","getDataFromLocalStorage","fetchNonce","fetchGasPrice","installed","payload","WESOCKET_URL","getWsServer","tickerBuffer","tradeBuffer","timer","WebSocketService","setSubscription","extendTrades","updateTicker","isInitialized","setupAfterExchangeInitialized","orderbook","orderBook","tradeArg","getTradeArg","tickerArg","getTickerArg","marketArgs","getDepthArg","emptyTrades","emptyOrderBooks","fetchTradeHistory","fetchOrderBooks","sub","depthArg","accountArg","getAccountArg","orderArg","getOrderArg","ws","close","connectionListener","accountArgs","setup","topics","WebSocket","onopen","op","args","setupSocketConnectionListener","send","onerror","onmessage","evt","parseData","onclose","parsedData","parse","parsedTopic","split","topic","balances","balanceMap","updateMyAccountPage","newTrades","trade","timestamp","side","price","fee","high","low","fromWEI","baseTokenSymbol","volume","quoteTokenSymbol","open","startVersion","endVersion","asks","slot","sizeInNumber","bids","updateSocketOrderBooks","order","orderMap","updateSocketOrder","updateSocketAllOrder","readyState","balance","ticker","sells","buys","MyButton","bgcolor","BaseEntranceButton","tooltip","verticalAlign","iconColor","spin","MyBlockies","Blockies","AddressAvatarButton","fullAddress","alignItems","justifyContent","seed","EntranceButton","buttonType","defaultButton","faSpinner","pendingButtonJob","pendingButton","button","askMetaMaskConnect","getWalletAddress","walletAddress","pressedExportAccountButton","showEnterPasswordModal","showSideBar","pressedLogoutButton","showLogoutModal","pressedDepositButton","showDepositModal","pressedWithdrawButton","showWithdrawModal","pressedResetPasswordButton","resetPasswordModal","clearTimeout","timeout","drawerContent","drawerHeader","drawerFooter","isSideBarVisible","myAddressLinks","getEtherscanLink","faExternalLinkSquareAlt","commonLinks","exchangeAddress","faPencilRuler","faRulerCombined","faBug","faFileSignature","faTrophy","faFileAlt","scheduleButtonUpdate","onMouseEnter","faUnlink","UNDEFINED","faPlug","faCircleNotch","buttonbackground","faArrowAltCircleDown","faUserCircle","faLock","faKey","faCrown","faLockOpen","vipBadge","textTransform","faArrowAltCircleUp","faCode","desiredNetwork","netWorkName","faWaveSquare","createButtonAndDrawer","modalManager","showExportAccountModal","updatePrice","updateColumns","fetchCmcPrice","legal","fetchAllExchangeInfo","active","TopNavBar","mainFunctionToCallAPI","cmcPrice","tick","nextProps","nextState","onTradePage","disableTopTabs","borderTop","borderBottomStyle","ref","menuButton","_settingsButtonElement","RegisterAccountModal","LoginModal","DepositModal","ResetPasswordModal","WithdrawModal","EnterPasswordModal","ExportAccountModal","mode","borderRightStyle","borderRightWidth","borderRightColor","float","lastPageView","trackPageview","preUrl","_czc","item","lastEvent","category","action","nodeid","lastCustomVar","Tracker","event","eventsHistory","name","time","setCustomVar","dexAccount1","dexAccount2","account1","account2"],"mappings":"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","file":"static/js/main~06837ae4.9f10411f.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Tooltip } from 'antd';\n\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons/faQuestionCircle';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\n\nconst WhyIcon = ({ text }) => (\n  <Tooltip\n    placement=\"bottom\"\n    overlayStyle={{\n      color: colors.textWhite,\n      fontSize: '0.85rem'\n    }}\n    title={<I s={text} />}\n  >\n    <FontAwesomeIcon\n      style={{ color: colors.theme, marginLeft: '8px' }}\n      icon={faQuestionCircle}\n    />\n  </Tooltip>\n);\n\nexport default WhyIcon;\n","import I from './I';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst EmptyTableIndicatorWrapper = styled.div`\n  text-align: center;\n  padding: 0;\n  color: ${colors.textDim};\n\n  > img {\n    @media (max-height: 200px) {\n      display: none;\n    }\n  }\n`;\n\nconst EmptyTableIndicator = ({ text, ...props }) => {\n  return (\n    <EmptyTableIndicatorWrapper>\n      <img\n        style={{\n          marginTop: props.marginTop,\n          width: '122px',\n          height: 'auto',\n          userSelect: 'none',\n          opacity: '1'\n        }}\n        src=\"/assets/images/no-data.png\"\n        alt=\"no-data\"\n        draggable=\"false\"\n      />\n      <div\n        style={{\n          paddingTop: '2px',\n          fontSize: '0.85rem'\n        }}\n      >\n        <I s={text} />\n      </div>\n    </EmptyTableIndicatorWrapper>\n  );\n};\n\nEmptyTableIndicator.defaultProps = {\n  marginTop: '10%'\n};\n\nexport default EmptyTableIndicator;\n","import { Input } from 'antd';\nimport React from 'react';\nimport colors from 'colors';\n\nexport default class NumericInput extends React.Component {\n  onChange = e => {\n    // Avoid invalid input that may cause crash\n    try {\n      const { value } = e.target;\n      let { decimals } = this.props;\n      if (typeof decimals === 'undefined') decimals = 100;\n      const reg = new RegExp(\n        '^-?(0|[1-9][0-9]*)(\\\\.[0-9]{0,' + decimals + '})?$'\n      );\n      if (\n        (!Number.isNaN(value) && reg.test(value)) ||\n        value === '' ||\n        value === '-'\n      ) {\n        this.props.onChange(value);\n      } else if (!isNaN(value) && value.toString().indexOf('.') !== -1) {\n        // If string contains only one .\n        const valueInFloat = parseFloat(value);\n        if (valueInFloat === 0) {\n          // 00000\n          // 000.00 => 0.00\n          this.props.onChange('0' + value.replace(/^0+/, ''));\n        } else if (valueInFloat > 0) {\n          // input has too many decimals. This will be caught in the parent component.\n          this.props.onChange(value);\n        }\n      } else if (/^0*$/.test(value)) {\n        // If string contains only 0\n        this.props.onChange(value);\n      } else if (value === '.') {\n        // . => 0.\n        this.props.onChange('0.');\n      } else {\n        // 0000000\n        // 00001000 => 1000\n        const removedFirstZerosValue = value.replace(/^0+/, '');\n        if (\n          !Number.isNaN(removedFirstZerosValue) &&\n          reg.test(removedFirstZerosValue)\n        ) {\n          this.props.onChange(removedFirstZerosValue);\n        }\n      }\n    } catch (error) {}\n  };\n\n  // '.' at the end or only '-' in the input box.\n  onBlur = () => {\n    try {\n      const { value, onBlur, onChange } = this.props;\n      if (value && (value.charAt(value.length - 1) === '.' || value === '-')) {\n        onChange(value.slice(0, -1));\n      }\n      if (onBlur) {\n        onBlur();\n      }\n    } catch (error) {}\n  };\n\n  defaultOnKeyDown = () => {};\n\n  render() {\n    const { value, suffix } = this.props;\n    let { fontSize } = this.props;\n    if (fontSize) {\n    } else {\n      fontSize = '0.9em';\n    }\n\n    return (\n      <div>\n        <Input\n          autoComplete={'off'}\n          value={value}\n          onChange={this.onChange}\n          onClick={this.props.onClick}\n          onBlur={this.onBlur}\n          placeholder={Number(0).toFixed(this.props.decimals)}\n          maxLength={25}\n          style={{\n            color: this.props.color ? this.props.color : colors.textWhite // need to overwrite ant-input-affix-wrapper\n          }}\n          suffix={\n            <div\n              style={{\n                color: this.props.color ? this.props.color : colors.textWhite,\n                fontSize: fontSize,\n                userSelect: 'none',\n                lineHeight: '40px'\n              }}\n            >\n              {suffix}\n            </div>\n          }\n          onKeyDown={this.props.onKeyDown}\n          disabled={this.props.disabled}\n        />\n      </div>\n    );\n  }\n}\n","const green = '#02BB81';\nconst red = '#FF4846';\nconst orange = '#FF8944';\nconst blue = '#2E7BFA';\n\nexport default {\n  green: green,\n  red: red,\n  orange: orange,\n  theme: blue,\n  highlight: '#32c5ff',\n\n  background: '#242539',\n  foreground: '#292B42',\n  lightForeground: '#2F304D',\n\n  sidePanelBackground: '#303249',\n  buttonBackground: '#3D3E5A',\n\n  textBright: '#eeeeee',\n  textWhite: '#CDCDCDE0',\n  textWhiteBulk: '#9FA0BF',\n  textDim: '#696A9B',\n  textSidebarMenu: '#9E9EAC',\n  textLowContrast: '#424242',\n  border: '#242539'\n};\n","export default {\n  innerBorderWidth: '1px',\n  borderWidth: '1px',\n  tradePanelWidth: '260px',\n\n  orderBookWidth: '260px',\n  tradeHistoryWidth: '225px',\n\n  sidePadding: '12px',\n  topNavBarHeight: '56px',\n  tickerBarHeight: '45px',\n  mainScreenHeight: 'calc(100vh - 50px - 45px - 1px - 1px - 1px)', // consider border width\n\n  // nav bar level 1: 52px\n  // nav bar level 2: 52px\n  // tab: 44px\n  // table header: 32px\n  // pagination: 32px\n  tradeOrderAndTradeHeight: 'calc(50vh - 52px - 46px - 44px)',\n\n  tradeOrderBaseTableHeightNoPagination:\n    'calc(50vh - 52px - 46px - 44px - 44px)',\n  tradeOrderBaseTableHeight: 'calc(50vh - 52px - 46px - 44px - 44px - 32px)',\n\n  tradeOrderBaseTableScrollYNoPagination:\n    'calc(50vh - 52px - 46px - 44px - 44px - 32px)',\n  tradeOrderBaseTableScrollY:\n    'calc(50vh - 52px - 46px - 44px - 44px - 32px - 32px)',\n\n  simpleSecondaryPageHeight: 'calc(100vh - 50px - 1px - 1px - 1px)',\n  modalWidth: '536px'\n};\n","import { Button, Drawer, Layout } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport AppLayout from 'AppLayout';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\nconst { Content } = Layout;\n\nconst SideBarGroupLabel = styled.div`\n  color: ${colors.textDim};\n  font-size: 0.85rem;\n  font-weight: 600;\n  padding-left: 12px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nconst SideBarGroupSeperator = styled.div`\n  color: ${colors.textDim};\n  height: 2px;\n  background: rgba(0, 0, 0, 0.1);\n  border-radius: 2px;\n  margin: 5%;\n  width: 90%;\n`;\n\nconst SideBarButton = styled(Button)`\nbackground-color: transparent!important;\nfont-size: 0.95rem!important;\nborder: none!important;\nwidth: 100%!important;\ntext-align: left!important;\npadding:  auto 0 auto 24px!important;\nborder-radius:0!important;\nheight: 40px!important;\nline-height: 40px!important;\ncolor: ${props => (props.colortxt ? props.colortxt : colors.textSidebarMenu)}\n\n&:hover {\n  background-color: ${props =>\n    props.hoverbg ? props.hoverbg : colors.theme}!important;\n  color: ${colors.textBright}!important;\n}\n\n&[disabled],&[disabled]:hover  {\n   background-color: transparent!important;\n  color: ${colors.textDim}!important;\n}\n\n`;\n\nconst MenuFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-left: 0;\n  margin-right: 4px;\n  min-width: 24px;\n  text-align: center;\n  display: inline-block；\n  opacity: 0.85;\n`;\n\nconst SideBarDrawer = ({ header, body, footer, onClose, visible }) => {\n  return (\n    <Drawer\n      placement=\"right\"\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      drawerStyle={{\n        fontSize: '0.85rem',\n        background: colors.sidePanelBackground\n      }}\n      bodyStyle={{\n        padding: '0'\n      }}\n      headerStyle={{\n        height: 0\n      }}\n    >\n      <Layout\n        onMouseLeave={onClose}\n        style={{\n          background: 'transparent',\n          height: '100vh'\n        }}\n      >\n        <div\n          style={{\n            background: colors.background,\n            textAlign: 'center',\n            width: '100%',\n            height: AppLayout.topNavBarHeight,\n            lineHeight: AppLayout.topNavBarHeight\n          }}\n        >\n          {header}\n        </div>\n        <Content>{body}</Content>\n      </Layout>\n    </Drawer>\n  );\n};\n\nexport {\n  MenuFontAwesomeIcon,\n  SideBarGroupSeperator,\n  SideBarGroupLabel,\n  SideBarButton,\n  SideBarDrawer\n};\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport colors from 'colors';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Layout } from 'antd';\nimport { faMobile } from '@fortawesome/free-solid-svg-icons/faMobile';\n\nconst { Content } = Layout;\n\nclass MobileIndicator extends React.Component {\n  render() {\n    return (\n      <div>\n        <div\n          style={{\n            height: AppLayout.borderWidth,\n            backgroundColor: colors.border\n          }}\n        />\n        <Layout\n          hasSider={true}\n          style={{\n            height: AppLayout.simpleSecondaryPageHeight\n          }}\n        >\n          <Content\n            width=\"100%\"\n            style={{\n              padding: '0',\n              backgroundColor: colors.foreground,\n              borderLeftStyle: 'none'\n            }}\n          >\n            <div\n              style={{\n                margin: 'auto',\n                fontSize: '0.9rem',\n                fontWeight: 'normal',\n                color: colors.textWhite\n              }}\n            >\n              <FontAwesomeIcon\n                icon={faMobile}\n                style={{\n                  display: 'block',\n                  margin: 'auto',\n                  marginTop: '35%',\n                  marginBottom: '40px',\n                  color: colors.theme\n                }}\n                size=\"5x\"\n              />\n              <div\n                style={{\n                  display: 'block',\n                  width: '280px',\n                  margin: 'auto',\n                  marginBottom: '40px',\n\n                  color: colors.textDim\n                }}\n              >\n                <p style={{ color: colors.textWhite }}>\n                  <I s=\"MobileNotSupportedNotice\" />\n                </p>\n                <p>\n                  <I s=\"MobileAppNotice\" />\n                </p>\n                <p>\n                  <I s=\"Stay tuned!\" />\n                </p>\n              </div>\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { layoutManager } = state;\n  return { layoutManager };\n};\n\nexport default connect(mapStateToProps, null)(MobileIndicator);\n","import { Translation } from 'react-i18next';\nimport React from 'react';\n\nconst I = ({ s }) => {\n  return <Translation>{t => t(s)}</Translation>;\n};\n\nexport default I;\n","import { ConnectedRouter } from 'connected-react-router';\nimport { TrackerProvider } from 'react-tracker';\nimport { tracker } from 'components/DefaultTracker';\nimport PropTypes from 'prop-types';\nimport React, { Suspense } from 'react';\nimport routes from './routes';\n\nimport './App.less';\n\nconst App = ({ history }) => {\n  return (\n    <TrackerProvider tracker={tracker}>\n      <Suspense fallback={null}>\n        <ConnectedRouter history={history}>{routes}</ConnectedRouter>\n      </Suspense>\n    </TrackerProvider>\n  );\n};\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default App;\n","import { ConfigProvider, Pagination, Table } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport EmptyTableIndicator from 'components/EmptyTableIndicator';\nimport I from 'components/I';\nimport colors from 'colors';\n\nconst SimpleTableContainer = styled.div`\n  min-height: 540px;\n  max-width: 1200px;\n  width: 100%;\n  background: #292b42 !important;\n  display: table;\n  margin: 0 auto;\n\n  .ant-table-placeholder {\n    border-style: none !important;\n    user-select: none !important;\n    background-color: #292b42 !important;\n\n    .ant-empty-normal {\n      margin: 64px 0px !important;\n    }\n  }\n\n  .ant-empty-description {\n    color: #696a9b !important;\n  }\n`;\n\nconst SimpleTable = styled(Table)`\n  border-style: none !important;\n  border-width: 0 !important;\n  border-color: ${colors.foreground}important;\n  min-height: 500px;\n\n  .ant-table-thead > tr > th {\n    background: linear-gradient(\n      180deg,\n      rgba(46, 47, 74, 1) 0%,\n      rgba(37, 38, 59, 0.5) 100%\n    ) !important;\n    color: #696a9b;\n    border-bottom-style: none !important;\n    height: 35px !important;\n    line-height: 22px !important;\n    padding: 0px !important;\n  }\n\n  .ant-table-tbody > tr > td {\n    border-bottom-style: none !important;\n  }\n`;\n\nconst Cell = styled.div`\n  font-size: 0.9rem;\n  margin-right: ${props => props.margin || 4}px;\n  margin-left: ${props => props.margin || 4}px;\n  white-space: nowrap;\n`;\n\nconst Header = styled(Cell)`\n  font-weight: 400;\n  user-select: none;\n  color: ${colors.textDim};\n`;\n\nconst SimpleTableWidget = ({\n  columnBuilders,\n  rowData,\n  emptyText,\n  hasPagination,\n  margin\n}) => {\n  const _rowData = rowData || [];\n  const customizeRenderEmpty = () => <EmptyTableIndicator text={emptyText} />;\n\n  const columns = columnBuilders.map((builder, j) => ({\n    ...builder,\n    title: (\n      <Header margin={margin}>\n        <I s={builder.label} />\n      </Header>\n    ),\n    dataIndex: 'col_' + j\n  }));\n\n  const dataSource = _rowData.map((row, i) => {\n    var rowValue = { key: i };\n\n    columnBuilders.forEach((builder, j) => {\n      rowValue['col_' + j] = (\n        <Cell margin={margin}>{builder.getColValue(row)}</Cell>\n      );\n    });\n\n    return rowValue;\n  });\n\n  return (\n    <SimpleTableContainer>\n      <ConfigProvider\n        renderEmpty={dataSource.length === 0 && customizeRenderEmpty}\n      >\n        <SimpleTable\n          tableLayout=\"auto\"\n          size=\"middle\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={false}\n        />\n        {dataSource.length > 10 ? (\n          <Pagination\n            style={{\n              padding: '30px 0px',\n              background: colors.background,\n              textAlign: 'center'\n            }}\n            size=\"\"\n            total={dataSource.length}\n            pageSize={10}\n          />\n        ) : (\n          <div />\n        )}\n      </ConfigProvider>\n    </SimpleTableContainer>\n  );\n};\n\nexport default SimpleTableWidget;\n","import { history } from 'redux/configureStore';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport { tracker } from 'components/DefaultTracker';\n\nimport { Button } from 'antd';\n\nconst NavButton = ({ selected, id, label, href }) => {\n  const TheButton = styled(Button)`\n    background-color: transparent !important;\n    height: 46px !important;\n    margin-right: 10px !important;\n    margin-left: 10px !important;\n    line-height: 46px !important;\n    color: ${colors.textDim}!important;\n    border-width: 0 !important;\n    border-style: none !important;\n    font-weight: 600 !important;\n    font-size: 0.9rem !important;\n\n    &:hover {\n      color: ${colors.theme}!important;\n    }\n    &[disabled] {\n      color: ${colors.theme}!important;\n    }\n  `;\n\n  return (\n    <TheButton\n      disabled={selected === id}\n      onClick={() => {\n        history.push(href);\n        tracker.trackEvent({\n          type: 'LOCATION_CHANGE',\n          data: {\n            location: href\n          }\n        });\n      }}\n    >\n      {label}\n    </TheButton>\n  );\n};\n\nconst SecondaryNavBar = ({ selected, subPages }) => {\n  return (\n    <div\n      style={{\n        paddingLeft: '260px',\n        paddingRight: '60px',\n        paddingBottom: '0px',\n        borderWidth: '0px',\n        backgroundColor: colors.foreground\n      }}\n    >\n      <Button.Group\n        style={{\n          borderRadius: '0px',\n          borderWidth: '0px',\n          paddingBottom: '0px'\n        }}\n      >\n        {subPages.map((config, i) => (\n          <NavButton\n            key={i}\n            selected={selected}\n            id={config.id}\n            href={config.url}\n            label={<I s={config.label} />}\n          />\n        ))}\n      </Button.Group>\n    </div>\n  );\n};\n\nexport default SecondaryNavBar;\n","import { connect } from 'react-redux';\nimport { history } from 'redux/configureStore';\nimport React from 'react';\n\nimport { getRefreshDurationInMillionSeconds } from 'lightcone/api/LightconeAPI';\nimport I from 'components/I';\n\nimport { emptyTradePanel } from 'redux/actions/TradePanel';\nimport { fetchCandles } from 'redux/actions/market/Candle';\nimport { fetchMarketList } from 'redux/actions/market/MarketList';\nimport { fetchTokens } from 'redux/actions/Tokens';\nimport { setMarket } from 'redux/actions/market/CurrentMarket';\nimport { updateOrderBooksLevel } from 'redux/actions/market/OrderBook';\n\nimport { notifyError } from 'redux/actions/Notification';\n\nclass MarketService extends React.Component {\n  componentDidMount() {\n    this.mounted = true;\n    this.mainFunctionToCallApi();\n    this.checkMarketValid();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.market.marketList.marketNames.length > 0) {\n      const newMarket = this.props.match.params.pair;\n      if (\n        this.props.market.marketList.marketNames.includes(newMarket) === false\n      ) {\n        notifyError(\n          <span>\n            {newMarket} <I s=\"IsNotAValidMarket\" />\n          </span>\n        );\n        history.push('/404');\n        return;\n      }\n    }\n\n    if (\n      this.props.match.params.pair.toUpperCase() !==\n        this.props.market.currentMarket.current ||\n      prevProps.match.params.pair !== this.props.match.params.pair\n    ) {\n      const market = this.props.match.params.pair;\n      this.props.setMarket(market);\n      this.props.fetchCandles(market, this.props.tokens);\n      this.props.updateOrderBooksLevel(market, 0);\n      this.props.emptyTradePanel();\n    }\n  }\n\n  checkMarketValid = () => {\n    (async () => {\n      try {\n        await this.props.fetchTokens();\n        await this.props.fetchMarketList();\n      } catch (err) {}\n    })();\n  };\n\n  // Move this api calls to each components\n  mainFunctionToCallApi = () => {\n    if (this.mounted) {\n      const { market } = this.props;\n      this.props.fetchCandles(market.currentMarket.current, this.props.tokens);\n      setTimeout(\n        () => this.mainFunctionToCallApi(),\n        getRefreshDurationInMillionSeconds()\n      );\n    }\n  };\n\n  render() {\n    return <div />;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { market, exchange } = state;\n  return { market, tokens: exchange.tokens };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMarket: marketName => dispatch(setMarket(marketName)),\n    fetchTokens: () => dispatch(fetchTokens()),\n    fetchMarketList: () => dispatch(fetchMarketList()),\n    fetchCandles: (market, tokens) => dispatch(fetchCandles(market, tokens)),\n    updateOrderBooksLevel: (market, level) =>\n      dispatch(updateOrderBooksLevel(market, level)),\n    emptyTradePanel: () => dispatch(emptyTradePanel())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketService);\n","/* eslint-disable */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.TradingView={})}(this,function(t){\"use strict\";var e=Object.assign||function(t){for(var e,o=arguments,i=1,n=arguments.length;i<n;i++)for(var s in e=o[i])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t};function o(t,i){var n=e({},t);for(var s in i)\"object\"!=typeof t[s]||null===t[s]||Array.isArray(t[s])?void 0!==i[s]&&(n[s]=i[s]):n[s]=o(t[s],i[s]);return n}var i={mobile:{disabled_features:[\"left_toolbar\",\"header_widget\",\"timeframes_toolbar\",\"edit_buttons_in_legend\",\"context_menus\",\"control_bar\",\"border_around_the_chart\"],enabled_features:[]}},n={width:800,height:500,symbol:\"AA\",interval:\"D\",timezone:\"Etc/UTC\",container_id:\"\",library_path:\"\",locale:\"en\",widgetbar:{details:!1,watchlist:!1,watchlist_settings:{default_symbols:[]}},overrides:{\"mainSeriesProperties.showCountdown\":!1},studies_overrides:{},brokerConfig:{configFlags:{}},fullscreen:!1,autosize:!1,disabled_features:[],enabled_features:[],debug:!1,logo:{},time_frames:[{text:\"5y\",resolution:\"W\"},{text:\"1y\",resolution:\"W\"},{text:\"6m\",resolution:\"120\"},{text:\"3m\",resolution:\"60\"},{text:\"1m\",resolution:\"30\"},{text:\"5d\",resolution:\"5\"},{text:\"1d\",resolution:\"1\"}],client_id:\"0\",user_id:\"0\",charts_storage_api_version:\"1.0\",favorites:{intervals:[],chartTypes:[]}};function s(){return\"1.14 (internal id 36c29828 @ 2019-09-24 10:39:54.259301)\"}var r=function(){function t(t){if(this._id=\"tradingview_\"+(1048576*(1+Math.random())|0).toString(16).substring(1),this._ready=!1,this._readyHandlers=[],this._onWindowResize=this._autoResizeChart.bind(this),!t.datafeed)throw new Error(\"Datafeed is not defined\");if(this._options=o(n,t),t.preset){var e=i[t.preset];e?(void 0!==this._options.disabled_features?this._options.disabled_features=this._options.disabled_features.concat(e.disabled_features):this._options.disabled_features=e.disabled_features,void 0!==this._options.enabled_features?this._options.enabled_features=this._options.enabled_features.concat(e.enabled_features):this._options.enabled_features=e.enabled_features):console.warn(\"Unknown preset: `\"+t.preset+\"`\")}\"Dark\"===this._options.theme&&void 0===this._options.loading_screen&&(this._options.loading_screen={backgroundColor:\"#131722\"}),this._create()}return t.prototype.onChartReady=function(t){this._ready?t.call(this):this._readyHandlers.push(t)},t.prototype.headerReady=function(){var t=this;return this._innerWindowLoaded.then(function(){return t._innerWindow().headerReady()})},t.prototype.onGrayedObjectClicked=function(t){this._innerAPI().onGrayedObjectClicked(t)},t.prototype.onShortcut=function(t,e){this._innerWindow().createShortcutAction(t,e)},t.prototype.subscribe=function(t,e){this._innerAPI().subscribe(t,e)},t.prototype.unsubscribe=function(t,e){this._innerAPI().unsubscribe(t,e)},t.prototype.chart=function(t){return this._innerAPI().chart(t)},t.prototype.setLanguage=function(t){this.remove(),this._options.locale=t,this._create()},t.prototype.setSymbol=function(t,e,o){this._innerAPI().changeSymbol(t,e+\"\",o)},t.prototype.remove=function(){window.removeEventListener(\"resize\",this._onWindowResize),this._readyHandlers.splice(0,this._readyHandlers.length),delete window[this._id],this._iFrame.parentNode&&this._iFrame.parentNode.removeChild(this._iFrame)},t.prototype.closePopupsAndDialogs=function(){this._innerAPI().closePopupsAndDialogs()},t.prototype.selectLineTool=function(t){this._innerAPI().selectLineTool(t)},t.prototype.selectedLineTool=function(){return this._innerAPI().selectedLineTool()},t.prototype.save=function(t){this._innerAPI().saveChart(t)},t.prototype.load=function(t,e){this._innerAPI().loadChart({json:t,extendedData:e})},t.prototype.getSavedCharts=function(t){this._innerAPI().getSavedCharts(t)},t.prototype.loadChartFromServer=function(t){this._innerAPI().loadChartFromServer(t)},t.prototype.saveChartToServer=function(t,e,o,i){this._innerAPI().saveChartToServer(t,e,o,i)},t.prototype.removeChartFromServer=function(t,e){this._innerAPI().removeChartFromServer(t,e)},t.prototype.onContextMenu=function(t){this._innerAPI().onContextMenu(t)},t.prototype.createButton=function(t){return this._innerWindow().createButton(t)},t.prototype.showNoticeDialog=function(t){this._innerAPI().showNoticeDialog(t)},t.prototype.showConfirmDialog=function(t){this._innerAPI().showConfirmDialog(t)},t.prototype.showLoadChartDialog=function(){this._innerAPI().showLoadChartDialog()},t.prototype.showSaveAsChartDialog=function(){this._innerAPI().showSaveAsChartDialog()},t.prototype.symbolInterval=function(){return this._innerAPI().getSymbolInterval()},t.prototype.mainSeriesPriceFormatter=function(){return this._innerAPI().mainSeriesPriceFormatter()},t.prototype.getIntervals=function(){return this._innerAPI().getIntervals()},t.prototype.getStudiesList=function(){return this._innerAPI().getStudiesList()},t.prototype.addCustomCSSFile=function(t){this._innerWindow().addCustomCSSFile(t)},t.prototype.applyOverrides=function(t){this._options=o(this._options,{overrides:t}),this._innerWindow().applyOverrides(t)},t.prototype.applyStudiesOverrides=function(t){this._innerWindow().applyStudiesOverrides(t)},t.prototype.watchList=function(){return this._innerAPI().watchlist()},t.prototype.activeChart=function(){return this._innerAPI().activeChart()},t.prototype.chartsCount=function(){return this._innerAPI().chartsCount()},t.prototype.layout=function(){return this._innerAPI().layout()},t.prototype.setLayout=function(t){this._innerAPI().setLayout(t)},t.prototype.layoutName=function(){return this._innerAPI().layoutName()},t.prototype.changeTheme=function(t){this._innerWindow().changeTheme(t)},t.prototype.takeScreenshot=function(){this._innerAPI().takeScreenshot()},t.prototype.lockAllDrawingTools=function(){return this._innerAPI().lockAllDrawingTools()},t.prototype.hideAllDrawingTools=function(){return this._innerAPI().hideAllDrawingTools()},t.prototype.undoRedoState=function(){return this._innerAPI().undoRedoState()},t.prototype._innerAPI=function(){return this._innerWindow().tradingViewApi},t.prototype._innerWindow=function(){return this._iFrame.contentWindow},t.prototype._autoResizeChart=function(){this._options.fullscreen&&(this._iFrame.style.height=window.innerHeight+\"px\")},t.prototype._create=function(){var t=this,e=this._render(),o=document.getElementById(this._options.container_id);if(null===o)throw new Error(\"There is no such element - #\"+this._options.container_id);o.innerHTML=e,this._iFrame=o.querySelector(\"#\"+this._id);var i=this._iFrame;(this._options.autosize||this._options.fullscreen)&&(i.style.width=\"100%\",this._options.fullscreen||(i.style.height=\"100%\")),window.addEventListener(\"resize\",this._onWindowResize),this._onWindowResize(),this._innerWindowLoaded=new Promise(function(t){var e=function(){i.removeEventListener(\"load\",e,!1),t()};i.addEventListener(\"load\",e,!1)}),this._innerWindowLoaded.then(function(){t._innerWindow().widgetReady(function(){t._ready=!0;for(var e=0,o=t._readyHandlers;e<o.length;e++){var i=o[e];try{i.call(t)}catch(t){console.error(t)}}t._innerWindow().initializationFinished()})})},t.prototype._render=function(){var t=window;t[this._id]={datafeed:this._options.datafeed,customFormatters:this._options.customFormatters,brokerFactory:this._options.brokerFactory,overrides:this._options.overrides,studiesOverrides:this._options.studies_overrides,disabledFeatures:this._options.disabled_features,enabledFeatures:this._options.enabled_features,brokerConfig:this._options.brokerConfig,restConfig:this._options.restConfig,favorites:this._options.favorites,logo:this._options.logo,numeric_formatting:this._options.numeric_formatting,rss_news_feed:this._options.rss_news_feed,newsProvider:this._options.news_provider,loadLastChart:this._options.load_last_chart,saveLoadAdapter:this._options.save_load_adapter,loading_screen:this._options.loading_screen,settingsAdapter:this._options.settings_adapter,customIndicatorsUrl:this._options.indicators_file_name},this._options.saved_data&&(t[this._id].chartContent={json:this._options.saved_data});var e=(this._options.library_path||\"\")+\"static/\"+encodeURIComponent(this._options.locale)+\"-tv-chart.36c29828de05fa4d10c3.html#symbol=\"+encodeURIComponent(this._options.symbol)+\"&interval=\"+encodeURIComponent(this._options.interval)+(this._options.timeframe?\"&timeframe=\"+encodeURIComponent(this._options.timeframe):\"\")+(this._options.toolbar_bg?\"&toolbarbg=\"+encodeURIComponent(this._options.toolbar_bg.replace(\"#\",\"\")):\"\")+(this._options.studies_access?\"&studiesAccess=\"+encodeURIComponent(JSON.stringify(this._options.studies_access)):\"\")+\"&widgetbar=\"+encodeURIComponent(JSON.stringify(this._options.widgetbar))+(this._options.drawings_access?\"&drawingsAccess=\"+encodeURIComponent(JSON.stringify(this._options.drawings_access)):\"\")+\"&timeFrames=\"+encodeURIComponent(JSON.stringify(this._options.time_frames))+\"&locale=\"+encodeURIComponent(this._options.locale)+\"&uid=\"+encodeURIComponent(this._id)+\"&clientId=\"+encodeURIComponent(String(this._options.client_id))+\"&userId=\"+encodeURIComponent(String(this._options.user_id))+(this._options.charts_storage_url?\"&chartsStorageUrl=\"+encodeURIComponent(this._options.charts_storage_url):\"\")+(this._options.charts_storage_api_version?\"&chartsStorageVer=\"+encodeURIComponent(this._options.charts_storage_api_version):\"\")+(this._options.custom_css_url?\"&customCSS=\"+encodeURIComponent(this._options.custom_css_url):\"\")+(this._options.auto_save_delay?\"&autoSaveDelay=\"+encodeURIComponent(String(this._options.auto_save_delay)):\"\")+\"&debug=\"+encodeURIComponent(String(this._options.debug))+(this._options.snapshot_url?\"&snapshotUrl=\"+encodeURIComponent(this._options.snapshot_url):\"\")+(this._options.timezone?\"&timezone=\"+encodeURIComponent(this._options.timezone):\"\")+(this._options.study_count_limit?\"&studyCountLimit=\"+encodeURIComponent(String(this._options.study_count_limit)):\"\")+(this._options.symbol_search_request_delay?\"&ssreqdelay=\"+encodeURIComponent(String(this._options.symbol_search_request_delay)):\"\")+(this._options.theme?\"&theme=\"+encodeURIComponent(String(this._options.theme)):\"\");return'<iframe id=\"'+this._id+'\" name=\"'+this._id+'\"  src=\"'+e+'\"'+(this._options.autosize||this._options.fullscreen?\"\":' width=\"'+this._options.width+'\" height=\"'+this._options.height+'\"')+' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'},t}();window.TradingView=window.TradingView||{},window.TradingView.version=s,t.version=s,t.widget=r,Object.defineProperty(t,\"__esModule\",{value:!0})});\n","import { connect } from 'react-redux';\nimport { history } from 'redux/configureStore';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport config from 'lightcone/config';\nimport i18n from '../../i18n';\n\nimport { Button, Col, Popover, Row, Tooltip } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons/faCog';\nimport { faGlobeAsia } from '@fortawesome/free-solid-svg-icons/faGlobeAsia';\nimport { getLanguage, saveLanguage } from 'lightcone/api/localStorgeAPI';\nimport { updateColor } from 'redux/actions/ColorManager';\nimport AppLayout from 'AppLayout';\n\nimport { tracker } from 'components/DefaultTracker';\n\nconst LanguageButton = styled(Button)`\n  font-size: 0.8rem!important;\n  font-weight: 600!important;\n  background-color: #3E3F61!important;\n  margin: 16px 8px;\n  color: ${colors.textWhite}\n  border: none!important;\n  &[disabled], &:hover {\n    border: none;\n    background-color: ${colors.theme}!important;\n  }\n\n  &[disabled] {\n    color: ${colors.textWhite}!important;\n  }\n`;\n\nconst MyFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-left: 32px;\n  margin-bottom: -6px;\n`;\n\nclass SiteLogo extends React.Component {\n  state = {\n    isSettingsVisible: false\n  };\n\n  changeLanguage = value => {\n    if (value === 'en' || value === 'zh') {\n      i18n.changeLanguage(value);\n      saveLanguage(value);\n      this.props.updateColor(value);\n    }\n\n    this.setState({\n      isSettingsVisible: false\n    });\n  };\n\n  handleSettingsVisibleChange = isSettingsVisible => {\n    this.setState({ isSettingsVisible });\n\n    tracker.trackEvent({\n      type: 'LOCATION_CHANGE',\n      data: {\n        location: 'settings-popover',\n        visible: isSettingsVisible\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          paddingLeft: '4px',\n          fontWeight: 700,\n          fontSize: '0.9rem',\n          color: colors.textWhite,\n          height: AppLayout.topNavBarHeight,\n          lineHeight: AppLayout.topNavBarHeight,\n          userSelect: 'none'\n        }}\n      >\n        <div>\n          <img\n            src=\"/assets/images/logo.svg\"\n            alt=\"Loopring\"\n            draggable=\"false\"\n            style={{\n              width: '100px',\n              height: 'auto',\n              marginLeft: '-8px',\n              paddingRight: '8px',\n              paddingBottom: '4px',\n              userSelect: 'none'\n            }}\n            onClick={() => {\n              history.push('/trade/LRC-ETH');\n            }}\n          />\n          <Tooltip\n            style={{\n              width: '400px'\n            }}\n            overlayStyle={{\n              color: colors.textWhite,\n              fontSize: '0.85rem'\n            }}\n            mouseEnterDelay={2}\n            title={\n              <div>\n                <div>LAST_COMMIT={process.env.COMMITHASH}</div>\n                <div>DEPLOYED={process.env.TIME}</div>\n                <div>RELAYER={config.getRelayerHost()}</div>\n              </div>\n            }\n          >\n            <span\n              style={{\n                fontSize: '0.8rem',\n                fontWeight: 400,\n                marginRight: '32px',\n                minWidth: '50px',\n                display: 'inline-block',\n                color: colors.theme\n              }}\n            >\n              <I s=\"Beta1\" />\n            </span>\n          </Tooltip>\n\n          <span\n            style={{\n              display: this.props.showSettingIcon ? 'inline-block' : 'none'\n            }}\n          >\n            {/*<MyFontAwesomeIcon icon={faBell} />*/}\n\n            <Popover\n              className=\"desktop-layout\"\n              placement={'bottomLeft'}\n              overlayClassName=\"settings-popover\"\n              content={\n                <div style={{ minWidth: '360px' }}>\n                  <Row type=\"flex\" justify=\"space-between\">\n                    <Col span={3}>\n                      <FontAwesomeIcon\n                        icon={faGlobeAsia}\n                        style={{\n                          width: '24px',\n                          height: '24px',\n                          color: colors.textWhite\n                        }}\n                      />\n                    </Col>\n                    <Col span={14}>\n                      <div\n                        style={{\n                          fontSize: '1rem',\n                          color: colors.textWhite\n                        }}\n                      >\n                        <I s=\"Language\" />\n                      </div>\n                      <div\n                        style={{\n                          fontSize: '0.85rem',\n                          color: colors.textDim,\n                          margin: '8px 0px'\n                        }}\n                      >\n                        <I s=\"Change the default interface language\" />\n                      </div>\n                    </Col>\n                    <Col span={2}>\n                      <LanguageButton\n                        disabled={getLanguage() === 'en'}\n                        size=\"small\"\n                        onClick={() => {\n                          this.changeLanguage('en');\n\n                          tracker.trackEvent({\n                            type: 'CHANGE_LANGUAGE',\n                            data: {\n                              lang: 'en'\n                            }\n                          });\n                        }}\n                      >\n                        En\n                      </LanguageButton>\n                    </Col>\n                    <Col span={3}>\n                      <LanguageButton\n                        disabled={getLanguage() === 'zh'}\n                        size=\"small\"\n                        onClick={() => {\n                          this.changeLanguage('zh');\n\n                          tracker.trackEvent({\n                            type: 'CHANGE_LANGUAGE',\n                            data: {\n                              lang: 'zh'\n                            }\n                          });\n                        }}\n                      >\n                        中\n                      </LanguageButton>\n                    </Col>\n                  </Row>\n                </div>\n              }\n              title={<I s=\"Settings\" />}\n              trigger=\"hover\"\n              visible={this.state.isSettingsVisible}\n              onVisibleChange={this.handleSettingsVisibleChange}\n            >\n              <MyFontAwesomeIcon\n                icon={faCog}\n                style={{ width: '14px', height: '14px' }}\n              />\n            </Popover>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { pathname } = state.router.location;\n  return {\n    pathname\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateColor: language => dispatch(updateColor(language))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiteLogo);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { compareDexAccounts } from './utils';\nimport { fetchMyAccountPage } from 'redux/actions/MyAccountPage';\n\nclass DexAccountBalanceService extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.dexAccount &&\n      prevProps.dexAccount.account &&\n      this.props.dexAccount &&\n      this.props.dexAccount.account &&\n      this.props.dexAccount.account.accountId &&\n      compareDexAccounts(prevProps.dexAccount, this.props.dexAccount) ===\n        false &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.props.fetchMyAccountPage(\n        this.props.dexAccount.account.accountId,\n        this.props.dexAccount.account.apiKey,\n        this.props.tokens\n      );\n    }\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { dexAccount, exchange } = state;\n  return { dexAccount, tokens: exchange.tokens };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMyAccountPage: (accountId, apiKey, tokens) =>\n      dispatch(fetchMyAccountPage(accountId, apiKey, tokens))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DexAccountBalanceService);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { compareDexAccounts } from './utils';\nimport {\n  emptyMyHistoryOrders,\n  emptyMyOpenOrders,\n  fetchMyHistoryOrders,\n  fetchMyOpenOrders\n} from 'redux/actions/MyOrders';\n\nclass DexAccountOrderService extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.dexAccount.account &&\n      this.props.dexAccount.account &&\n      this.props.dexAccount.account.accountId &&\n      compareDexAccounts(prevProps.dexAccount, this.props.dexAccount) ===\n        false &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.props.fetchMyOpenOrders(\n        this.props.dexAccount.account.accountId,\n        this.props.myOrders.openOrdersLimit,\n        this.props.myOrders.openOrdersOffset,\n        this.props.market.currentMarket.current,\n        this.props.dexAccount.account.apiKey,\n        this.props.tokens\n      );\n      this.props.fetchMyHistoryOrders(\n        this.props.dexAccount.account.accountId,\n        this.props.myOrders.historyOrdersLimit,\n        this.props.myOrders.historyOrdersOffset,\n        this.props.market.currentMarket.current,\n        this.props.dexAccount.account.apiKey,\n        this.props.tokens\n      );\n    }\n\n    if (\n      prevProps.market.currentMarket.current !==\n        this.props.market.currentMarket.current &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      const market = this.props.market.currentMarket.current;\n\n      this.props.emptyMyOpenOrders();\n      this.props.emptyMyHistoryOrders();\n      this.props.fetchMyOpenOrders(\n        this.props.dexAccount.account.accountId,\n        this.props.myOrders.openOrdersLimit,\n        0,\n        market,\n        this.props.dexAccount.account.apiKey,\n        this.props.tokens\n      );\n\n      this.props.fetchMyHistoryOrders(\n        this.props.dexAccount.account.accountId,\n        this.props.myOrders.historyOrdersLimit,\n        0,\n        market,\n        this.props.dexAccount.account.apiKey,\n        this.props.tokens\n      );\n    }\n\n    if (\n      prevProps.myOrders.openOrdersOffset !==\n        this.props.myOrders.openOrdersOffset &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.props.fetchMyOpenOrders(\n        this.props.dexAccount.account.accountId,\n        this.props.myOrders.openOrdersLimit,\n        this.props.myOrders.openOrdersOffset,\n        this.props.market.currentMarket.current,\n        this.props.dexAccount.account.apiKey,\n        this.props.tokens\n      );\n    }\n\n    if (\n      prevProps.myOrders.historyOrdersOffset !==\n        this.props.myOrders.historyOrdersOffset &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.props.fetchMyHistoryOrders(\n        this.props.dexAccount.account.accountId,\n        this.props.myOrders.historyOrdersLimit,\n        this.props.myOrders.historyOrdersOffset,\n        this.props.market.currentMarket.current,\n        this.props.dexAccount.account.apiKey,\n        this.props.tokens\n      );\n    }\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { dexAccount, market, myOrders, exchange } = state;\n  return { dexAccount, market, myOrders, tokens: exchange.tokens };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMyOpenOrders: (accountId, limit, offset, market, apiKey, tokens) =>\n      dispatch(\n        fetchMyOpenOrders(accountId, limit, offset, market, apiKey, tokens)\n      ),\n    fetchMyHistoryOrders: (accountId, limit, offset, market, apiKey, tokens) =>\n      dispatch(\n        fetchMyHistoryOrders(accountId, limit, offset, market, apiKey, tokens)\n      ),\n    emptyMyHistoryOrders: () => dispatch(emptyMyHistoryOrders()),\n    emptyMyOpenOrders: () => dispatch(emptyMyOpenOrders)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DexAccountOrderService);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport {\n  LOGGED_IN,\n  NOT_REGISTERED,\n  REGISTERED,\n  REGISTERING,\n  RESETTING_PASSWORD,\n  updateAccount\n} from 'redux/actions/DexAccount';\nimport {\n  getUpdateRecordByAddress,\n  removeUpdateRecord\n} from 'lightcone/api/localStorgeAPI';\n\nimport { loginModal, registerAccountModal } from 'redux/actions/ModalManager';\n\nimport { getApiKey, lightconeGetAccount } from 'lightcone/api/LightconeAPI';\n\nimport { canShowLoginModal } from 'components/services/utils';\nimport { decrypt } from 'modals/components/utils';\nimport Wallet from 'lightcone/wallet/wallet';\n\nclass DexAccountService extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.dexAccount.account.state !== this.props.dexAccount.account.state\n    ) {\n      this.init(this.props);\n    }\n  }\n\n  async init(props) {\n    const { dexAccount, updateAccount } = props;\n    const { account } = dexAccount;\n\n    switch (account.state) {\n      case NOT_REGISTERED:\n        try {\n          const relayAccount = await lightconeGetAccount(window.wallet.address);\n          if (relayAccount) {\n            if (\n              relayAccount.publicKeyX === account.publicKeyX &&\n              relayAccount.publicKeyY === account.publicKeyY &&\n              relayAccount.accountId === account.accountId &&\n              !!account.keyPairCipherText &&\n              !!account.password\n            ) {\n              if (!relayAccount.isFreeze) {\n                updateAccount({\n                  ...account,\n                  ...relayAccount,\n                  state: LOGGED_IN\n                });\n              } else {\n                updateAccount({\n                  ...account,\n                  ...relayAccount,\n                  state: RESETTING_PASSWORD\n                });\n              }\n            } else {\n              updateAccount({\n                ...relayAccount,\n                address: window.wallet.address,\n                state: REGISTERED\n              });\n              if (\n                !!this.props.exchange.exchangeId &&\n                this.props.metaMask.isDesiredNetwork &&\n                canShowLoginModal()\n              ) {\n                this.props.showLoginModal(true);\n              } else if (!this.props.exchange.exchangeId) {\n                this.loginInteval = setInterval(() => {\n                  if (this.props.exchange.exchangeId) {\n                    if (\n                      this.props.metaMask.isDesiredNetwork &&\n                      canShowLoginModal()\n                    ) {\n                      this.props.showLoginModal(true);\n                    }\n                    clearInterval(this.loginInteval);\n                  }\n                }, 200);\n              }\n            }\n          }\n        } catch (e) {\n          if (e.message.indexOf('account not found')) {\n            if (\n              !!this.props.exchange.exchangeId &&\n              this.props.metaMask.isDesiredNetwork\n            ) {\n              this.props.registerAccountModal(true);\n            } else if (!this.props.exchange.exchangeId) {\n              this.registerInteval = setInterval(() => {\n                if (this.props.exchange.exchangeId) {\n                  if (this.props.metaMask.isDesiredNetwork) {\n                    this.props.registerAccountModal(true);\n                  }\n                  clearInterval(this.registerInteval);\n                }\n              }, 200);\n            }\n          }\n        }\n        break;\n\n      case REGISTERING:\n        this.interval = setInterval(async () => {\n          try {\n            const relayAccount = await lightconeGetAccount(\n              window.wallet.address\n            );\n            if (relayAccount) {\n              if (\n                relayAccount.publicKeyX === account.publicKeyX &&\n                relayAccount.publicKeyY === account.publicKeyY &&\n                account.keyPairCipherText &&\n                account.password\n              ) {\n                updateAccount({\n                  ...account,\n                  accountId: relayAccount.accountId,\n                  state: LOGGED_IN\n                });\n              } else {\n                updateAccount({\n                  ...account,\n                  accountId: relayAccount.accountId,\n                  state: REGISTERED\n                });\n              }\n            }\n          } catch (e) {\n            console.log(e);\n          }\n        }, 1000);\n        break;\n\n      case RESETTING_PASSWORD:\n        this.lockInterval = setInterval(async () => {\n          try {\n            const relayAccount = await lightconeGetAccount(\n              window.wallet.address\n            );\n            const updateRecord = getUpdateRecordByAddress(\n              window.wallet.address\n            );\n            if (\n              relayAccount &&\n              relayAccount.publicKeyX === account.publicKeyX &&\n              relayAccount.publicKeyY === account.publicKeyY &&\n              !relayAccount.isFreeze\n            ) {\n              removeUpdateRecord(window.wallet.address);\n              updateAccount({ state: REGISTERED });\n              clearInterval(this.lockInterval);\n            } else if (\n              updateRecord &&\n              (updateRecord.from.publicKeyX !== relayAccount.publicKeyX ||\n                updateRecord.from.publicKeyY !== relayAccount.publicKeyY) &&\n              !relayAccount.isFreeze\n            ) {\n              removeUpdateRecord(window.wallet.address);\n              updateAccount({\n                ...account,\n                accountId: relayAccount.accountId,\n                state: REGISTERED\n              });\n              clearInterval(this.lockInterval);\n            }\n          } catch (e) {}\n        }, 10000);\n\n        break;\n      case LOGGED_IN:\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        /**\n         * 由于获取APiKey需要用EDDSA KeyPair签名，因此需要 keyPairCipherText和password同时存在，\n         * 如果希望刷新以后不用重新输入密码，则必须把密码保存到localStorage\n         */\n\n        const tradingPrivKey = decrypt(\n          account.keyPairCipherText,\n          account.password\n        );\n\n        window.wallet = new Wallet(\n          window.wallet.web3,\n          window.wallet.address,\n          account.accountId,\n          {\n            publicKeyX: account.publicKeyX,\n            publicKeyY: account.publicKeyY,\n            secretKey: tradingPrivKey\n          }\n        );\n        const signed = window.wallet.getApiKey();\n        const data = {\n          accountId: account.accountId,\n          publicKeyX: account.publicKeyX,\n          publicKeyY: account.publicKeyY\n        };\n        try {\n          const apiKey = await getApiKey(data, signed.signature);\n          updateAccount({\n            ...account,\n            apiKey: apiKey.account\n          });\n        } catch (error) {}\n        break;\n\n      default:\n        console.error('unhandled account state ', account.state);\n    }\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { dexAccount, exchange, metaMask } = state;\n  return { dexAccount, exchange, metaMask };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAccount: account => dispatch(updateAccount(account)),\n    registerAccountModal: show => dispatch(registerAccountModal(show)),\n    showLoginModal: show => dispatch(loginModal(show))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DexAccountService);\n","import { getTimestamp } from 'lightcone/api/LightconeAPI';\nimport MaintenanceModal from 'modals/MaintenanceModal';\nimport React from 'react';\n\nexport default class HealthCheckService extends React.Component {\n  state = {\n    isVisible: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.mainFunctionToCallApi();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  mainFunctionToCallApi = () => {\n    (async () => {\n      try {\n        await getTimestamp();\n        if (this.mounted) {\n          this.setState({\n            isVisible: false\n          });\n        }\n      } catch (err) {\n        if (this.mounted) {\n          this.setState({\n            isVisible: false\n          });\n        }\n      } finally {\n        if (this.mounted) {\n          setTimeout(() => this.mainFunctionToCallApi(), 60 * 1000);\n        }\n      }\n    })();\n  };\n\n  render() {\n    return (\n      <div>\n        <MaintenanceModal isVisible={this.state.isVisible} />\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React, { Component } from 'react';\n\nimport {\n  METAMASK_NOT_FOUND,\n  WALLET_UNCONNECTED,\n  changeAccount,\n  getDataFromLocalStorage,\n  updateAccount\n} from 'redux/actions/DexAccount';\nimport {\n  connectToMetaMask,\n  detectIfMetaMaskInstalled,\n  updateMetaMask\n} from 'redux/actions/MetaMask';\nimport {\n  emptyBalances,\n  emptyDeposits,\n  emptyWithdrawals\n} from 'redux/actions/MyAccountPage';\nimport {\n  emptyMyHistoryOrders,\n  emptyMyOpenOrders\n} from 'redux/actions/MyOrders';\n\nimport {\n  emptyAllHistoryOrders,\n  emptyAllOpenOrders,\n  emptyUserTransactions\n} from 'redux/actions/MyOrderPage';\n\nimport { fetchAccounts } from 'redux/actions/Web3';\nimport { fetchGasPrice } from 'redux/actions/GasPrice';\nimport { fetchNonce } from 'redux/actions/Nonce';\nimport { getLoginRecord } from 'lightcone/api/localStorgeAPI';\nimport { notifyError, notifyWarning } from 'redux/actions/Notification';\nimport Wallet from 'lightcone/wallet';\n\nimport { loginModal, registerAccountModal } from 'redux/actions/ModalManager';\n\nclass MetaMaskService extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.mount = this.mount.bind(this);\n    this.initMetaMaskConnection = this.initMetaMaskConnection.bind(this);\n  }\n\n  componentDidMount() {\n    if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n      this.props.detectIfMetaMaskInstalled(true);\n      /**\n       * exchangeId !== 0 有值代表已经从relay获取到信息,为获取到信息前，没有必要做该操作\n       */\n      if (this.props.exchange.exchangeId !== 0) {\n        this.props.updateMetaMask({\n          isDesiredNetwork:\n            this.props.exchange.chainId === Number(window.ethereum.chainId)\n        });\n      }\n\n      if (getLoginRecord()) {\n        this.props.connectToMetaMask(true);\n      }\n\n      window.ethereum.on('accountsChanged', accounts => {\n        if (\n          !!window.wallet &&\n          window.wallet.address &&\n          accounts.length > 0 &&\n          window.wallet.address.toLowerCase() !== accounts[0].toLowerCase()\n        ) {\n          this.props.emptyBalances();\n          this.props.emptyMyOpenOrders();\n          this.props.emptyMyHistoryOrders();\n          this.props.emptyUserTransactions();\n          this.props.emptyAllOpenOrders();\n          this.props.emptyAllHistoryOrders();\n          this.props.emptyDeposits();\n          this.props.emptyWithdrawals();\n          this.props.registerAccountModal(false);\n          this.props.showLoginModal(false);\n          this.props.changeAccount();\n          this.accountChange(accounts[0].toLowerCase());\n        }\n      });\n\n      window.ethereum.on('networkChanged', networkVersion => {\n        /**\n         * exchangeId !== 0 有值代表已经从relay获取到信息,为获取到信息前，没有必要做该操作\n         */\n        if (this.props.exchange.exchangeId !== 0) {\n          this.props.updateMetaMask({\n            isDesiredNetwork:\n              this.props.exchange.chainId === Number(networkVersion)\n          });\n        }\n      });\n    } else {\n      this.metaMaskNotFound();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    if (\n      this.props.metaMask.referenceCount !==\n        prevProps.metaMask.referenceCount &&\n      this.props.metaMask.startConnecting === true\n    ) {\n      this.mount();\n    }\n\n    if (\n      this.props.exchange.chainId !== prevProps.exchange.chainId &&\n      typeof window.ethereum !== 'undefined' &&\n      window.ethereum.isMetaMask\n    ) {\n      this.props.updateMetaMask({\n        isDesiredNetwork:\n          this.props.exchange.chainId === Number(window.ethereum.chainId)\n      });\n    }\n  }\n\n  mount() {\n    if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n      // Set state to unconnected\n      this.props.detectIfMetaMaskInstalled(true);\n      this.initMetaMaskConnection();\n    } else {\n      this.metaMaskNotFound();\n    }\n  }\n\n  async initMetaMaskConnection() {\n    try {\n      // window.ethereum.enable will connect to MetaMask\n      // if MetaMask is not connected.\n      const accounts = await window.ethereum.enable();\n\n      this.props.fetchAccounts();\n      window.wallet = new Wallet(window.web3, accounts[0]);\n      const metaMaskInterval = setTimeout(() => {\n        if (!window.ethereum || !window.web3 || !window.web3.eth.accounts[0]) {\n          this.props.changeAccount();\n          clearInterval(metaMaskInterval);\n          this.updateAccountStateInRedux(METAMASK_NOT_FOUND);\n          notifyWarning(<I s=\"MetaMaskNotDetected\" />);\n        }\n      }, 500);\n\n      this.props.updateAccount({\n        ...this.props.dexAccount.account,\n        state: WALLET_UNCONNECTED\n      });\n      this.props.getDataFromLocalStorage(accounts[0]);\n\n      // Get related info\n      this.props.fetchNonce(window.wallet.address);\n      this.props.fetchGasPrice();\n    } catch (err) {\n      this.updateAccountStateInRedux(WALLET_UNCONNECTED);\n      notifyError(<I s=\"Failed to connect to MetaMask!\" />);\n    }\n    // Reset even failed to connect MetaMask\n    this.props.connectToMetaMask(false);\n  }\n\n  accountChange(address) {\n    try {\n      window.wallet = new Wallet(window.web3, address);\n      this.props.getDataFromLocalStorage(address);\n\n      // Get related info\n      this.props.fetchNonce(window.wallet.address);\n      this.props.fetchGasPrice();\n    } catch (e) {}\n  }\n\n  updateAccountStateInRedux(state) {\n    const { dexAccount, updateAccount } = this.props;\n    const { account } = dexAccount;\n    updateAccount({\n      ...account,\n      state\n    });\n  }\n\n  metaMaskNotFound() {\n    this.updateAccountStateInRedux(METAMASK_NOT_FOUND);\n    this.props.detectIfMetaMaskInstalled(false);\n\n    // TODO: the following will throw i18n error\n    // notifyWarning(<I s=\"MetaMaskNotDetected\"/>)\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { dexAccount, metaMask, exchange } = state;\n  return { dexAccount, metaMask, exchange };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    connectToMetaMask: startConnecting =>\n      dispatch(connectToMetaMask(startConnecting)),\n    detectIfMetaMaskInstalled: installed =>\n      dispatch(detectIfMetaMaskInstalled(installed)),\n    changeAccount: () => dispatch(changeAccount()),\n    updateAccount: account => dispatch(updateAccount(account)),\n    getDataFromLocalStorage: address =>\n      dispatch(getDataFromLocalStorage(address)),\n    updateMetaMask: payload => dispatch(updateMetaMask(payload)),\n    fetchNonce: address => dispatch(fetchNonce(address)),\n    fetchGasPrice: () => dispatch(fetchGasPrice()),\n    emptyBalances: () => dispatch(emptyBalances()),\n    emptyMyOpenOrders: () => dispatch(emptyMyOpenOrders()),\n    emptyMyHistoryOrders: () => dispatch(emptyMyHistoryOrders()),\n    emptyUserTransactions: () => dispatch(emptyUserTransactions()),\n    registerAccountModal: show => dispatch(registerAccountModal(show)),\n    showLoginModal: show => dispatch(loginModal(show)),\n    emptyWithdrawals: () => dispatch(emptyWithdrawals()),\n    emptyDeposits: () => dispatch(emptyDeposits()),\n    emptyAllOpenOrders: () => dispatch(emptyAllOpenOrders()),\n    emptyAllHistoryOrders: () => dispatch(emptyAllHistoryOrders())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetaMaskService);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport config from 'lightcone/config';\n\nimport {\n  emptyOrderBooks,\n  fetchOrderBooks,\n  updateSocketOrderBooks\n} from 'redux/actions/market/OrderBook';\nimport {\n  emptyTrades,\n  extendTrades,\n  fetchTradeHistory\n} from 'redux/actions/market/TradeHistory';\n\nimport { LOGGED_IN } from 'redux/actions/DexAccount';\nimport {\n  fetchMyAccountPage,\n  updateMyAccountPage\n} from 'redux/actions/MyAccountPage';\nimport {\n  fetchMyHistoryOrders,\n  fetchMyOpenOrders,\n  updateSocketOrder\n} from 'redux/actions/MyOrders';\n\nimport { updateSocketAllOrder } from 'redux/actions/MyOrderPage';\nimport { updateTicker } from 'redux/actions/market/Ticker';\n\nimport { map as balanceMap } from 'lightcone/api/v1/balances';\nimport { map as orderMap } from 'lightcone/api/v1/orders';\n\nconst WESOCKET_URL = config.getWsServer();\n\nlet tickerBuffer = null;\n\nlet tradeBuffer = [];\n\nlet timer = 0;\n\nclass WebSocketService extends Component {\n  // Use setupAfterExchangeInitialized rather than componentDidMount\n  setupAfterExchangeInitialized() {\n    this.setSubscription();\n    // No network request in this interval.\n    this.interval = setInterval(() => {\n      if (tradeBuffer.length > 0) {\n        this.props.extendTrades(tradeBuffer);\n        tradeBuffer = [];\n      }\n\n      if (tickerBuffer) {\n        this.props.updateTicker(tickerBuffer);\n        tickerBuffer = null;\n      }\n    }, 500);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.exchange.isInitialized !== this.props.exchange.isInitialized\n    ) {\n      this.setupAfterExchangeInitialized();\n    }\n\n    if (this.props.exchange.isInitialized) {\n      const market = this.props.market.currentMarket.current;\n      const orderbook = this.props.market.orderBook;\n      if (\n        prevProps.market.currentMarket.current !==\n        this.props.market.currentMarket.current\n      ) {\n        const tradeArg = this.getTradeArg(market);\n        const tickerArg = this.getTickerArg(market);\n        const depthArg = this.getDepthArg(market, orderbook.level);\n        const marketArgs = [tradeArg, depthArg, tickerArg];\n        this.props.emptyTrades();\n        this.props.emptyOrderBooks(0);\n        this.props.fetchTradeHistory(market);\n        this.props.fetchOrderBooks(\n          market,\n          orderbook.level,\n          this.props.exchange.tokens\n        );\n        tickerBuffer = null;\n        tradeBuffer = [];\n        this.sub(marketArgs);\n      } else if (\n        prevProps.market.orderBook.level !== this.props.market.orderBook.level\n      ) {\n        this.props.emptyOrderBooks(this.props.market.orderBook.level);\n        this.props.fetchOrderBooks(\n          market,\n          orderbook.level,\n          this.props.exchange.tokens\n        );\n        const depthArg = this.getDepthArg(\n          this.props.market.currentMarket.current,\n          this.props.market.orderBook.level\n        );\n        this.sub([depthArg]);\n      }\n\n      if (\n        (prevProps.account.state !== this.props.account.state ||\n          this.props.account.apiKey !== prevProps.account.apiKey) &&\n        this.props.account.state === LOGGED_IN &&\n        !!this.props.account.apiKey\n      ) {\n        const accountArg = this.getAccountArg();\n        this.sub([accountArg], this.props.account.apiKey);\n      }\n\n      if (\n        (prevProps.market.currentMarket.current !==\n          this.props.market.currentMarket.current ||\n          prevProps.account.state !== this.props.account.state ||\n          this.props.account.apiKey !== prevProps.account.apiKey) &&\n        this.props.account.state === LOGGED_IN &&\n        !!this.props.account.apiKey\n      ) {\n        const orderArg = this.getOrderArg(\n          this.props.market.currentMarket.current\n        );\n        this.sub([orderArg], this.props.account.apiKey);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.ws) {\n      this.ws.close();\n      clearInterval(this.interval);\n      clearInterval(this.connectionListener);\n    }\n  }\n\n  setSubscription() {\n    const market = this.props.market.currentMarket.current;\n    const orderbook = this.props.market.orderBook;\n    this.props.fetchTradeHistory(market);\n    this.props.fetchOrderBooks(\n      market,\n      orderbook.level,\n      this.props.exchange.tokens\n    );\n\n    const tradeArg = this.getTradeArg(market);\n    const tickerArg = this.getTickerArg(market);\n    const depthArg = this.getDepthArg(market, orderbook.level);\n    const marketArgs = [tradeArg, depthArg, tickerArg];\n    const accountArgs = [];\n\n    if (this.props.account.state === LOGGED_IN && !!this.props.account.apiKey) {\n      this.props.fetchMyAccountPage(\n        this.props.account.accountId,\n        this.props.account.apiKey,\n        this.props.exchange.tokens\n      );\n      this.props.fetchMyOpenOrders(\n        this.props.account.accountId,\n        this.props.myOrders.openOrdersLimit,\n        this.props.myOrders.openOrdersOffset,\n        market,\n        this.props.account.apiKey,\n        this.props.exchange.tokens\n      );\n\n      this.props.fetchMyHistoryOrders(\n        this.props.account.accountId,\n        this.props.myOrders.historyOrdersLimit,\n        this.props.myOrders.historyOrdersOffset,\n        market,\n        this.props.account.apiKey,\n        this.props.exchange.tokens\n      );\n\n      const accountArg = this.getAccountArg();\n      const orderArg = this.getOrderArg(market);\n      accountArgs.push(accountArg);\n      accountArgs.push(orderArg);\n    }\n\n    tickerBuffer = null;\n    tradeBuffer = [];\n    this.setup([...marketArgs, ...accountArgs], this.props.account.apiKey);\n  }\n\n  setupSocketConnectionListener() {\n    this.connectionListener = setInterval(() => {\n      if (timer >= 8) {\n        timer = 0;\n        clearInterval(this.connectionListener);\n        this.setSubscription();\n      } else {\n        timer += 1;\n      }\n    }, 10 * 1000);\n  }\n\n  setup(topics = [], apiKey = '') {\n    if (this.ws) {\n      try {\n        this.ws.close();\n      } catch (e) {}\n    }\n    this.ws = new WebSocket(WESOCKET_URL);\n\n    this.ws.onopen = () => {\n      if (topics.length > 0) {\n        const data = {\n          op: 'sub',\n          args: topics\n        };\n        if (apiKey) {\n          data.apiKey = apiKey;\n        }\n        this.setupSocketConnectionListener();\n        this.ws.send(JSON.stringify(data));\n      }\n    };\n\n    // TODO: handle error\n    this.ws.onerror = error => {};\n\n    // listen to onmessage event\n    this.ws.onmessage = evt => {\n      // add the new message to state\n      if (evt.data === 'ping') {\n        try {\n          timer = 0;\n          this.ws.send('pong');\n        } catch {}\n      } else {\n        this.parseData(evt);\n      }\n    };\n\n    this.ws.onclose = () => {};\n  }\n\n  getTradeArg(market) {\n    return `trade&${market}`;\n  }\n\n  getDepthArg(market, level) {\n    return `depth&${market}&${level}`;\n  }\n\n  getTickerArg(market) {\n    return `ticker&${market}`;\n  }\n\n  getAccountArg() {\n    return 'account';\n  }\n\n  getOrderArg(market) {\n    return `order&${market}`;\n  }\n\n  parseData(evt) {\n    const parsedData = JSON.parse(evt.data);\n    const parsedTopic = parsedData['topic'];\n    if (\n      parsedTopic &&\n      parsedTopic.toLowerCase().split('&') &&\n      parsedTopic.toLowerCase().split('&').length > 0\n    ) {\n      const topic = parsedTopic.toLowerCase().split('&')[0];\n      const data = parsedData['data'];\n      switch (topic) {\n        case 'account':\n          if (this.props.account.state === LOGGED_IN) {\n            const balances = balanceMap([data], this.props.exchange.tokens);\n            this.props.updateMyAccountPage(balances);\n          }\n          break;\n        case 'trade':\n          const newTrades = data.map(trade => {\n            return {\n              timestamp: trade.timestamp,\n              side: trade.side,\n              size: trade.size,\n              price: Number(trade.price),\n              fee: trade.fee\n            };\n          });\n          tradeBuffer = newTrades.concat(tradeBuffer).slice(0, 80);\n\n          break;\n        case 'ticker':\n          tickerBuffer = {\n            high: data.high,\n            low: data.low,\n            size: config.fromWEI(\n              this.props.market.currentMarket.baseTokenSymbol,\n              data.size,\n              this.props.exchange.tokens\n            ),\n            volume: config.fromWEI(\n              this.props.market.currentMarket.quoteTokenSymbol,\n              data.volume,\n              this.props.exchange.tokens\n            ),\n            open: data.open,\n            close: data.close\n          };\n\n          break;\n        case 'depth':\n          const startVersion = parsedData['startVersion'];\n          if (startVersion <= this.props.market.orderBook.version + 1) {\n            const endVersion = parsedData['endVersion'];\n            const asks = data.asks.map(slot => ({\n              ...slot,\n              sizeInNumber: config.fromWEI(\n                this.props.market.currentMarket.baseTokenSymbol,\n                slot.size,\n                this.props.exchange.tokens\n              )\n            }));\n\n            const bids = data.bids.map(slot => ({\n              ...slot,\n              sizeInNumber: config.fromWEI(\n                this.props.market.currentMarket.baseTokenSymbol,\n                slot.size,\n                this.props.exchange.tokens\n              )\n            }));\n\n            this.props.updateSocketOrderBooks(\n              asks,\n              bids,\n              startVersion,\n              endVersion\n            );\n          } else {\n            this.props.fetchOrderBooks(\n              this.props.market.currentMarket.current,\n              this.props.market.orderBook.level,\n              this.props.exchange.tokens\n            );\n          }\n          break;\n\n        case 'order':\n          if (this.props.account.state === LOGGED_IN) {\n            const order = orderMap([data], this.props.exchange.tokens)[0];\n            this.props.updateSocketOrder(order);\n            this.props.updateSocketAllOrder(order);\n          }\n          break;\n\n        default:\n      }\n    }\n  }\n\n  sub(topics, apiKey = '') {\n    if (!this.ws) {\n      this.setup(topics, apiKey);\n    } else {\n      const data = {\n        op: 'sub',\n        args: topics\n      };\n      if (apiKey) {\n        data.apiKey = apiKey;\n      }\n\n      if (this.ws.readyState === 1) {\n        this.ws.send(JSON.stringify(data));\n      } else {\n        setTimeout(() => this.sub(topics, apiKey), 500);\n      }\n    }\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { market, dexAccount, exchange, myOrders } = state;\n  return { market, account: dexAccount.account, exchange, myOrders };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    extendTrades: newTrades => dispatch(extendTrades(newTrades)),\n    fetchTradeHistory: market => dispatch(fetchTradeHistory(market)),\n    updateMyAccountPage: balance => dispatch(updateMyAccountPage(balance)),\n    updateTicker: ticker => dispatch(updateTicker(ticker)),\n    fetchOrderBooks: (market, level, tokens) =>\n      dispatch(fetchOrderBooks(market, level, tokens)),\n    updateSocketOrderBooks: (sells, buys, startVersion, endVersion) =>\n      dispatch(updateSocketOrderBooks(sells, buys, startVersion, endVersion)),\n    updateSocketOrder: order => dispatch(updateSocketOrder(order)),\n    updateSocketAllOrder: order => dispatch(updateSocketAllOrder(order)),\n    emptyTrades: () => dispatch(emptyTrades),\n    emptyOrderBooks: level => dispatch(emptyOrderBooks(level)),\n    fetchMyAccountPage: (accountId, apiKey, tokens) =>\n      dispatch(fetchMyAccountPage(accountId, apiKey, tokens)),\n    fetchMyOpenOrders: (accountId, limit, offset, market, apiKey, tokens) =>\n      dispatch(\n        fetchMyOpenOrders(accountId, limit, offset, market, apiKey, tokens)\n      ),\n    fetchMyHistoryOrders: (accountId, limit, offset, market, apiKey, tokens) =>\n      dispatch(\n        fetchMyHistoryOrders(accountId, limit, offset, market, apiKey, tokens)\n      )\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WebSocketService);\n","import { Button, Tooltip } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport AppLayout from 'AppLayout';\nconst MyButton = styled(Button)`\n  font-size: 0.9rem !important;\n  font-weight: 600 !important;\n  border: none !important;\n  height: calc(${AppLayout.topNavBarHeight} - 24px);\n  margin-top: 12px;\n  margin-bottom: auto;\n  margin-right: 16px;\n  min-width: 164px;\n  padding: auto;\n  cursor: default !important;\n  color: ${props =>\n    props.bgcolor ? colors.textBright : colors.textWhite}!important;\n  background-color: ${props => props.bgcolor || colors.foreground}!important;\n  &:hover {\n    background-color: ${props =>\n      props.bgcolor || colors.buttonBackground}!important;\n    color: ${colors.textBright}!important;\n  }\n\n  &[disabled] {\n    cursor: default !important;\n    background-color: ${props => props.bgcolor || colors.foreground}!important;\n    color: ${colors.textBright}!important;\n  }\n`;\n\nexport default class BaseEntranceButton extends React.Component {\n  render() {\n    return (\n      <Tooltip\n        overlayStyle={{\n          color: colors.textWhite,\n          fontSize: '0.85rem'\n        }}\n        placement=\"leftBottom\"\n        title={this.props.tooltip}\n      >\n        <MyButton\n          bgcolor={this.props.bgcolor}\n          disabled={this.props.disabled || false}\n          onClick={() => (this.props.onClick ? this.props.onClick() : {})}\n        >\n          <div\n            style={{\n              lineHeight: '32px',\n              display: 'block',\n              width: '100%',\n              verticalAlign: 'middle'\n            }}\n          >\n            <FontAwesomeIcon\n              style={{\n                width: '14px',\n                height: '14px',\n                marginRight: '12px'\n              }}\n              color={this.props.iconColor}\n              icon={this.props.icon}\n              spin={this.props.spin || false}\n            />\n            <div\n              style={{\n                display: 'inline-block',\n                textAlign: 'center'\n              }}\n            >\n              {this.props.title}\n            </div>\n          </div>\n        </MyButton>\n      </Tooltip>\n    );\n  }\n}\n\nBaseEntranceButton.defaultProps = {\n  onClick: () => {}\n};\n\nBaseEntranceButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { faArrowAltCircleDown } from '@fortawesome/free-solid-svg-icons/faArrowAltCircleDown';\nimport { faArrowAltCircleUp } from '@fortawesome/free-solid-svg-icons/faArrowAltCircleUp';\nimport { faBug } from '@fortawesome/free-solid-svg-icons/faBug';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons/faCircleNotch';\nimport { faCode } from '@fortawesome/free-solid-svg-icons/faCode';\nimport { faExternalLinkSquareAlt } from '@fortawesome/free-solid-svg-icons/faExternalLinkSquareAlt';\n\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport { faFileSignature } from '@fortawesome/free-solid-svg-icons/faFileSignature';\nimport { faKey } from '@fortawesome/free-solid-svg-icons/faKey';\nimport { faLock } from '@fortawesome/free-solid-svg-icons/faLock';\nimport { faLockOpen } from '@fortawesome/free-solid-svg-icons/faLockOpen';\nimport { faPencilRuler } from '@fortawesome/free-solid-svg-icons/faPencilRuler';\nimport { faPlug } from '@fortawesome/free-solid-svg-icons/faPlug';\nimport { faRulerCombined } from '@fortawesome/free-solid-svg-icons/faRulerCombined';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons/faSpinner';\nimport { faUnlink } from '@fortawesome/free-solid-svg-icons/faUnlink';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons/faUserCircle';\n\nimport { faCrown } from '@fortawesome/free-solid-svg-icons/faCrown';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons/faFileAlt';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons/faTrophy';\nimport { faWaveSquare } from '@fortawesome/free-solid-svg-icons/faWaveSquare';\n\nimport { ActionButton } from 'styles/Styles';\nimport { connectToMetaMask } from 'redux/actions/MetaMask';\n\nimport { fetchAllExchangeInfo } from 'redux/actions/ExchangeInfo';\n\nimport {\n  loginModal,\n  registerAccountModal,\n  resetPasswordModal,\n  showDepositModal,\n  showEnterPasswordModal,\n  showExportAccountModal,\n  showLogoutModal,\n  showSideBar,\n  showWithdrawModal\n} from 'redux/actions/ModalManager';\nimport BaseEntranceButton from 'components/top-nav-bar/BaseEntranceButton';\nimport Blockies from 'react-blockies';\n\nimport { fetchAccounts } from 'redux/actions/Web3';\nimport { fetchCmcPrice } from 'redux/actions/CmcPrice';\nimport { fetchGasPrice } from 'redux/actions/GasPrice';\nimport { fetchMarketList } from 'redux/actions/market/MarketList';\nimport { fetchTokens } from 'redux/actions/Tokens';\nimport { updateColumns } from 'redux/actions/LayoutManager';\nimport { updatePrice } from 'redux/actions/TradePanel';\n\nimport { getEtherscanLink } from 'lightcone/api/localStorgeAPI';\n\nimport {\n  LOGGED_IN,\n  METAMASK_NOT_FOUND,\n  NOT_REGISTERED,\n  REGISTERED,\n  REGISTERING,\n  RESETTING_PASSWORD,\n  UNDEFINED,\n  WALLET_UNCONNECTED,\n  getDataFromLocalStorage,\n  updateAccount\n} from 'redux/actions/DexAccount';\n\nimport { tracker } from 'components/DefaultTracker';\n\nimport './TopNavBar.less';\nimport {\n  MenuFontAwesomeIcon,\n  SideBarButton,\n  SideBarDrawer,\n  SideBarGroupLabel,\n  SideBarGroupSeperator\n} from '../SideBarDrawer';\n\nconst MyBlockies = styled(Blockies)`\n  border-radius: 50%;\n  width: 36px !important;\n  height: 36px !important;\n  border: 2px solid ${colors.textWhite};\n`;\n\nconst AddressAvatarButton = ({ fullAddress, address }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: AppLayout.topNavBarHeight\n      }}\n    >\n      <MyBlockies seed={fullAddress} />\n\n      <span\n        style={{\n          marginLeft: '12px',\n          userSelect: 'none',\n          color: colors.textWhite,\n          fontSize: '0.9rem',\n          fontWeight: '600'\n        }}\n      >\n        {address}\n      </span>\n    </div>\n  );\n};\n\nclass EntranceButton extends React.Component {\n  state = {\n    buttonType: 'UNKNOWN'\n  };\n\n  defaultButton = (\n    <BaseEntranceButton\n      spin\n      icon={faSpinner}\n      title={\n        <span style={{ color: colors.textDim }}>\n          <I s=\"Loading...\" />\n        </span>\n      }\n      iconColor={colors.textDim}\n      onClick={() => {}}\n    />\n  );\n  pendingButtonJob = null;\n  pendingButton = {\n    type: this.state.buttonType,\n    button: this.defaultButton\n  };\n\n  askMetaMaskConnect = () => {\n    this.props.connectToMetaMask(true);\n  };\n\n  getWalletAddress = () => {\n    let walletAddress = '';\n    if (\n      typeof this.props.dexAccount.account !== 'undefined' &&\n      typeof this.props.dexAccount.account.address !== 'undefined'\n    ) {\n      walletAddress = this.props.dexAccount.account.address;\n      walletAddress =\n        walletAddress.substring(0, 7) + '...' + walletAddress.slice(-7);\n    }\n    return walletAddress;\n  };\n\n  pressedExportAccountButton = () => {\n    this.props.showEnterPasswordModal(true);\n    this.props.showSideBar(false);\n  };\n\n  pressedLogoutButton = () => {\n    this.props.showLogoutModal(true);\n    this.props.showSideBar(false);\n  };\n\n  pressedDepositButton = () => {\n    this.props.showDepositModal(true);\n    this.props.showSideBar(false);\n  };\n\n  pressedWithdrawButton = () => {\n    this.props.showWithdrawModal(true);\n    this.props.showSideBar(false);\n  };\n  pressedResetPasswordButton = () => {\n    this.props.resetPasswordModal(true);\n    this.props.showSideBar(false);\n  };\n\n  updateAccountStateInRedux(state) {\n    const { dexAccount, updateAccount } = this.props;\n    const { account } = dexAccount;\n    updateAccount({\n      ...account,\n      state\n    });\n  }\n\n  scheduleButtonUpdate(pendingButton) {\n    if (this.pendingButton.type !== pendingButton.type) {\n      this.pendingButton = pendingButton;\n      clearTimeout(this.pendingButtonJob);\n\n      this.pendingButtonJob = setTimeout(() => {\n        this.setState({\n          buttonType: pendingButton.type\n        });\n\n        tracker.trackEvent({\n          type: 'USER_STATE',\n          data: {\n            state: pendingButton.type\n          }\n        });\n      }, pendingButton.timeout || 1500);\n    }\n  }\n\n  createButtonAndDrawer(pendingButton) {\n    return (\n      <div>\n        {pendingButton.button()}\n        {pendingButton.drawerContent ? (\n          <SideBarDrawer\n            header={pendingButton.drawerHeader()}\n            body={pendingButton.drawerContent()}\n            footer={\n              pendingButton.drawerFooter ? (\n                pendingButton.drawerFooter()\n              ) : (\n                <div />\n              )\n            }\n            onClose={() => this.props.showSideBar(false)}\n            visible={this.props.isSideBarVisible}\n          />\n        ) : (\n          <span />\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { account } = this.props.dexAccount;\n    const { isDesiredNetwork } = this.props.metaMask;\n\n    const myAddressLinks = (\n      <div>\n        <SideBarGroupSeperator />\n        <SideBarGroupLabel>\n          <I s=\"MenuMyEthAccount\" />\n        </SideBarGroupLabel>\n        <SideBarButton\n          key=\"myaddress\"\n          onClick={() => {\n            window.open(\n              `${getEtherscanLink(this.props.exchange.chainId)}/address/${\n                this.props.dexAccount.account.address\n              }`\n            );\n          }}\n        >\n          <MenuFontAwesomeIcon icon={faExternalLinkSquareAlt} />\n          <I s=\"Show on Etherscan\" />\n        </SideBarButton>\n      </div>\n    );\n    const commonLinks = (\n      <div>\n        <SideBarGroupSeperator />\n        <SideBarGroupLabel>\n          <I s=\"MenuSupportGroup\" />\n        </SideBarGroupLabel>\n\n        <SideBarButton\n          key=\"dexcongtract\"\n          onClick={() =>\n            window.open(\n              `${getEtherscanLink(this.props.exchange.chainId)}/address/${\n                this.props.exchange.exchangeAddress\n              }`,\n              '_blank'\n            )\n          }\n        >\n          <MenuFontAwesomeIcon icon={faPencilRuler} />\n          <I s=\"DEX Smart Contract (Beta1)\" />\n        </SideBarButton>\n\n        <SideBarButton\n          key=\"loopring\"\n          onClick={() => window.open('https://loopring.org', '_blank')}\n        >\n          <MenuFontAwesomeIcon icon={faRulerCombined} />\n          <I s=\"Loopring Protocol\" />\n        </SideBarButton>\n\n        <SideBarButton\n          key=\"bug\"\n          onClick={() => {\n            window.open(\n              'https://github.com/Loopring/dex-ux/issues/new',\n              '_blank'\n            );\n          }}\n        >\n          <MenuFontAwesomeIcon icon={faBug} />\n          <I s=\"Report a Bug\" />\n        </SideBarButton>\n\n        <SideBarButton\n          key=\"legal\"\n          onClick={() => {\n            window.open('/legal/terms', '_blank');\n            this.props.showSideBar(false);\n          }}\n        >\n          <MenuFontAwesomeIcon icon={faFileSignature} />\n          <I s=\"Legal Documents\" />\n        </SideBarButton>\n\n        <SideBarGroupSeperator />\n        <SideBarGroupLabel>\n          <I s=\"Documentation\" />\n        </SideBarGroupLabel>\n\n        <SideBarButton\n          hoverbg={colors.orange}\n          colortxt={colors.orange}\n          onClick={() => {\n            window.open('/document/beta1', '_blank');\n            this.props.showSideBar(false);\n          }}\n        >\n          <MenuFontAwesomeIcon icon={faTrophy} />\n          <I s=\"Beta1 Testing Rewards\" />\n        </SideBarButton>\n\n        <SideBarButton\n          key=\"fees\"\n          onClick={() => {\n            window.open('/document/fees', '_blank');\n            this.props.showSideBar(false);\n          }}\n        >\n          <MenuFontAwesomeIcon icon={faFileAlt} />\n          <I s=\"Fee Schedule\" />\n        </SideBarButton>\n\n        <SideBarButton\n          key=\"listing\"\n          onClick={() => {\n            window.open('/document/listing', '_blank');\n            this.props.showSideBar(false);\n          }}\n        >\n          <MenuFontAwesomeIcon icon={faFileAlt} />\n          <I s=\"Token Listing\" />\n        </SideBarButton>\n\n        <SideBarButton\n          key=\"api\"\n          disabled\n          onClick={() => {\n            window.open('/document/api', '_blank');\n            this.props.showSideBar(false);\n          }}\n        >\n          <MenuFontAwesomeIcon icon={faFileAlt} />\n          <I s=\"Relayer API\" />\n        </SideBarButton>\n      </div>\n    );\n\n    if (account.state === METAMASK_NOT_FOUND) {\n      this.scheduleButtonUpdate({\n        type: 'METAMASK_NOT_FOUND',\n        button: () => (\n          <div\n            onMouseEnter={() => {\n              this.props.showSideBar(true);\n            }}\n          >\n            <BaseEntranceButton\n              bgcolor={colors.red}\n              icon={faUnlink}\n              iconColor={colors.textBright}\n              title={<I s=\"Web3 Unavailable\" />}\n            />\n          </div>\n        ),\n        drawerHeader: () => {\n          return (\n            <BaseEntranceButton\n              bgcolor={'transparent'}\n              icon={faUnlink}\n              title={<I s=\"Web3 Unavailable\" />}\n            />\n          );\n        },\n        drawerContent: () => {\n          return (\n            <div>\n              <div\n                style={{\n                  paddingTop: '32px',\n                  width: '100%',\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  textAlign: 'center'\n                }}\n              >\n                <FontAwesomeIcon\n                  style={{\n                    color: colors.red\n                  }}\n                  size=\"3x\"\n                  icon={faUnlink}\n                />\n                <div\n                  style={{\n                    fontSize: '0.9rem',\n                    margin: '32px 8px',\n                    color: colors.textWhite\n                  }}\n                >\n                  <I s=\"Web3UnavailableTip\" />\n                </div>\n              </div>\n\n              {commonLinks}\n            </div>\n          );\n        }\n      });\n    } else if (\n      account.state === WALLET_UNCONNECTED ||\n      account.state === UNDEFINED\n    ) {\n      this.scheduleButtonUpdate({\n        type: 'WALLET_UNCONNECTED',\n        timeout: 2000,\n        button: () => (\n          <div\n            onMouseEnter={() => {\n              this.props.showSideBar(true);\n            }}\n          >\n            <BaseEntranceButton\n              icon={faPlug}\n              bgcolor={colors.theme}\n              title={<I s=\"Connect to Web3\" />}\n            />\n          </div>\n        ),\n        drawerHeader: () => {\n          return (\n            <BaseEntranceButton\n              bgcolor={'transparent'}\n              icon={faPlug}\n              title={<I s=\"Connect to Web3\" />}\n            />\n          );\n        },\n        drawerContent: () => {\n          return (\n            <div>\n              <div\n                style={{\n                  paddingTop: '32px',\n                  width: '100%',\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  textAlign: 'center'\n                }}\n              >\n                <FontAwesomeIcon\n                  style={{\n                    color: colors.theme\n                  }}\n                  size=\"3x\"\n                  icon={faPlug}\n                />\n                <div\n                  style={{\n                    fontSize: '0.9rem',\n                    margin: '32px',\n                    color: colors.textWhite\n                  }}\n                >\n                  <I s=\"ConnectToWeb3Tip\" />\n                </div>\n\n                <div style={{ margin: '16px' }}>\n                  <ActionButton onClick={() => this.askMetaMaskConnect()}>\n                    <I s=\"Connect to Web3\" />\n                  </ActionButton>\n                </div>\n              </div>\n              {myAddressLinks}\n\n              {commonLinks}\n            </div>\n          );\n        }\n      });\n    } else if (isDesiredNetwork) {\n      switch (account.state) {\n        case WALLET_UNCONNECTED:\n          break;\n\n        case RESETTING_PASSWORD:\n          this.scheduleButtonUpdate({\n            type: 'RESETTING_PASSWORD',\n            button: () => (\n              <div\n                onMouseEnter={() => {\n                  this.props.showSideBar(true);\n                }}\n              >\n                <BaseEntranceButton\n                  spin\n                  icon={faCircleNotch}\n                  iconColor={colors.theme}\n                  title={<I s=\"Reseting Password...\" />}\n                />\n              </div>\n            ),\n            drawerHeader: () => {\n              return (\n                <AddressAvatarButton\n                  fullAddress={this.props.dexAccount.account.address}\n                  address={this.getWalletAddress()}\n                />\n              );\n            },\n            drawerContent: () => {\n              return (\n                <div>\n                  <div\n                    style={{\n                      paddingTop: '32px',\n                      width: '100%',\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      textAlign: 'center'\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{\n                        color: colors.theme\n                      }}\n                      spin\n                      size=\"3x\"\n                      icon={faCircleNotch}\n                    />\n                    <div\n                      style={{\n                        fontSize: '0.9rem',\n                        margin: '32px',\n                        color: colors.textWhite\n                      }}\n                    >\n                      <I s=\"PasswordResetNotification\" />\n                    </div>\n\n                    <div style={{ margin: '16px' }}>\n                      <ActionButton\n                        buttonbackground={colors.green}\n                        onClick={this.pressedDepositButton}\n                      >\n                        <I s=\"Deposit\" />\n                      </ActionButton>\n                    </div>\n                  </div>\n                  {myAddressLinks}\n\n                  <SideBarGroupSeperator />\n                  <SideBarGroupLabel>\n                    <I s=\"MenuMyDexAccount\" />\n                  </SideBarGroupLabel>\n\n                  <SideBarButton\n                    key=\"deposit\"\n                    onClick={this.pressedDepositButton}\n                  >\n                    <MenuFontAwesomeIcon icon={faArrowAltCircleDown} />\n                    <I s=\"Deposit\" />\n                  </SideBarButton>\n\n                  {commonLinks}\n                </div>\n              );\n            }\n          });\n          break;\n\n        case NOT_REGISTERED:\n          this.scheduleButtonUpdate({\n            type: 'NOT_REGISTERED',\n            button: () => (\n              <div\n                onMouseEnter={() => {\n                  this.props.showSideBar(true);\n                }}\n              >\n                <BaseEntranceButton\n                  icon={faUserCircle}\n                  bgcolor={colors.theme}\n                  iconColor={colors.textBright}\n                  title={this.getWalletAddress()}\n                />\n              </div>\n            ),\n            drawerHeader: () => {\n              return (\n                <AddressAvatarButton\n                  fullAddress={this.props.dexAccount.account.address}\n                  address={this.getWalletAddress()}\n                />\n              );\n            },\n            drawerContent: () => {\n              return (\n                <div>\n                  <div\n                    style={{\n                      paddingTop: '32px',\n                      width: '100%',\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      textAlign: 'center'\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{\n                        color: colors.theme\n                      }}\n                      size=\"3x\"\n                      icon={faUserCircle}\n                    />\n                    <div\n                      style={{\n                        fontSize: '0.9rem',\n                        margin: '32px',\n                        color: colors.textWhite\n                      }}\n                    >\n                      <I s=\"NoAccountTooltip\" />\n                    </div>\n\n                    <div style={{ margin: '16px' }}>\n                      <ActionButton\n                        onClick={() => this.props.registerAccountModal(true)}\n                      >\n                        <I s=\"Register Account\" />\n                      </ActionButton>\n                    </div>\n                  </div>\n                  {myAddressLinks}\n\n                  {commonLinks}\n                </div>\n              );\n            }\n          });\n          break;\n\n        case REGISTERING:\n          // Lightcone API has the record for this address, however the browser doesn't have keys.\n          this.scheduleButtonUpdate({\n            type: 'REGISTERING',\n            button: () => (\n              <div\n                onMouseEnter={() => {\n                  this.props.showSideBar(true);\n                }}\n              >\n                <BaseEntranceButton\n                  spin\n                  icon={faCircleNotch}\n                  iconColor={colors.theme}\n                  title={<I s=\"Registering Account...\" />}\n                />\n              </div>\n            ),\n            drawerHeader: () => {\n              return (\n                <AddressAvatarButton\n                  fullAddress={this.props.dexAccount.account.address}\n                  address={this.getWalletAddress()}\n                />\n              );\n            },\n            drawerContent: () => {\n              return (\n                <div>\n                  <div\n                    style={{\n                      paddingTop: '32px',\n                      width: '100%',\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      textAlign: 'center'\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{\n                        color: colors.theme\n                      }}\n                      spin\n                      size=\"3x\"\n                      icon={faCircleNotch}\n                    />\n                    <div\n                      style={{\n                        fontSize: '0.9rem',\n                        margin: '32px',\n                        color: colors.textWhite\n                      }}\n                    >\n                      <I s=\"AccountBeingRegisteredNotification\" />\n                    </div>\n\n                    <div style={{ margin: '16px' }}>\n                      <ActionButton\n                        buttonbackground={colors.green}\n                        onClick={this.pressedDepositButton}\n                      >\n                        <I s=\"Deposit\" />\n                      </ActionButton>\n                    </div>\n                  </div>\n                  {myAddressLinks}\n\n                  <SideBarGroupSeperator />\n                  <SideBarGroupLabel>\n                    <I s=\"MenuMyDexAccount\" />\n                  </SideBarGroupLabel>\n\n                  <SideBarButton\n                    key=\"deposit\"\n                    onClick={this.pressedDepositButton}\n                  >\n                    <MenuFontAwesomeIcon icon={faArrowAltCircleDown} />\n                    <I s=\"Deposit\" />\n                  </SideBarButton>\n\n                  {commonLinks}\n                </div>\n              );\n            }\n          });\n          break;\n        case REGISTERED:\n          // Lightcone API has the record for this address, however the browser doesn't have keys.\n          this.scheduleButtonUpdate({\n            type: 'REGISTERED',\n            button: () => (\n              <div\n                onMouseEnter={() => {\n                  this.props.showSideBar(true);\n                }}\n              >\n                <BaseEntranceButton\n                  icon={faLock}\n                  iconColor={colors.red}\n                  title={this.getWalletAddress()}\n                />\n              </div>\n            ),\n            drawerHeader: () => {\n              return (\n                <AddressAvatarButton\n                  fullAddress={this.props.dexAccount.account.address}\n                  address={this.getWalletAddress()}\n                />\n              );\n            },\n            drawerContent: () => {\n              return (\n                <div>\n                  <div\n                    style={{\n                      paddingTop: '32px',\n                      width: '100%',\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      textAlign: 'center'\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{\n                        color: colors.red\n                      }}\n                      size=\"3x\"\n                      icon={faLock}\n                    />\n                    <div\n                      style={{\n                        fontSize: '0.9rem',\n                        margin: '32px',\n                        color: colors.textWhite\n                      }}\n                    >\n                      <I s=\"NeedLoginTooltip\" />\n                    </div>\n\n                    <div style={{ margin: '16px' }}>\n                      <ActionButton\n                        onClick={() => {\n                          this.props.showLoginModal(true);\n                          this.props.showSideBar(false);\n                        }}\n                      >\n                        <I s=\"Login\" />\n                      </ActionButton>\n                    </div>\n                  </div>\n\n                  {myAddressLinks}\n\n                  <SideBarGroupSeperator />\n                  <SideBarGroupLabel>\n                    <I s=\"MenuMyDexAccount\" />\n                  </SideBarGroupLabel>\n\n                  <SideBarButton\n                    key=\"reset\"\n                    onClick={() => this.pressedResetPasswordButton()}\n                  >\n                    <MenuFontAwesomeIcon icon={faKey} />\n                    <I s=\"Reset Password\" />\n                  </SideBarButton>\n\n                  {commonLinks}\n                </div>\n              );\n            }\n          });\n          break;\n        case LOGGED_IN:\n          const lastVIPAccountId = 1100;\n          const iconColor =\n            this.props.dexAccount.account.accountId <= lastVIPAccountId\n              ? colors.orange\n              : colors.green;\n          const icon =\n            this.props.dexAccount.account.accountId <= lastVIPAccountId\n              ? faCrown\n              : faLockOpen;\n\n          const vipBadge =\n            this.props.dexAccount.account.accountId <= lastVIPAccountId ? (\n              <div\n                style={{\n                  color: colors.orange,\n                  fontSize: '0.75rem',\n                  paddingTop: '4px',\n                  textTransform: 'uppercase',\n                  fontWeight: '600'\n                }}\n              >\n                <I s=\"VIP4\" />\n\n                <div\n                  style={{\n                    fontSize: '0.75rem',\n                    paddingTop: '4px',\n                    padding: '20px',\n                    opacity: '0.8',\n                    textTransform: 'none'\n                  }}\n                >\n                  <I s=\"VIP4Tip\" />\n                </div>\n              </div>\n            ) : (\n              <span />\n            );\n\n          this.scheduleButtonUpdate({\n            type: 'LOGGED_IN',\n            button: () => (\n              <div\n                onMouseEnter={() => {\n                  this.props.showSideBar(true);\n                }}\n              >\n                <BaseEntranceButton\n                  icon={icon}\n                  iconColor={iconColor}\n                  title={this.getWalletAddress()}\n                />\n              </div>\n            ),\n\n            drawerHeader: () => {\n              return (\n                <AddressAvatarButton\n                  fullAddress={this.props.dexAccount.account.address}\n                  address={this.getWalletAddress()}\n                />\n              );\n            },\n\n            drawerContent: () => {\n              return (\n                <div>\n                  <div\n                    style={{\n                      paddingTop: '32px',\n                      width: '100%',\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      textAlign: 'center'\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{\n                        color: iconColor\n                      }}\n                      size=\"3x\"\n                      icon={icon}\n                    />\n                    {vipBadge}\n                    <div\n                      style={{\n                        fontSize: '0.9rem',\n                        margin: '32px',\n                        color: colors.textWhite\n                      }}\n                    >\n                      <I s=\"YouHaveLoggedInTooltip\" />\n                    </div>\n                    <div style={{ margin: '16px' }}>\n                      <ActionButton\n                        buttonbackground={colors.red}\n                        onClick={() => this.props.showLogoutModal(true)}\n                      >\n                        <I s=\"Logout\" />\n                      </ActionButton>\n                    </div>\n                  </div>\n                  {myAddressLinks}\n\n                  <SideBarGroupSeperator />\n                  <SideBarGroupLabel>\n                    <I s=\"MenuMyDexAccount\" />\n                  </SideBarGroupLabel>\n\n                  <SideBarButton\n                    key=\"deposit\"\n                    onClick={this.pressedDepositButton}\n                  >\n                    <MenuFontAwesomeIcon icon={faArrowAltCircleDown} />\n                    <I s=\"Deposit\" />\n                  </SideBarButton>\n\n                  <SideBarButton\n                    key=\"withdraw\"\n                    onClick={this.pressedWithdrawButton}\n                  >\n                    <MenuFontAwesomeIcon icon={faArrowAltCircleUp} />\n                    <I s=\"Withdraw\" />\n                  </SideBarButton>\n\n                  <SideBarButton\n                    key=\"reset\"\n                    onClick={() => this.pressedResetPasswordButton()}\n                  >\n                    <MenuFontAwesomeIcon icon={faKey} />\n                    <I s=\"Reset Password\" />\n                  </SideBarButton>\n\n                  <SideBarButton\n                    key=\"export\"\n                    onClick={() => this.pressedExportAccountButton()}\n                  >\n                    <MenuFontAwesomeIcon icon={faCode} />\n                    <I s=\"Export Account\" />\n                  </SideBarButton>\n\n                  {commonLinks}\n                </div>\n              );\n            }\n          });\n\n          break;\n\n        default:\n          console.error('unhandled account state ', account.state);\n      }\n    } else if (isDesiredNetwork === false) {\n      const desiredNetwork = this.props.exchange.chainId;\n      let netWorkName = 'EthereumMainNet';\n      if (desiredNetwork === 4) netWorkName = 'EthereumRinkebyTestnet';\n      else if (desiredNetwork === 5) netWorkName = 'EthereumGörliTestNet';\n\n      this.scheduleButtonUpdate({\n        type: 'WRONG_NETWORK',\n        button: () => (\n          <div\n            onMouseEnter={() => {\n              this.props.showSideBar(true);\n            }}\n          >\n            <BaseEntranceButton\n              bgcolor={colors.red}\n              icon={faWaveSquare}\n              title={<I s=\"Wrong Network\" />}\n            />\n          </div>\n        ),\n        drawerHeader: () => {\n          return (\n            <BaseEntranceButton\n              bgcolor={'transparent'}\n              icon={faWaveSquare}\n              title={<I s=\"Wrong Network\" />}\n            />\n          );\n        },\n        drawerContent: () => {\n          return (\n            <div>\n              <div\n                style={{\n                  paddingTop: '32px',\n                  width: '100%',\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  textAlign: 'center'\n                }}\n              >\n                <FontAwesomeIcon\n                  style={{\n                    color: colors.red\n                  }}\n                  size=\"3x\"\n                  icon={faWaveSquare}\n                />\n                <div\n                  style={{\n                    fontSize: '0.9rem',\n                    margin: '32px',\n                    color: colors.textWhite\n                  }}\n                >\n                  <span>\n                    <I s=\"UnsupportedNetworkWarning\" />\n                    <I s={netWorkName} />\n                  </span>\n                </div>\n              </div>\n\n              {commonLinks}\n            </div>\n          );\n        }\n      });\n    }\n\n    return (\n      <div>\n        {this.state.buttonType === 'UNKNOWN'\n          ? this.defaultButton\n          : this.createButtonAndDrawer(this.pendingButton)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { pathname } = state.router.location;\n  const { dexAccount, metaMask, exchange, modalManager } = state;\n  const isSideBarVisible = modalManager.isSideBarVisible;\n\n  return {\n    pathname,\n    dexAccount,\n    metaMask,\n    exchange,\n    isSideBarVisible\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    connectToMetaMask: startConnecting =>\n      dispatch(connectToMetaMask(startConnecting)),\n    showExportAccountModal: show => dispatch(showExportAccountModal(show)),\n    showEnterPasswordModal: show => dispatch(showEnterPasswordModal(show)),\n    showLogoutModal: show => dispatch(showLogoutModal(show)),\n    resetPasswordModal: show => dispatch(resetPasswordModal(show)),\n    showDepositModal: show => dispatch(showDepositModal(show)),\n    showWithdrawModal: show => dispatch(showWithdrawModal(show)),\n    registerAccountModal: show => dispatch(registerAccountModal(show)),\n    showLoginModal: show => dispatch(loginModal(show)),\n    getDataFromLocalStorage: address =>\n      dispatch(getDataFromLocalStorage(address)),\n    fetchTokens: () => dispatch(fetchTokens()),\n    fetchMarketList: () => dispatch(fetchMarketList()),\n    updatePrice: price => dispatch(updatePrice(price)),\n    updateColumns: () => dispatch(updateColumns()),\n    fetchGasPrice: () => dispatch(fetchGasPrice()),\n    fetchCmcPrice: legal => dispatch(fetchCmcPrice(legal)),\n    updateAccount: account => dispatch(updateAccount(account)),\n    fetchAllExchangeInfo: () => dispatch(fetchAllExchangeInfo()),\n    showSideBar: show => dispatch(showSideBar(show))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntranceButton);\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, ConfigProvider, Menu } from 'antd';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport colors from 'colors';\n\nimport { history } from 'redux/configureStore';\nimport SiteLogo from 'components/top-nav-bar/SiteLogo';\n\nimport { fetchAllExchangeInfo } from 'redux/actions/ExchangeInfo';\nimport ConfirmLogoutModal from 'modals/LogoutModal';\nimport DepositModal from 'modals/DepositModal';\nimport DexAccountBalanceService from 'components/services/DexAccountBalanceService';\nimport DexAccountOrderService from 'components/services/DexAccountOrderService';\nimport DexAccountService from 'components/services/DexAccountService';\nimport EnterPasswordModal from 'modals/EnterPasswordModal';\nimport ExportAccountModal from 'modals/ExportAccountModal';\nimport HealthCheckService from 'components/services/HealthCheckService';\nimport LoginModal from 'modals/LoginModal';\nimport MetaMaskService from 'components/services/MetaMaskService';\nimport RegisterAccountModal from 'modals/RegisterAccountModal';\nimport ResetPasswordModal from 'modals/ResetPasswordModal';\nimport WebSocketService from 'components/services/WebSocketService';\nimport WithdrawModal from 'modals/WithdrawModal';\n\nimport { fetchCmcPrice } from 'redux/actions/CmcPrice';\nimport { fetchGasPrice } from 'redux/actions/GasPrice';\nimport { fetchMarketList } from 'redux/actions/market/MarketList';\nimport { fetchNonce } from 'redux/actions/Nonce';\nimport { fetchTokens } from 'redux/actions/Tokens';\n\nimport { LOGGED_IN } from 'redux/actions/DexAccount';\n\nimport { getRefreshDurationInMillionSeconds } from 'lightcone/api/LightconeAPI';\n\nimport './TopNavBar.less';\nimport { NavButtonWrapper } from 'styles/Styles';\nimport EntranceButton from 'components/top-nav-bar/EntranceButton';\n\nconst NavButton = styled(Button)`\n  padding-left: 8px !important;\n  padding-right: 8px !important;\n  font-size: 1.2rem !important;\n  font-weight: 600 !important;\n  background-color: transparent !important;\n  height: ${AppLayout.topNavBarHeight}!important;\n  border: none !important;\n  border-radius: 0 !important;\n  border-bottom-style: solid !important;\n  border-bottom-width: 3px !important;\n  border-bottom-color: ${props =>\n    props.active === 1 ? colors.theme + '!important' : 'transparent!important'};\n\n  &:hover {\n    color: ${colors.textBright}!important;\n  }\n\n  &[disabled] {\n    color: ${colors.textDim}!important;\n  }\n`;\n\nclass TopNavBar extends React.Component {\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchAllExchangeInfo();\n    this.mainFunctionToCallAPI();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.dexAccount.account.state !==\n        nextProps.dexAccount.account.state ||\n      this.props.pathname !== nextProps.pathname\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // MetaMask related code will be moved to MetaMaskService\n  mainFunctionToCallAPI = () => {\n    (async () => {\n      try {\n        await this.props.fetchTokens();\n        await this.props.fetchMarketList();\n        this.props.fetchCmcPrice(this.props.cmcPrice.legal);\n      } catch (error) {\n      } finally {\n        this.tick();\n      }\n    })();\n  };\n\n  tick = () => {\n    try {\n      if (\n        typeof window.wallet !== 'undefined' &&\n        typeof window.wallet.address !== 'undefined'\n      ) {\n        (async () => {\n          this.props.fetchNonce(window.wallet.address);\n          this.props.fetchGasPrice();\n        })();\n      }\n\n      this.props.fetchCmcPrice(this.props.cmcPrice.legal);\n    } catch (error) {\n    } finally {\n      if (this.mounted) {\n        setTimeout(\n          () => this.tick.bind(this)(),\n          getRefreshDurationInMillionSeconds()\n        );\n      }\n    }\n  };\n\n  render() {\n    const { account } = this.props.dexAccount;\n\n    const onTradePage = this.props.pathname.includes('/trade/');\n    const disableTopTabs =\n      this.props.pathname.includes('/document/') ||\n      this.props.pathname.includes('/legal/');\n\n    return (\n      <div>\n        <ConfigProvider>\n          <div\n            className=\"desktop-layout\"\n            style={{\n              borderTop: `0px none ${colors.border}`,\n              borderBottomStyle: 'none'\n            }}\n            ref={menuButton => (this._settingsButtonElement = menuButton)}\n          >\n            <RegisterAccountModal />\n            <LoginModal />\n            <DepositModal />\n            <ResetPasswordModal />\n            <WithdrawModal />\n            <EnterPasswordModal />\n            <MetaMaskService />\n            <DexAccountBalanceService />\n            <DexAccountOrderService />\n            <DexAccountService />\n            <HealthCheckService />\n            <WebSocketService {...this.props} />\n\n            <ConfirmLogoutModal />\n            <ExportAccountModal />\n            <Menu\n              mode=\"horizontal\"\n              style={{\n                background: colors.background\n              }}\n            >\n              <NavButtonWrapper\n                key=\"logo\"\n                style={{\n                  width: `calc(${AppLayout.tradePanelWidth})`,\n                  height: AppLayout.topNavBarHeight,\n                  background:\n                    onTradePage || disableTopTabs\n                      ? colors.sidePanelBackground\n                      : colors.background,\n                  borderRightStyle: 'solid',\n                  borderRightWidth: '1px',\n                  borderRightColor:\n                    onTradePage || disableTopTabs\n                      ? colors.background\n                      : colors.foreground\n                }}\n              >\n                <SiteLogo showSettingIcon={onTradePage || disableTopTabs} />\n              </NavButtonWrapper>\n\n              <NavButtonWrapper key=\"trade\" disabled={disableTopTabs}>\n                <NavButton\n                  active={onTradePage ? 1 : 0}\n                  onClick={() => {\n                    history.push('/trade/' + this.props.currentMarket);\n                  }}\n                >\n                  <I s=\"Trade\" />\n                </NavButton>\n              </NavButtonWrapper>\n              <NavButtonWrapper key=\"orders\" disabled={disableTopTabs}>\n                <NavButton\n                  active={this.props.pathname.includes('orders') ? 1 : 0}\n                  onClick={() => {\n                    history.push('/orders/open-orders');\n                  }}\n                  disabled={account.state !== LOGGED_IN}\n                >\n                  <I s=\"Orders\" />\n                </NavButton>\n              </NavButtonWrapper>\n              <NavButtonWrapper key=\"account\" disabled={disableTopTabs}>\n                <NavButton\n                  active={this.props.pathname.includes('account') ? 1 : 0}\n                  onClick={() => {\n                    history.push('/account/balances');\n                  }}\n                  disabled={account.state !== LOGGED_IN}\n                >\n                  <I s=\"Account\" />\n                </NavButton>\n              </NavButtonWrapper>\n\n              {/*The next component should be in a seperate file*/}\n              <NavButtonWrapper\n                key=\"alipay\"\n                style={{\n                  float: 'right',\n                  paddingLeft: '0px',\n                  paddingRight: '0px',\n                  height: '50px'\n                }}\n              >\n                <EntranceButton />\n              </NavButtonWrapper>\n            </Menu>\n          </div>\n          <div className=\"mobile-layout\">\n            <Menu\n              mode=\"horizontal\"\n              style={{\n                background: colors.background\n              }}\n            >\n              <NavButtonWrapper\n                key=\"logo\"\n                style={{\n                  width: `calc(${AppLayout.tradePanelWidth})`,\n                  height: AppLayout.topNavBarHeight,\n                  background: colors.background,\n                  borderRightStyle: 'solid',\n                  borderRightWidth: '1px',\n                  borderRightColor: colors.foreground\n                }}\n              >\n                <SiteLogo />\n              </NavButtonWrapper>\n            </Menu>\n          </div>\n        </ConfigProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { pathname } = state.router.location;\n  const { dexAccount, cmcPrice, market } = state;\n  return {\n    pathname,\n    dexAccount,\n    cmcPrice,\n    currentMarket: market.currentMarket.current\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTokens: () => dispatch(fetchTokens()),\n    fetchMarketList: () => dispatch(fetchMarketList()),\n    fetchNonce: address => dispatch(fetchNonce(address)),\n    fetchGasPrice: () => dispatch(fetchGasPrice()),\n    fetchCmcPrice: legal => dispatch(fetchCmcPrice(legal)),\n    fetchAllExchangeInfo: () => dispatch(fetchAllExchangeInfo())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavBar);\n","import { Tracker } from 'react-tracker';\n\nvar lastPageView = null;\nconst trackPageview = ({ url, preUrl }) => {\n  if (window._czc) {\n    const item = ['_trackPageview', url, preUrl];\n    if (\n      lastPageView &&\n      lastPageView[1] === item[1] &&\n      lastPageView[2] === item[2]\n    ) {\n      return;\n    }\n    lastPageView = item;\n    window._czc.push();\n  }\n};\n\nvar lastEvent = null;\nconst trackEvent = ({ category, action, label, value, nodeid }) => {\n  if (window._czc) {\n    const item = ['_trackEvent', category, action, label, value, nodeid];\n    if (lastEvent && lastEvent[1] === item[1] && lastEvent[2] === item[2]) {\n      return;\n    }\n    lastEvent = item;\n    window._czc.push(item);\n  }\n};\n\nvar lastCustomVar = null;\nconst setCustomVar = ({ name, value, time }) => {\n  if (window._czc) {\n    const item = ['_setCustomVar', name, value, time];\n    if (\n      lastCustomVar &&\n      lastCustomVar[1] === item[1] &&\n      lastCustomVar[2] === item[2]\n    ) {\n      return;\n    }\n    lastCustomVar = item;\n    window._czc.push(item);\n  }\n};\n\nconst umengTrack = (event, eventsHistory) => {\n  switch (event.type) {\n    case 'SHOW_REGISTER_ACCOUNT':\n    case 'SHOW_DEPOSIT':\n    case 'SHOW_WITHDRAW':\n    case 'SHOW_LOGOUT_MODAL':\n    case 'SHOW_LOGIN_MODAL':\n    case 'SHOW_RESET_PASSWORD_MODAL':\n      trackPageview({ url: JSON.stringify(event) });\n      break;\n\n    case '@@router/LOCATION_CHANGE':\n      trackPageview({ url: JSON.stringify(event.payload.location) });\n      break;\n\n    case 'LOCATION_CHANGE':\n      trackPageview({ url: JSON.stringify(event.data) });\n      break;\n\n    case 'CHANGE_LANGUAGE':\n      setCustomVar({ name: 'LANG', value: event.data.lang });\n      break;\n\n    case 'USER_NOTIFICATION':\n      trackEvent({ category: 'NOTIFICATION', action: event.data.message });\n      break;\n\n    // case 'WALLET_UNLOCKED':\n    //     setCustomVar({ name: 'ADDRESS', value: event.data.address });\n    //     break;\n\n    case 'USER_STATE':\n      trackEvent({ category: 'STATE', action: event.data.state });\n      break;\n\n    case 'CONNECT_TO_META_MASK':\n    case 'UPDATE_META_MASK':\n    case 'SHOW_EXPORT_ACCOUNT':\n    case 'SHOW_ENTER_PASSWORD':\n    case 'SHOW_SIDEBAR':\n    case 'INITIALIZE_INFO':\n    case 'SET_COLOR':\n    case 'DETECT_IF_META_MASK_INSTALLED':\n    case 'UPDATE_TRADES':\n    case 'UPDATE_ORDER_BOOKS':\n    case 'UPDATE_TOKENS':\n    case 'UPDATE_TICKER':\n    case 'UPDATE_PRICE':\n    case 'UPDATE_TRADE_TYPE':\n    case 'UPDATE_AMOUNT':\n    case 'UPDATE_CANDLE':\n    case 'UPDATE_MARKET_LIST':\n    case 'UPDATE_CMC_PRICE':\n    case 'UPDATE_SOCKET_ORDER_BOOKS':\n    case 'EXTEND_TRADES':\n    case 'FETCH_ACCOUNTS_DATA_SUCCESS':\n    case 'UPDATE_MY_OPEN_ORDERS':\n    case 'UPDATE_MY_BALANCES':\n    case 'UPDATE_MY_HISTORY_ORDERS':\n    case 'UPDATE_NONCE':\n    case 'UPDATE_GAS_PRICE':\n    case 'UPDATE_ACCOUNT':\n    case 'GET_DATA_FROM_LOCALSTORAGE':\n      break;\n\n    default:\n  }\n};\n\nconst tracker = new Tracker([umengTrack]);\n\nexport { umengTrack, tracker };\n","export function compareDexAccounts(dexAccount1, dexAccount2) {\n  const account1 = dexAccount1.account;\n  const account2 = dexAccount2.account;\n\n  // The order in JSON-style objects comparison matters.\n  // We compare properties one by one here.\n  if (\n    account1 &&\n    account2 &&\n    account1.address === account2.address &&\n    account1.state === account2.state &&\n    account1.accountId === account2.accountId &&\n    account1.isFreeze === account2.isFreeze &&\n    account1.publicKeyX === account2.publicKeyX &&\n    account1.publicKeyY === account2.publicKeyY &&\n    account1.keyPairCipherText === account2.keyPairCipherText &&\n    account1.password === account2.password &&\n    account1.apiKey === account2.apiKey\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function canShowLoginModal() {\n  const href = window.location.href;\n  if (\n    href.includes('trade') ||\n    href.includes('orders') ||\n    href.includes('account')\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n"],"sourceRoot":""}