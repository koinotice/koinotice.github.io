{"version":3,"sources":["lightcone/api/v1/orders/delete.js","lightcone/api/v1/orders/get.js","lightcone/api/v1/orders/index.js","redux/actions/MetaMask.js","modals/components/ModalIndicator.js","styles/Styles.js","redux/actions/ExchangeInfo.js","redux/actions/Web3.js","pages/trade/components/defaults/util.js","redux/actions/Tokens.js","redux/actions/market/MarketList.js","lightcone/api/v1/recommendedGasPrice/get.js","redux/actions/GasPrice.js","redux/actions/Tabs.js","redux/actions/market/Ticker.js","redux/actions/market/TradeHistory.js","lightcone/sign/eddsa.js","lightcone/common/utils.js","lightcone/api/v1/price/get.js","redux/actions/CmcPrice.js","lightcone/sign/poseidon.js","redux/actions/DexAccount.js","lightcone/common/formatter.js","redux/actions/LayoutManager.js","lightcone/ethereum/contracts/AbiFunction.js","lightcone/ethereum/contracts/Contract.js","lightcone/ethereum/contracts/Contracts.js","lightcone/ethereum/contracts/index.js","lightcone/sign/exchange.js","lightcone/ethereum/metaMask.js","lightcone/wallet/wallet.js","lightcone/api/v1/ethnonce/get.js","redux/actions/Nonce.js","modals/components/LabelValue.js","modals/styles/Styles.js","lightcone/common/schemas.js","lightcone/common/validator.js","lightcone/common/index.js","redux/actions/ColorManager.js","redux/actions/market/Candle.js","redux/actions/market/CurrentMarket.js","redux/actions/ModalManager.js","modals/components/AssetDropdown.js","modals/components/PasswordRule.js","modals/ConfirmPasswordModal.js","lightcone/api/v1/tokeninfo/get.js","lightcone/api/v1/tokeninfo/index.js","lightcone/api/v1/marketinfo/get.js","lightcone/api/v1/marketinfo/index.js","lightcone/api/v1/tokenBalance/get.js","lightcone/api/v1/tokenBalance/index.js","lightcone/api/v1/ethBalance/get.js","lightcone/api/v1/ethBalance/index.js","lightcone/api/v1/balances/get.js","lightcone/api/v1/balances/index.js","icons/index.js","lightcone/wallet/index.js","lightcone/api/localStorgeAPI.js","lightcone/api/LightconeAPI.js","redux/actions/MyOrders.js","i18n.js","redux/actions/Notification.js","modals/LogoutModal.js","lightcone/sign/bitstream.js","modals/DepositModal.js","redux/reducers/CancelOrderManager.js","redux/actions/CancelOrderManager.js","redux/reducers/CmcPrice.js","redux/reducers/ColorManager.js","redux/reducers/DexAccount.js","redux/reducers/ExchangeInfo.js","redux/reducers/GasPrice.js","redux/reducers/LayoutManager.js","redux/reducers/MetaMask.js","redux/reducers/ModalManager.js","redux/reducers/MyAccountPage.js","redux/reducers/MyOrderPage.js","redux/reducers/MyOrders.js","redux/reducers/Nonce.js","redux/reducers/Tabs.js","redux/reducers/Tokens.js","redux/reducers/TradePanel.js","redux/reducers/Web3.js","redux/reducers/market/Candles.js","redux/reducers/market/CurrentMarket.js","redux/reducers/market/MarketList.js","redux/reducers/market/OrderBook.js","redux/reducers/market/Ticker.js","redux/reducers/market/TradeHistory.js","redux/reducers/index.js","redux/configureStore.js","modals/EnterPasswordModal.js","modals/ExportAccountModal.js","modals/MaintenanceModal.js","modals/LoginModal.js","redux/actions/MyAccountPage.js","modals/RegisterAccountModal.js","modals/ResetPasswordModal.js","modals/WithdrawModal.js","pages/account/components/BalanceTable.js","pages/account/components/DepositWithdrawalBaseTable.js","pages/account/components/DepositWithdrawalTable.js","pages/components/SimpleSecondaryPageLayout.js","pages/account/AccountPages.js","pages/orders/components/OrderBaseTable.js","pages/orders/components/HistoryOrdersTable.js","pages/orders/components/HistoryTradesTable.js","pages/orders/components/OpenOrdersTable.js","pages/orders/OrderPages.js","pages/legal/components/LegalTemplate.js","pages/legal/LegalPages.js","pages/docs/components/MarkdownPage.js","pages/docs/DocumentPages.js","pages/not-found/NotFoundPage.js","pages/trade/orderbook/components/OrderSizeBar.js","pages/trade/orderbook/components/OrderRow.js","pages/trade/orderbook/styles/Styles.js","pages/trade/components/AbsoluteContainer.js","pages/trade/components/CompactOrderTable.js","pages/trade/components/CompactTableHead.js","pages/trade/components/Panel.js","pages/trade/components/PanelHeader.js","pages/trade/components/PrettySize.js","pages/trade/components/PrettyPosition.js","pages/trade/components/PrettyPrice.js","pages/trade/components/ScrollContainer.js","pages/trade/orderbook/components/Spread.js","pages/trade/components/StickyContainer.js","pages/trade/orderbook/OrderBook.js","pages/trade/components/defaults/getters.js","pages/trade/orderbook-and-trade-history/components/TabHeader.js","pages/trade/trade-history/styles/Styles.js","pages/trade/trade-history/components/OrderRow.js","pages/trade/components/PrettyTimeStamp.js","pages/trade/trade-history/TradeHistory.js","pages/trade/orderbook-and-trade-history/components/AggregationWidget.js","pages/trade/orderbook-and-trade-history/OrderBookTradeHistoryPanel.js","pages/trade/open-orders/components/OrderBaseTable.js","pages/trade/open-orders/HistoricalOrders.js","pages/trade/open-orders/OpenOrders.js","pages/trade/open-orders/components/TabHeader.js","pages/trade/open-orders/OpenAndHistoricalOrders.js","modals/market-selector/components/ColumnWrapper.js","modals/market-selector/MarketSelector.js","pages/trade/ticker-bar/TickerBar.js","pages/trade/asset-panel/components/AssetPanelButtons.js","pages/trade/asset-panel/AssetPanel.js","pages/trade/trade-panel/components/TradeTabButtons.js","pages/trade/trade-panel/TradePanel.js","pages/trade/price-chart/api/index.js","pages/trade/price-chart/PriceChart.js","pages/trade/TradePage.js","routes/index.js","index.js","lightcone/config/index.js","lightcone/api/v1/allowances/get.js","modals/components/utils.js","redux/actions/TradePanel.js","lightcone/api/v1/userTrades/get.js","redux/actions/MyOrderPage.js","modals/components/Group.js","lightcone/sign/babyjub.js","lightcone/common/request.js","lightcone/api/v1/depth/get.js","redux/actions/market/OrderBook.js"],"names":["cancelOrders","accountId","orderHash","clientOrderId","signed","apiKey","a","data","signature","Rx","Ry","s","headers","request","method","url","getOrders","limit","offset","market","statuses","tokens","response","totalNum","orders","updatedOrders","map","configTokens","i","length","sizeInBigNumber","filledInBigNumber","order","updatedOrder","baseToken","split","config","fromWEI","size","feeInString","Number","filledSize","filledFee","precision","status","sizeFromWei","filledInNumber","Math","floor","push","CONNECT_TO_META_MASK","UPDATE_META_MASK","DETECT_IF_META_MASK_INSTALLED","INCREASE_REFERENCE_COUNT","connectToMetaMask","startConnecting","type","payload","updateMetaMask","detectIfMetaMaskInstalled","installed","ModalIndicator","title","tips","marginTop","imageUrl","tips_","marginTop_","icon","faCircleNotch","spin","style","margin","color","colors","orange","fontSize","fontColor","textWhite","tip","textAlign","key","alt","userSelect","height","boxShadow","src","Scroller","styled","div","NavButtonWrapper","Item","TextCompactTableHeader","span","textDim","HighlightTextSpan","RegularTextSpan","BaseActionButton","textBright","buttonBackground","ActionButton","props","buttonbackground","theme","OutlineButton","DepositOutlineButton","green","WithdrawOutlineButton","red","CancelOrderButton","LargeTableContainer","LargeTableRow","LargeTableRowStatus","LargeTableRowProcessed","LargeTableRowProcessing","highlight","LargeTableRowFailed","INITIALIZE_INFO","UPDATE_INFO","UPDATE_MARKETS","UPDATE_TOKENS","initializeInfo","info","markets","fetchAllExchangeInfo","dispatch","getInfoFromRelay","getMarketsFromRelay","getTokensFromRelay","getExchangeInfo","console","log","message","indexOf","getMarketInfo","getTokenInfo","FETCH_ACCOUNTS","FETCH_ACCOUNTS_DATA_SUCCESS","FETCH_ACCOUNTS_FULFILLED","FETCH_ACCOUNTS_REJECTED","itemsFetchDataSuccess","items","fetchAccounts","Promise","resolve","reject","web3","window","ethAccounts","getAccounts","isEmpty","eth","err","accounts","promisify","fun","params","promise","isArrayOrObject","coll","Array","isArray","lengthOrSize","hasReceivedOrderBook","bids","asks","countTrailingZeroes","numString","numZeroes","reverse","digit","dropTrailingZeroes","num","String","numTrailingZeroes","dropedZeroes","substring","endsWith","updateTokens","fetchTokens","UPDATE_MARKET_LIST","updateMarketList","fetchMarketList","getRecommendedGasPrice","UPDATE_GAS_PRICE","updateGasPrice","gasPrice","fetchGasPrice","recommendedGasPrice","formatter","toGWEI","times","UPDATE_TYPE_1","UPDATE_TYPE_2","UPDATE_TYPE_3","updateOrderBookTradeHistoryPanelType","updateMyOrdersAndMyTradesType","UPDATE_TICKER","REST_TICKER","restTicker","updateTicker","ticker","fetchTicker","getTicker","tickers","UPDATE_TRADES","EXTEND_TRADES","EMPTY_TRADES","emptyTrades","extendTrades","newTrades","fetchTradeHistory","getTradeFromRelay","fills","fill","timestamp","side","price","fee","trades","error","getTrade","generateKeyPair","seed","randomNumber","hashCode","entropy","fm","secretKey","bigInt","leBuff2int","mod","babyJub","subOrder","publicKey","mulPointEscalar","Base8","publicKeyX","toString","publicKeyY","sign","strKey","msg","prv","leInt2Buff","h1","createBlakeHash","update","digest","msgBuff","rBuff","Buffer","concat","slice","r","A","R8","hm","createHash","hasher","S","add","mul","verify","sig","pubKey","R","inCurve","Pleft","Pright","addPoint","equals","trim","str","replace","trimAll","keccakHash","toHex","keccak","calculateGas","gasLimit","toBig","hashPersonalMessage","getPrice","legal","UPDATE_CMC_LEGAL","UPDATE_CMC_PRICE","updateCmcPrice","prices","fetchCmcPrice","assert","require","F","bn128","Fr","SEED","getPseudoRandom","n","res","input","from","h","blake2b","affine","allDifferent","v","isZero","j","ark","state","c","sigma","square","mix","M","newState","zero","t","nRoundsF","nRoundsP","C","nRounds","NROUNDSF","getConstants","nonce","cmatrix","inverse","sub","getMatrix","inputs","GET_DATA_FROM_LOCALSTORAGE","RESET_PASSWORD","LOGOUT","CHANGE_ACCOUNT","UPDATE_ACCOUNT","UPDATE_REMEMBER_ME","UNDEFINED","WALLET_UNCONNECTED","METAMASK_NOT_FOUND","NOT_REGISTERED","REGISTERING","REGISTERED","RESETTING_PASSWORD","LOGGED_IN","getAllAccountStates","updateRememberMe","rememberMe","updatePassword","password","updateAccount","account","getDataFromLocalStorage","address","changeAccount","logoutAll","emptyBalances","emptyMyOpenOrders","emptyMyHistoryOrders","updateMyAccountPage","toBuffer","mixed","ethUtil","zeroPad","places","padStart","BigNumber","BN","addHexPrefix","RegExp","test","Error","toNumber","toBN","fromGWEI","value","toFixed","formatKey","startsWith","formatAddress","clearHexPrefix","padLeftEven","hex","getDisplaySymbol","settingsCurrency","number","ceil","rm","EXPONENTIAL_AT","RANGE","ROUNDING_MODE","UPDATE_COLUMNS","updateColumns","AbiFunction","name","outputs","constant","this","inputTypes","outputTypes","methodAbiHash","methodID","abiInputs","parseInputs","rawEncode","parseOutputs","rawDecode","encoded","undefined","output","Contract","abi","funAbi","filter","abiFunctions","reduce","acc","item","methodHash","abiFunction","encodeInputs","decodeOutputs","encode","methodId","decodeEncodedInputs","erc20Abi","exchangeAbi","ERC20Token","ExchangeContract","Contracts","EdDSA","createAccountAndDeposit","exchangeAddress","chainId","publicX","publicY","token","amount","permission","symbol","toUpperCase","decimals","ABI","pubKeyX","pubKeyY","tokenAddress","to","gas","getGasLimitByType","deposit","plus","onChainWithdraw","signWithdrawal","_withdrawal","keyPair","exchangeId","withdrawal","feeToken","getTokenByAddress","getTokenBySymbol","tokenF","tokenId","id","amountInBN","toWEI","tokenFId","amountFInBN","amountF","label","getLabel","setupOffChainWithdrawal","hash","Poseidon","signOrder","_order","tokenBuy","tokenSell","tokenS","tokenB","tokenSId","tokenBId","amountSInBN","amountS","amountBInBN","amountB","buy","maxFeeBips","getMaxFeeBips","allOrNone","feeBips","rebateBips","setupOrder","orderId","validSince","validUntil","signatureRx","signatureRy","signatureS","signCancel","_cancel","cancel","orderToken","orderTokenId","setupCancel","signFlexCancel","sha256","JSON","stringify","validate","result","errorMsg","signEthereumTx","rawTx","ethTx","Transaction","getChainId","Object","assign","serialize","sendTransaction","tx","transactionHash","Wallet","sendByMetaMask","_spender","_value","getMaxAmountInWEI","exchange","toLowerCase","channelId","owner","success","getEthNonce","UPDATE_NONCE","updateNonce","fetchNonce","LabelValue","unit","onClick","gutter","padding","minWidth","paddingLeft","TextFormError","TextPopupTitle","AddressDiv","foreground","Instruction","p","Section","MyModal","schemas","STRING","required","URL","ADDRESS","pattern","HEX","ETH_DATA","TX_HASH","RPC_TAG","enum","TX","fields","handleErrors","errors","msgs","join","onError","onSuccess","source","schema","validator","Schema","UPDATE_COLOR","updateColor","language","UPDATE_CANDLE","fetchCandles","newCandles","getCandlestick","candles","candle","quoteToken","parsedCandle","close","high","low","open","date","Date","volume","sort","b","ohlc","SET_MARKET","setMarket","marketName","SHOW_REGISTER_ACCOUNT","SHOW_DEPOSIT","SHOW_WITHDRAW","SHOW_LOGOUT_MODAL","SHOW_EXPORT_ACCOUNT","SHOW_ENTER_PASSWORD","SHOW_LOGIN_MODAL","SHOW_RESET_PASSWORD_MODAL","SHOW_SIDEBAR","registerAccountModal","show","loginModal","resetPasswordModal","showDepositModal","showWithdrawModal","showLogoutModal","showExportAccountModal","showEnterPasswordModal","showSideBar","AssetMenu","border","AssetDropdown","options","selected","trigger","overlay","width","backgroundColor","borderStyle","className","paddingBottom","faCaretDown","MyFontAwesomeIcon","FontAwesomeIcon","PasswordRule","ruleText","aggregator","passed","faCheck","faTimes","getIcon","ConfirmPasswordModal","buttonLabel","instructions","onClose","closeModal","onProceed","alert","loading","isPasswordValid","repeatedPassword","passwordMismatch","passwordValidationAggregator","ruleResult","setState","getIfPasswordsMismatch","password1","password2","onPasswordChange","e","target","mismatch","onRepeatedPasswordChange","onPasswordEnter","keyCode","preventDefault","prevProps","prevState","isVisible","AppLayout","modalWidth","footer","maskClosable","closeIcon","visible","onCancel","indicator","I","spinning","Group","wallet","Password","autoFocus","autoCapitalize","autoComplete","onChange","onBlur","placeholder","maxLength","onKeyDown","bind","match","ruleOK","hasSpecialLetter","showLoginModal","href","display","float","disabled","React","Component","getTokenBalance","getEthBalance","getBalances","skip","balances","updatedBalances","balance","updatedBalance","getTokenByTokenId","totalAmount","totalAmountInString","frozenAmount","frozenAmountInString","percentage","dividedBy","availableInBigNumber","minus","available","accountStr","localStorage","getItem","Map","parse","getAccountFromLocal","now","get","time","removeAccountFromLocal","saveAccountToLocal","set","setItem","delete","getAllCanceledOrders","orderStr","saveCanceledOrderToLocal","allOrders","canceledOrdersOfOwner","getCanceledOrdersFromLocal","removeCanceledOrdersByAddressFromLocal","saveLoginRecord","getLoginRecord","getUpdateRecords","recordStr","getUpdateRecordByAddress","saveUpdateRecord","record","records","removeUpdateRecord","saveLanguage","getLanguage","shortLang","navigator","languages","userLanguage","getLanguageFromBrowser","document","getEtherscanLink","lan","getRefreshDurationInMillionSeconds","location","hostname","getApiKey","submitOrderToLightcone","getOrderId","lightconeGetAccount","getTimestamp","interval","getDepositHistory","types","transactions","updatedTransactions","mapTransactions","mapAmountInUI","transaction","amountInUI","parseFloat","amountInDecimals","feeInUI","feeAmount","txHashInUI","txHash","txHashLink","updatedTransaction","tokenName","getWithdrawalHistory","mapTicker","updatedTickers","percentChange24h","updatedTicker","UPDATE_MY_OPEN_ORDERS","UPDATE_OPEN_ORDERS_OFFSET","EMPTY_MY_OPEN_ORDERS","UPDATE_MY_HISTORY_ORDERS","UPDATE_HISTORY_ORDERS_OFFSET","EMPTY_MY_HISTORY_ORDERS","UPDATE_SOCKET_ORDER","updateSocketOrder","updateMyOpenOrders","updateOpenOrderOffset","fetchMyOpenOrders","updateMyHistoryOrders","updateHistoryOrderOffset","fetchMyHistoryOrders","i18n","use","Backend","initReactI18next","init","lng","backend","backends","LocalStorageBackend","XHR","backendOptions","prefix","expirationTime","versions","en","process","zh","store","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","trackEvent","tracker","notifySuccess","duration","faCheckCircle","top","background","notifyWarning","warning","faInfoCircle","notifyError","faGhost","MyButton","ConfirmButton","CancelButton","LogoutModal","setTimeout","closable","isVislble","connect","modalManager","dexAccount","isLogoutModalVisible","imul","charCodeAt","abs","DepositModal","errorMessage1","errorToken","errorMessage2","validateAmount","availableAmount","ethBalance","allowance","approveTxCount","ethEnough","processingNum","handleCurrencyTypeSelect","tokenSymbol","loadData","getFeeCost","approveGas","depositGas","gasCost","getFeeByType","onchainFees","onAmountValueClick","onAmountValueChange","selectedTokenSymbol","depositToken","txCount","cost","inputPrecision","submitDeposit","approveZero","approveMax","depositTo","enterAmount","depositAll","max","loadETH","fetchWalletBalance","tokenBalance","fetchAllowance","selectedToken","holdBalance","find","ba","holdAmount","option","text","borderBottomStyle","borderBottomColor","borderBottomWidth","lineHeight","unshift","faSpinner","faClock","marginRight","faHandPointRight","sellPrimary","borderColor","suffix","fontWeight","paddingTop","faExclamationTriangle","isDepositModalVisible","initialState","canceledOrders","CancelOrderManagerReducer","action","legalPrefix","CmcPriceReducer","zhColorTheme","up","down","buyPrimary","buySecondary","buyBar","sellSecondary","sellBar","colorTheme","ColorManagerReducer","DexAccountReducer","latestAccount","includes","isInitialized","baseTokenId","quoteTokenId","precisionForPrice","orderbookAggLevels","enabled","minOrderAmount","maxOrderAmount","dustOrderAmount","ExchangeInfoReducer","GasPriceReducer","numColumns","LayoutManagerReducer","getNumColumns","innerWidth","referenceCount","isDesiredNetwork","MetaMaskReducer","newReferenceCount","isRegisterAccountModalVisible","isResetPasswordModalVisible","isLoginModalVisible","isWithdrawModalVisible","withdrawalToken","isExportAccountModalVisible","isEnterPasswordModalVisible","isSideBarVisible","ModalManagerReducer","depositOffset","depositLimit","depositTotalNum","deposits","withdrawalOffset","withdrawalLimit","withdrawalTotalNum","withdrawals","MyAccountPageReducer","UPDATE_BALANCE","previousBalances","index","findIndex","splice","UPDATE_MY_BALANCES","newBalances","found","UPDATE_ETH_BALANCE","ethWalletAmount","UPDATE_TOKEN_BALANCE","lrcWalletAmount","EMPTY_BALANCES","UPDATE_DEPOSITS","EMPTY_DEPOSITS","UPDATE_WITHDRAWALS","EMPTY_WITHDRAWALS","openOrders","openOrdersTotalNum","openOrdersLimit","openOrdersOffset","historyOrders","historyOrdersTotalNum","historyOrdersLimit","historyOrdersOffset","transactionsTotalNum","transactionsLimit","transactionsOffset","MyOrderPageReducer","UPDATE_ALL_OPEN_ORDERS","createdAt","EMPTY_ALL_OPEN_ORDERS","UPDATE_ALL_HISTORY_ORDERS","EMPTY_ALL_HISTORY_ORDERS","UPDATE_SOCKET_ALL_ORDER","o","UPDATE_USER_TRANSACTIONS","EMPTY_USER_TRANSACTIONS","MyOrdersReducer","NonceReducer","type1","type2","type3","TabsReducer","TokensReducer","tradeType","TradePanelReducer","UPDATE_TRADE_TYPE","UPDATE_AMOUNT","UPDATE_PRICE","EMPTY_TRADE_FORM","accounts_fetched","account_exists","account_selected","Web3","exists","CandlesReducer","current","baseTokenSymbol","quoteTokenSymbol","getCurrentMarketInitState","CurrentMarketReducer","marketNames","MarketListReducer","val","level","version","sells","buys","OrderBookReducer","UPDATE_ORDER_BOOKS","UPDATE_ORDER_BOOKS_LEVEL","EMPTY_ORDER_BOOKS","UPDATE_SOCKET_ORDER_BOOKS","starVersion","startVersion","endVersion","filteredBuys","slot","count","filteredSells","forEach","TickerReducer","latestTrade","TradeHistoryReducer","previousTrades","rootReducer","history","combineReducers","router","connectRouter","tabs","tradePanel","layoutManager","currentMarket","marketList","orderBook","tradeHistory","myOrders","myOrderPage","metaMask","cancelOrderManager","cmcPrice","colorManager","createBrowserHistory","configureStore","preloadedState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","thunk","routerMiddleware","next","EnterPasswordModal","passwordRef","createRef","hidePasswordErrorMessage","passwordErrorMessage","pressedButton","keyPairCipherText","decrypt","utils","passwordEnter","focus","container","marginBottom","borderRadius","colon","hasFeedback","ref","block","onOk","ExportedDiv","ExportAccountModal","pressedLogoutButton","json","MaintenanceModal","draggable","LoginModal","_this","passwordHash","relayAccount","encrypt","isFreeze","fetchMyAccountPage","fetchDeposits","emptyDeposits","fetchWithdrawals","emptyWithdrawals","RegisterAccountModal","createOrUpdateAccount","createOrUpdateAccountResponse","ResetPasswordModal","processChange","newAccount","rem","WithdrawModal","getAvailableAmount","showModal","withdrawalGas","submitWithdraw","onchainWithdrawal","withdrawAll","BalanceTable","columnBuilders","align","getColValue","balanceOnEthereumDict","mounted","loadBalanceOnEthereum","SimpleTableWidget","emptyText","rowData","PureComponent","bindActionCreators","StatusFontAwesomeIcon","DepositWithdrawalBaseTable","columns","dataIndex","paddingRight","placement","overlayStyle","faExclamationCircle","Moment","format","rel","hasPagination","total","renderEmpty","EmptyTableIndicator","placeHolder","borderWidth","minHeight","dataSource","pagination","scroll","y","pageSize","DepositWithdrawalTable","page","compareDexAccounts","type4","SimpleSecondaryPageLayout","navbarConfig","children","pageId","simpleSecondaryPageHeight","Content","SecondaryNavBar","subPages","opacity","accountSubPages","OrderBaseTable","onClickCancel","submitFlexCancel","sizeInString","filled","HistoryOrdersTable","HistoryTradesTable","fetchUserTransactions","OpenOrdersTable","orderSubPages","Sider","LegalTemplate","hasSider","tradePanelWidth","borderTop","sidePanelBackground","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","navigation","borderLeftStyle","marginLeft","overflow","backgroundSize","frameBorder","SideBarButtonAlt","SideBarButton","SideNavigation","faFileAlt","padingTop","MarkdownWrapper","textWhiteBulk","lightForeground","MakrdownPage","markdown","fileName","fetch","then","getContainerBackground","escapeHtml","hoverbg","colortxt","faTrophy","NotFoundPage","rotation","random","rotation2","backgroundPosition","backgroundImage","backgroundRepeat","backgroundBlendMode","transform","OrderSizeBar","td","totalUnits","sizeBarMaxSize","sizeBarUnitSize","numUnits","sizeBarMaxWidth","showSizeBar","CompactOrderTableRow","tr","CompactOrderTableSizeColumn","CompactOrderTableSizePrice","CompactOrderTablePositionColumn","EmptyOrderRow","OrderRow","dataConfigs","propName","getter","renderer","defaultProps","BaseHeader","th","OrderBookHeaderSize","OrderBookHeaderPrice","OrderBookHeaderPosition","AbsoluteContainer","propTypes","PropTypes","node","isRequired","Table","table","HiddenCompactTableHead","thead","CollapseCompactTableHead","CompactOrderTable","headerLabels","tableHeaderVisibility","FullWidthTable","CompactTableHead","Panel","PanelHeader","position","headerText","LowContrast","MedContrast","HighContrast","DotColor","digitsAfterDecimal","PrettySize","formattedSize","Numeral","digitsBeforeDecimal","trailingZeroes","PrettyPosition","SidePrimary","prePrice","SideSecondary","SideBar","NoSidePrimary","NoSideSecondary","NoSideDotColor","PrettyPrice","updatedPrice","updatedPrePrice","formatLength","toLocaleString","useGrouping","Container","Scrollable","ScrollContainer","scrollerRef","hidden-scrollbars","Spread","spread","StickyContainer","unsafePropNames","OrderBook","context","hasOrders","hasCentered","scroller","centerSpread","centerSpreadOnResize","addEventListener","matchMedia","addListener","util","removeEventListener","diff","scrollHeight","clientHeight","round","scrollTop","priceFormat","sizeFormat","depth","onClickOrder","getSize","getPosition","renderSize","renderPrice","renderPosition","priceLabel","sizeLabel","positionLabel","safeProps","visibleAsks","visibleBids","maxRow","marketConfig","getMarketByPair","repeat","headerContent","orderBookComponent","visibility","ReactDOM","findDOMNode","bottom","x","hideHeader","Infinity","base_fill_amount","toPrecision","TabHeader","clickedBuyButton","clickedSellButton","isBuy","isSell","buttonStyle","buyButtonActiveStyle","buttonInactiveStyle","BaseHeading","TableColHead","TableColHeadPrice","CommonTableCell","CompactOrderTableSize","CompactOrderTablePrice","CompactOrderTableDate","preOrder","ThinLowContrast","PrettyTimeStamp","TradeHistory","entry","onClickTrade","getSideFromLightconeData","getTimeStampFromLightconeData","timeStampFormat","renderTimeStamp","timeStampLabel","visibleTrades","trade","AggregationWidget","maxLevel","showLevel","updateOrderBooksLevel","faPlusCircle","faMinusCircle","OrderBookTradeHistoryPanel","sizeMaxInSell","apply","sizeInNumber","sizeMaxInBuy","isFinite","orderbookSide","totalSize","myOrder","orderPrice","eq","updatePrice","tradeSide","sum","updateTradeType","updateAmount","content","orderBookAndTradeHistorySide","getTimeStamp","SmallPagination","tradeOrderBaseTableHeight","tradeOrderBaseTableHeightNoPagination","tableLayout","tradeOrderBaseTableScrollY","tradeOrderBaseTableScrollYNoPagination","HistoricalOrders","OpenOrders","clickedOpenOrdersButton","clickedOrderHistory","OpenAndHistoricalOrders","tradeOrderAndTradeHeight","ColumnWrapper","whiteSpace","row1","row2Color","row2","AssetIcon","MarketSelector","addr","path","updatedMarkets","updatedMarket","bordered","renderItem","closePopover","borderTopStyle","cursor","getAssetUrl","getAssetIconUrl","SelectMarketButton","BlinkFontAwesomeIcon","MenuItem","tickerBarHeight","MenuHighlightTextSpan","TickerBar","modalVisible","setModalVisible","handleClickChange","priceUnit","selectedKeys","mode","sidePadding","overlayClassName","onVisibleChange","viewBox","x1","y1","x2","y2","stopColor","stroke","strokeWidth","fillRule","d","selectable","faDotCircle","AssetPanelButtons","submitButtonStyle","isButtonsDisable","buttons","faArrowAltCircleDown","faArrowAltCircleUp","AssetPanel","getAvailableTotalInFiat","baseTokenPrice","availableTotal","baseTokenAvailableAmount","baseTokenAvailableTotal","quoteTokenAvailableAmount","quoteTokenxAvailableTotal","header","TradeTabButtons","textTransform","buyPrimaryColor","sellButtonActiveStyle","sellPrimaryColor","EthereumIconWrapper","PercentageButton","TradePanel","waitingForPassword","validatePrice","baseAmountValidate","quoteAmountValidate","sellToken","onPriceValueChange","submitOrder","amountInBigNumber","getTime","signedOrder","getChannelId","hangleAmountPercentage","scale","pow","priceValidate","baseAmount","quoteAmount","minBaseAmount","maxBaseAmount","minQuoteAmount","maxQuoteAmount","percentageButtonDisabled","buyOrSellButton","mainScreenHeight","NumericInput","justifyContent","faEthereum","supportedResolutions","supported_resolutions","DataFeed","cb","userInput","symbolType","onResultReadyCallback","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","symbol_stub","description","session","timezone","minmov","pricescale","has_intraday","intraday_multipliers","supported_resolution","volume_precision","data_status","symbolInfo","resolution","onHistoryCallback","onErrorCallback","firstDataRequest","startTimestamp","endTimestamp","start","lightcone_v3_config","newMoreCandles","lastCandle","noData","onRealtimeCallback","subscribeUID","onResetCacheNeededCallback","subscriberUID","resolutionBack","intervalBack","startDate","endDate","onDataCallback","PriceChart","tvWidget","initTvWidget","upColor","downColor","remove","widgetOptions","datafeed","container_id","containerId","library_path","libraryPath","locale","disabled_features","enabled_features","charts_storage_url","chartsStorageUrl","charts_storage_api_version","chartsStorageApiVersion","client_id","clientId","user_id","userId","fullscreen","autosize","studies_overrides","studiesOverrides","time_frames","overrides","editorFontsList","volumePaneSize","widget","onChartReady","chart","createStudy","Intl","DateTimeFormat","resolvedOptions","timeZone","datafeedUrl","TradePage","contentComponent","priceChart","MarketService","orderBookWidth","tradeHistoryWidth","cookieName","buttonText","expires","routes","TopNavBar","exact","render","component","getElementById","getRelayerHost","prodServerUrl","uatServerUrl","pair","m","getMarketsByTokenR","getServer","getWsServer","txs","fees","defaultChannelId","isSupportedMarket","getTokenSupportedMarkets","leftMarket","getMarketsByTokenL","rightMarket","maxAmount","valueInWEI","precisionToFixed","getAllowance","originalText","CryptoJS","AES","cipherText","enc","Utf8","emptyTradePanel","getUserTrades","updatedTrades","updatedTrade","updateSocketAllOrder","emptyAllOpenOrders","emptyAllHistoryOrders","updateUserTransactions","emptyUserTransactions","shr","q","cta","base","exp","isOdd","P","one","inSubgroup","exports","packPoint","buff","greater","unpackPoint","_buff","greaterOrEquals","sqrt","neg","SERVER_URL","timeout","baseURL","axios","resultInfo","errorData","errorMessage","parseResponse","getDepth","updatedBids","bid","updatedBid","updatedAsks","ask","updatedAsk","updateSocketOrderBooks","emptyOrderBooks","fetchOrderBooks","obj","internalUpdateOrderBooksLevel"],"mappings":"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","file":"static/js/main~970f9218.513331a5.chunk.js","sourcesContent":["import { request } from '../../../common';\n\nexport async function cancelOrders(\n  accountId,\n  orderHash,\n  clientOrderId,\n  signed,\n  apiKey\n) {\n  const data = {\n    accountId: accountId,\n    orderHash: orderHash,\n    clientOrderId: clientOrderId\n  };\n  const signature = signed.Rx + ',' + signed.Ry + ',' + signed.s;\n  const headers = {\n    'X-API-KEY': apiKey,\n    'X-API-SIG': signature\n  };\n  return await request({\n    method: 'POST',\n    url: '/api/v1/deleteOrders',\n    headers: headers,\n    data\n  });\n}\n","import { request } from '../../../common';\nimport config from '../../../config';\n\nexport async function getOrders({\n  accountId,\n  limit,\n  offset,\n  market,\n  statuses,\n  apiKey,\n  tokens\n}) {\n  const headers = {\n    'X-API-KEY': apiKey\n  };\n  const data = {\n    accountId,\n    limit,\n    offset\n  };\n  if (typeof market !== 'undefined') {\n    data.market = market;\n  }\n\n  if (typeof statuses !== 'undefined') {\n    data.statuses = statuses;\n  }\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/orders',\n    headers: headers,\n    data\n  });\n\n  const totalNum = response['totalNum'];\n  const orders = response['orders'];\n  const updatedOrders = map(orders, tokens);\n  return {\n    accountId,\n    orders: updatedOrders,\n    totalNum,\n    limit,\n    offset\n  };\n}\n\n// Map API modal to UI modal\nexport function map(orders, configTokens) {\n  let updatedOrders = [];\n  for (let i = 0; i < orders.length; i = i + 1) {\n    const order = orders[i];\n    let updatedOrder = { ...order };\n    const market = updatedOrder.market;\n    const tokens = market.split('-');\n    const baseToken = tokens[0];\n    let sizeInBigNumber = '0';\n    let filledInBigNumber = '0';\n\n    // Used in table directly\n    updatedOrder['sizeInString'] = config.fromWEI(\n      baseToken,\n      order.size,\n      configTokens\n    );\n\n    let feeInString = '';\n    if (Number(order.filledSize) === 0) {\n      feeInString = '-';\n    } else {\n      feeInString = config.fromWEI(baseToken, order.filledFee, configTokens, {\n        precision: 8\n      });\n    }\n    updatedOrder['feeInString'] = feeInString;\n\n    //因为前端side == sell, buy = false; side = buy, buy = true，因此都按照size计算。\n    sizeInBigNumber = order['size'];\n    filledInBigNumber = order['filledSize'];\n    if (order.status === 'processed') {\n      updatedOrder['filled'] = `100%`;\n    } else {\n      const sizeFromWei = config.fromWEI(\n        baseToken,\n        sizeInBigNumber,\n        configTokens\n      );\n      const filledSize = config.fromWEI(\n        baseToken,\n        filledInBigNumber,\n        configTokens\n      );\n      const filledInNumber = Math.floor((filledSize / sizeFromWei) * 100);\n      updatedOrder['filled'] = `${filledInNumber}%`;\n    }\n\n    updatedOrders.push(updatedOrder);\n  }\n  return updatedOrders;\n}\n","import { cancelOrders } from './delete';\nimport { getOrders, map } from './get';\n\nexport { getOrders, cancelOrders, map };\n","export const CONNECT_TO_META_MASK = 'CONNECT_TO_META_MASK';\nexport const UPDATE_META_MASK = 'UPDATE_META_MASK';\nexport const DETECT_IF_META_MASK_INSTALLED = 'DETECT_IF_META_MASK_INSTALLED';\n\nexport const INCREASE_REFERENCE_COUNT = 'INCREASE_REFERENCE_COUNT';\n\nexport function increaseReferenceCount() {\n  return {\n    type: INCREASE_REFERENCE_COUNT,\n    payload: {}\n  };\n}\n\nexport function connectToMetaMask(startConnecting) {\n  return {\n    type: CONNECT_TO_META_MASK,\n    payload: {\n      startConnecting\n    }\n  };\n}\n\nexport function updateMetaMask(payload) {\n  return {\n    type: UPDATE_META_MASK,\n    payload: payload\n  };\n}\n\nexport function detectIfMetaMaskInstalled(installed) {\n  return {\n    type: DETECT_IF_META_MASK_INSTALLED,\n    payload: {\n      installed\n    }\n  };\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\n\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons/faCircleNotch';\n\nconst ModalIndicator = ({ title, tips, marginTop, imageUrl }) => {\n  const tips_ = tips || [];\n  const marginTop_ = marginTop || '80px';\n  return (\n    <div>\n      <FontAwesomeIcon\n        icon={faCircleNotch}\n        size=\"2x\"\n        spin\n        style={{ margin: '20px', marginTop: marginTop_ }}\n      />\n\n      <div\n        style={{\n          margin: '16px',\n          color: colors.orange,\n          fontSize: '1rem'\n        }}\n      >\n        <I s={title} />\n      </div>\n\n      <div\n        style={{\n          fontSize: '0.85rem',\n          fontColor: colors.textWhite\n        }}\n      >\n        {tips_.map((tip, i) => (\n          <div\n            style={{\n              textAlign: 'left',\n              margin: '16px'\n            }}\n            key={i}\n          >\n            {tip}\n          </div>\n        ))}\n      </div>\n\n      {imageUrl ? (\n        <div>\n          <img\n            alt=\"check metamask plugin icon\"\n            style={{\n              userSelect: 'none',\n              height: '80px',\n              marginTop: '16px',\n              boxShadow: '0 0 10px 10px rgba(0, 0, 0, 0.1)'\n            }}\n            src={imageUrl}\n          />\n        </div>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\n\nexport default ModalIndicator;\n","import styled from 'styled-components';\n\nimport colors from 'colors';\n\nimport { Button, Menu } from 'antd';\n\nconst Scroller = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  overflow: scroll\n  position: absolute\n  &::-webkit-scrollbar: {\n    display: none;\n  }\n`;\n\nconst NavButtonWrapper = styled(Menu.Item)`\n  border: none !important;\n  padding: 0 20px!\n  margin-left: 0 !important;\n  margin-right: 0 !important;\n  list-style-type: none!important;\n\n  &.ant-menu-item-disabled {\n    display:none;\n  }\n`;\n\n// ONLY Styling, no Logics!!!\nconst TextCompactTableHeader = styled.span`\n  font-size: 0.9rem;\n  font-weight: 400;\n  user-select: none;\n  color: ${colors.textDim};\n`;\n\nconst TextPanelHeader = styled.span`\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: ${colors.textWhite};\n`;\n\nconst HighlightTextSpan = styled.span`\n  padding-right: 0px;\n  font-weight: 600;\n  font-size: 0.9rem;\n  color: ${colors.textWhite};\n`;\n\nconst RegularTextSpan = styled.span`\n  padding-right: 0px;\n  font-weight: 400;\n  font-size: 0.85rem;\n  color: ${colors.textDim};\n`;\n\nconst BaseActionButton = styled(Button)`\n  font-size: 1rem!important;\n  font-weight: 600!important;\n  height: 40px!important;\n  width: 100%;\n  border-style: none!important;\n  border-radius: 20px!important;\n  color: ${colors.textBright}!important;\n  text-transform: uppercase!important;\n  transition: 1s!important;\n\n  &:hover {\n  }\n\n  &[disabled],&[disabled]:hover {\n    background: ${colors.buttonBackground}!important;\n    color: ${colors.textDim}!important;\n  }\n}\n`;\n\nconst ActionButton = styled(BaseActionButton)`\n  &:not([disabled]) {\n    background: ${props =>\n      props.buttonbackground ? props.buttonbackground : colors.theme}!important;\n  }\n`;\n\nconst OutlineButton = styled(Button)`\n  border: 1px solid ${colors.buttonBackground} !important;\n  border-radius: 0;\n  height: 22px !important;\n  font-size: 0.85rem !important;\n  font-weight: 500;\n  padding-left: 8px !important;\n  padding-right: 8px !important;\n  background-color: transparent;\n`;\n\nconst DepositOutlineButton = styled(OutlineButton)`\n  color: ${colors.green}!important;\n  width: 70px;\n\n  &:focus {\n    color: ${colors.green}!important;\n    background-color: transparent !important;\n    border: 1px solid ${colors.buttonBackground} !important;\n  }\n\n  &:hover {\n    color: ${colors.green}!important;\n    background-color: transparent !important;\n    border: 1px solid #696a9b !important;\n  }\n`;\n\nconst WithdrawOutlineButton = styled(OutlineButton)`\n  color: ${colors.red}!important;\n  width: 70px;\n\n  &:focus {\n    color: ${colors.red}!important;\n    background-color: transparent !important;\n    border: 1px solid ${colors.buttonBackground} !important;\n  }\n\n  &:hover {\n    color: ${colors.red}!!important;\n    background-color: transparent !important;\n    border: 1px solid #696a9b !important;\n  }\n`;\n\nconst CancelOrderButton = WithdrawOutlineButton;\n\n// Used in my-balance, my-deposits, my-withdrawals\n// my-open-orders, my-orders, my-history-trades\nconst LargeTableContainer = styled.div`\n  min-height: 540px;\n  max-width: 1200px;\n  width: 100%;\n  background: #292b42 !important;\n  display: table;\n  margin: 0 auto;\n`;\n\nconst LargeTableRow = styled.div`\n  font-size: 0.85rem;\n  font-weight: 400;\n`;\n\nconst LargeTableRowStatus = styled(LargeTableRow)`\n  text-align: right;\n  color: ${colors.textDim};\n\n  & > div {\n    display: inline-block;\n    min-width: 60px;\n    text-align: left;\n  }\n`;\nconst LargeTableRowProcessed = styled(LargeTableRowStatus)`\n  color: ${colors.green};\n`;\n\nconst LargeTableRowProcessing = styled(LargeTableRowStatus)`\n  color: ${colors.highlight};\n`;\n\nconst LargeTableRowFailed = styled(LargeTableRowStatus)`\n  color: ${colors.red};\n`;\n\nexport {\n  Scroller,\n  TextCompactTableHeader,\n  TextPanelHeader,\n  HighlightTextSpan,\n  RegularTextSpan,\n  ActionButton,\n  OutlineButton,\n  DepositOutlineButton,\n  WithdrawOutlineButton,\n  CancelOrderButton,\n  NavButtonWrapper,\n  LargeTableContainer,\n  LargeTableRow,\n  LargeTableRowStatus,\n  LargeTableRowProcessed,\n  LargeTableRowProcessing,\n  LargeTableRowFailed\n};\n","import { getExchangeInfo } from 'lightcone/api/LightconeAPI';\nimport { getMarketInfo } from 'lightcone/api/v1/marketinfo';\nimport { getTokenInfo } from 'lightcone/api/v1/tokeninfo';\n\nexport const INITIALIZE_INFO = 'INITIALIZE_INFO';\nexport const UPDATE_INFO = 'UPDATE_INFO';\nexport const UPDATE_MARKETS = 'UPDATE_MARKETS';\nexport const UPDATE_TOKENS = 'UPDATE_TOKENS';\n\nexport function updateInfo(info) {\n  return {\n    type: UPDATE_INFO,\n    payload: {\n      ...info\n    }\n  };\n}\n\nexport function updateMarkets(markets) {\n  return {\n    type: UPDATE_INFO,\n    payload: {\n      markets\n    }\n  };\n}\n\nexport function updateTokens(tokens) {\n  return {\n    type: UPDATE_INFO,\n    payload: {\n      tokens\n    }\n  };\n}\n\nexport function initializeInfo(info, markets, tokens) {\n  return {\n    type: INITIALIZE_INFO,\n    payload: {\n      ...info,\n      markets,\n      tokens\n    }\n  };\n}\n\nexport function fetchAllExchangeInfo() {\n  return dispatch => {\n    (async () => {\n      const info = await getInfoFromRelay();\n      const markets = await getMarketsFromRelay();\n      const tokens = await getTokensFromRelay();\n      dispatch(initializeInfo(info, markets, tokens));\n    })();\n  };\n}\n\nexport function fetchInfo() {\n  return dispatch => {\n    (async () => {\n      try {\n        const info = await getInfoFromRelay();\n        dispatch(updateInfo(info));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n\nexport function fetchMarkets() {\n  return dispatch => {\n    (async () => {\n      try {\n        const markets = await getMarketsFromRelay();\n        dispatch(updateMarkets(markets));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n\nexport function fetchTokens() {\n  return dispatch => {\n    (async () => {\n      try {\n        const tokens = await getTokensFromRelay();\n        dispatch(updateTokens(tokens));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n\nasync function getInfoFromRelay() {\n  try {\n    return await getExchangeInfo();\n  } catch (e) {\n    console.log(e);\n    if (e.message.indexOf('timeout') !== -1) {\n      return await getInfoFromRelay();\n    } else {\n      throw e;\n    }\n  }\n}\n\nasync function getMarketsFromRelay() {\n  try {\n    return await getMarketInfo();\n  } catch (e) {\n    console.log(e);\n    if (e.message.indexOf('timeout') !== -1) {\n      return await getMarketsFromRelay();\n    }\n  }\n}\n\nasync function getTokensFromRelay() {\n  try {\n    return await getTokenInfo();\n  } catch (e) {\n    console.log(e);\n    if (e.message.indexOf('timeout') !== -1) {\n      return await getTokensFromRelay();\n    }\n  }\n}\n","import isEmpty from 'lodash/isEmpty';\n\nexport const FETCH_ACCOUNTS = 'FETCH_ACCOUNTS';\nexport const FETCH_ACCOUNTS_DATA_SUCCESS = 'FETCH_ACCOUNTS_DATA_SUCCESS';\n\nexport const FETCH_ACCOUNTS_FULFILLED = 'FETCH_ACCOUNTS_FULFILLED';\nexport const FETCH_ACCOUNTS_REJECTED = 'FETCH_ACCOUNTS_REJECTED';\n\nexport function itemsFetchDataSuccess(items) {\n  return {\n    type: FETCH_ACCOUNTS_DATA_SUCCESS,\n    payload: {\n      items\n    }\n  };\n}\n\nexport function fetchAccounts() {\n  return dispatch => {\n    new Promise((resolve, reject) => {\n      var { web3 } = window;\n      const ethAccounts = getAccounts();\n      if (isEmpty(ethAccounts)) {\n        web3 &&\n          web3.eth &&\n          web3.eth.getAccounts((err, accounts) => {\n            if (err) {\n              reject(err);\n            } else {\n              dispatch(itemsFetchDataSuccess(accounts));\n              resolve(accounts);\n            }\n          });\n      } else {\n        dispatch(itemsFetchDataSuccess(ethAccounts));\n        resolve(ethAccounts);\n      }\n    });\n  };\n}\n\n// Async with getAccounts\n// https://ethereum.stackexchange.com/questions/54564/async-with-getaccounts\nfunction promisify(fun, params = []) {\n  return new Promise((resolve, reject) => {\n    fun(...params, (err, data) => {\n      if (err !== null) reject(err);\n      else resolve(data);\n    });\n  });\n}\n\nexport async function getAccounts() {\n  try {\n    const { web3 } = window;\n    // throws if no account selected\n    const promise = promisify(web3.eth.getAccounts);\n    const accounts = await promise;\n    return accounts;\n  } catch (e) {\n    return [];\n  }\n}\n","const isArrayOrObject = coll => Array.isArray(coll) || typeof coll === 'object';\n\nconst lengthOrSize = coll => coll.length || coll.size;\n\nexport const hasReceivedOrderBook = ({ bids, asks }) =>\n  isArrayOrObject(bids) &&\n  isArrayOrObject(asks) &&\n  (lengthOrSize(bids) > 0 || lengthOrSize(asks) > 0);\n\nexport const countTrailingZeroes = numString => {\n  let numZeroes = 0;\n  for (let digit of numString.split('').reverse()) {\n    if (digit === '0' || digit === 0) {\n      numZeroes = numZeroes + 1;\n    } else {\n      return numZeroes;\n    }\n  }\n  return numZeroes;\n};\n\nexport const dropTrailingZeroes = num => {\n  const numString = String(num);\n  if (numString) {\n    const numTrailingZeroes = countTrailingZeroes(numString);\n    const dropedZeroes = numString.substring(\n      0,\n      numString.length - numTrailingZeroes\n    );\n    if (dropedZeroes.endsWith('.')) {\n      return dropedZeroes.substring(0, dropedZeroes.length - 1);\n    } else {\n      return dropedZeroes;\n    }\n  } else {\n    return numString;\n  }\n};\n","import { getTokenInfo } from 'lightcone/api/v1/tokeninfo';\n\nexport const UPDATE_TOKENS = 'UPDATE_TOKENS';\nexport const FETCH_TOKENS = 'FETCH_TOKENS';\n\nexport function updateTokens(tokens) {\n  return {\n    type: UPDATE_TOKENS,\n    payload: {\n      tokens\n    }\n  };\n}\n\nexport function fetchTokens() {\n  return dispatch => {\n    (async () => {\n      try {\n        const tokens = await getTokenInfo();\n        dispatch(updateTokens(tokens));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n","import { getMarketInfo } from 'lightcone/api/v1/marketinfo';\n\nexport const UPDATE_MARKET_LIST = 'UPDATE_MARKET_LIST';\nexport const FETCH_MARKET_LIST = 'FETCH_MARKET_LIST';\n\nexport function updateMarketList(markets) {\n  return {\n    type: UPDATE_MARKET_LIST,\n    payload: {\n      markets\n    }\n  };\n}\n\nexport function fetchMarketList() {\n  return dispatch => {\n    (async () => {\n      try {\n        const markets = await getMarketInfo();\n        dispatch(updateMarketList(markets));\n      } catch (error) {}\n    })();\n  };\n}\n","import { request } from '../../../common';\n\nexport async function getRecommendedGasPrice() {\n  const data = {};\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/recommendedGasPrice',\n    data\n  });\n\n  return response['price'];\n}\n","import { formatter } from 'lightcone/common';\nimport { getRecommendedGasPrice } from 'lightcone/api/v1/recommendedGasPrice';\n\nexport const UPDATE_GAS_PRICE = 'UPDATE_GAS_PRICE';\nexport const FETCH_GAS_PRICE = 'FETCH_GAS_PRICE';\n\nexport function updateGasPrice(gasPrice) {\n  return {\n    type: UPDATE_GAS_PRICE,\n    payload: {\n      gasPrice\n    }\n  };\n}\n\nexport function fetchGasPrice() {\n  return dispatch => {\n    (async () => {\n      try {\n        const recommendedGasPrice = await getRecommendedGasPrice();\n        const gasPrice = formatter.toGWEI(recommendedGasPrice).times(0.5);\n\n        dispatch(updateGasPrice(gasPrice));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n","export const UPDATE_TYPE_1 = 'UPDATE_TYPE_1';\nexport const UPDATE_TYPE_2 = 'UPDATE_TYPE_2';\nexport const UPDATE_TYPE_3 = 'UPDATE_TYPE_3';\n\nexport function updateOrderBookTradeHistoryPanelType(type) {\n  return {\n    type: UPDATE_TYPE_1,\n    payload: {\n      type\n    }\n  };\n}\n\nexport function updateMyOrdersAndMyTradesType(type) {\n  return {\n    type: UPDATE_TYPE_2,\n    payload: {\n      type\n    }\n  };\n}\n\nexport function updateOrderType(type) {\n  return {\n    type: UPDATE_TYPE_3,\n    payload: {\n      type\n    }\n  };\n}\n","import { getTicker } from 'lightcone/api/LightconeAPI';\n\nexport const UPDATE_TICKER = 'UPDATE_TICKER';\nexport const REST_TICKER = 'REST_TICKER';\n\nexport function restTicker() {\n  return {\n    type: REST_TICKER,\n    payload: {}\n  };\n}\n\nexport function updateTicker(ticker) {\n  return {\n    type: UPDATE_TICKER,\n    payload: {\n      ticker\n    }\n  };\n}\n\nexport function fetchTicker(market, tokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        const tickers = await getTicker([market], tokens);\n        const ticker = tickers[0];\n        dispatch(updateTicker(ticker));\n      } catch (error) {}\n    })();\n  };\n}\n","import { getTrade } from 'lightcone/api/LightconeAPI';\n\nexport const UPDATE_TRADES = 'UPDATE_TRADES';\nexport const EXTEND_TRADES = 'EXTEND_TRADES';\nexport const EMPTY_TRADES = 'EMPTY_TRADES';\n\nexport function emptyTrades() {\n  return {\n    type: 'EMPTY_TRADES',\n    payload: {}\n  };\n}\n\nexport function updateTrades(trades) {\n  return {\n    type: UPDATE_TRADES,\n    payload: {\n      trades\n    }\n  };\n}\n\nexport function extendTrades(newTrades) {\n  return {\n    type: EXTEND_TRADES,\n    payload: {\n      newTrades\n    }\n  };\n}\n\nexport function fetchTradeHistory(market) {\n  return dispatch => {\n    (async () => {\n      const limit = 40;\n      let fills = await getTradeFromRelay(market, limit);\n      try {\n        const data = [];\n        for (let i = 0; i < fills.length; i++) {\n          const fill = fills[i];\n          data.push({\n            // This is different from /api/v1/orders\n            timestamp: fill.timestamp,\n            side: fill.side,\n            size: fill.size,\n            price: Number(fill.price),\n            fee: fill.fee\n          });\n        }\n        dispatch(updateTrades(data));\n      } catch (error) {\n        console.log(error);\n        fetchTradeHistory(market);\n      }\n    })();\n  };\n}\n\nasync function getTradeFromRelay(market, limit) {\n  try {\n    return await getTrade(market, limit);\n  } catch (e) {\n    console.log(e);\n    if (e.message.indexOf('timeout') !== -1) {\n      return await getTradeFromRelay(market, limit);\n    }\n  }\n}\n","// Taken and modified from\n// https://github.com/iden3/circomlib\nimport * as fm from '../common/formatter';\nimport { bigInt } from 'snarkjs';\nimport { createHash } from './poseidon';\nimport { hashCode } from './bitstream';\nimport babyJub from './babyjub';\nimport createBlakeHash from 'blake-hash';\n\nfunction generateKeyPair(seed) {\n  const randomNumber = hashCode(seed);\n  const entropy = fm.zeroPad(randomNumber, 32);\n  const secretKey = bigInt.leBuff2int(entropy).mod(babyJub.subOrder);\n  const publicKey = babyJub.mulPointEscalar(babyJub.Base8, secretKey);\n  return {\n    publicKeyX: publicKey[0].toString(10),\n    publicKeyY: publicKey[1].toString(10),\n    secretKey: secretKey.toString(10)\n  };\n}\n\nfunction sign(strKey, msg) {\n  const key = bigInt(strKey);\n  const prv = bigInt.leInt2Buff(key, 32);\n\n  const h1 = createBlakeHash('blake512')\n    .update(prv)\n    .digest();\n  const msgBuff = bigInt.leInt2Buff(bigInt(msg), 32);\n  const rBuff = createBlakeHash('blake512')\n    .update(Buffer.concat([h1.slice(32, 64), msgBuff]))\n    .digest();\n  let r = bigInt.leBuff2int(rBuff);\n  r = r.mod(babyJub.subOrder);\n\n  const A = babyJub.mulPointEscalar(babyJub.Base8, key);\n  const R8 = babyJub.mulPointEscalar(babyJub.Base8, r);\n\n  const hasher = createHash(6, 6, 52);\n  const hm = hasher([R8[0], R8[1], A[0], A[1], msg]);\n  const S = r.add(hm.mul(key)).mod(babyJub.subOrder);\n\n  return {\n    Rx: R8[0].toString(),\n    Ry: R8[1].toString(),\n    s: S.toString()\n  };\n}\n\nfunction verify(msg, sig, pubKey) {\n  const A = [bigInt(pubKey[0]), bigInt(pubKey[1])];\n  const R = [bigInt(sig.Rx), bigInt(sig.Ry)];\n  const S = bigInt(sig.s);\n\n  // Check parameters\n  if (!babyJub.inCurve(R)) return false;\n  if (!babyJub.inCurve(A)) return false;\n  if (S >= babyJub.subOrder) return false;\n\n  const hasher = createHash(6, 6, 52);\n  const hm = hasher([R[0], R[1], A[0], A[1], bigInt(msg)]);\n\n  const Pleft = babyJub.mulPointEscalar(babyJub.Base8, S);\n  let Pright = babyJub.mulPointEscalar(A, hm);\n  Pright = babyJub.addPoint(R, Pright);\n\n  if (!Pleft[0].equals(Pright[0])) return false;\n  if (!Pleft[1].equals(Pright[1])) return false;\n\n  return true;\n}\n\nexport default {\n  generateKeyPair,\n  sign,\n  verify\n};\n","import { hashPersonalMessage, keccak } from 'ethereumjs-util';\nimport { toBig, toHex } from './formatter';\n\n/**\n * trim head space and tail space\n * @param str string\n */\nexport function trim(str) {\n  return str.replace(/(^\\s+)|(\\s+$)/g, '');\n}\n\n/**\n * trim all spaces\n * @param str\n */\nexport function trimAll(str) {\n  return trim(str).replace(/\\s/g, '');\n}\n\nexport function keccakHash(str) {\n  return toHex(keccak(str));\n}\n\nexport function calculateGas(gasPrice, gasLimit) {\n  return toBig(gasPrice)\n    .times(gasLimit)\n    .div(1e9);\n}\n\nexport default {\n  hashPersonalMessage,\n  trim,\n  trimAll,\n  keccakHash,\n  calculateGas\n};\n","import { request } from '../../../common';\n\nexport async function getPrice(legal) {\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/price',\n    data: {\n      legal\n    }\n  });\n  return response['tickers'];\n}\n","import { getPrice } from 'lightcone/api/v1/price';\n\nexport const UPDATE_CMC_LEGAL = 'UPDATE_CMC_LEGAL';\nexport const UPDATE_CMC_PRICE = 'UPDATE_CMC_PRICE';\nexport const FETCH_CMC_PRICE = 'FETCH_CMC_PRICE';\n\nexport function updateCmcLegal(legal) {\n  return {\n    type: UPDATE_CMC_LEGAL,\n    payload: {\n      legal\n    }\n  };\n}\n\nexport function updateCmcPrice(prices) {\n  return {\n    type: UPDATE_CMC_PRICE,\n    payload: {\n      prices\n    }\n  };\n}\n\nexport function fetchCmcPrice(legal) {\n  return dispatch => {\n    (async () => {\n      try {\n        const prices = await getPrice(legal);\n        dispatch(updateCmcPrice(prices));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n","// Taken from\n// https://github.com/iden3/circomlib\n\nimport { bigInt, bn128 } from 'snarkjs';\nimport blake2b from 'blake2b';\nconst assert = require('assert');\n\nconst F = bn128.Fr;\nconst SEED = 'poseidon';\nconst NROUNDSF = 8;\nconst NROUNDSP = 57;\nconst T = 6;\n\nfunction getPseudoRandom(seed, n) {\n  const res = [];\n  let input = Buffer.from(seed);\n  let h = blake2b(32)\n    .update(input)\n    .digest();\n  while (res.length < n) {\n    const n = F.affine(bigInt.leBuff2int(h));\n    res.push(n);\n    h = blake2b(32)\n      .update(h)\n      .digest();\n  }\n\n  return res;\n}\n\nfunction allDifferent(v) {\n  for (let i = 0; i < v.length; i++) {\n    if (v[i].isZero()) return false;\n    for (let j = i + 1; j < v.length; j++) {\n      if (v[i].equals(v[j])) return false;\n    }\n  }\n  return true;\n}\n\nexport function getMatrix(t, seed, nRounds) {\n  if (typeof seed === 'undefined') seed = SEED;\n  if (typeof nRounds === 'undefined') nRounds = NROUNDSF + NROUNDSP;\n  if (typeof t === 'undefined') t = T;\n  let nonce = '0000';\n  let cmatrix = getPseudoRandom(seed + '_matrix_' + nonce, t * 2);\n  while (!allDifferent(cmatrix)) {\n    nonce = Number(nonce) + 1 + '';\n    while (nonce.length < 4) nonce = '0' + nonce;\n    cmatrix = getPseudoRandom(seed + '_matrix_' + nonce, t * 2);\n  }\n\n  const M = new Array(t);\n  for (let i = 0; i < t; i++) {\n    M[i] = new Array(t);\n    for (let j = 0; j < t; j++) {\n      M[i][j] = F.affine(F.inverse(F.sub(cmatrix[i], cmatrix[t + j])));\n    }\n  }\n  return M;\n}\n\nexport function getConstants(t, seed, nRounds) {\n  if (typeof seed === 'undefined') seed = SEED;\n  if (typeof nRounds === 'undefined') nRounds = NROUNDSF + NROUNDSP;\n  if (typeof t === 'undefined') t = T;\n  return getPseudoRandom(seed + '_constants', nRounds);\n}\n\nfunction ark(state, c) {\n  for (let j = 0; j < state.length; j++) {\n    state[j] = F.add(state[j], c);\n  }\n}\n\nfunction sigma(a) {\n  return F.mul(a, F.square(F.square(a, a)));\n}\n\nfunction mix(state, M) {\n  const newState = new Array(state.length);\n  for (let i = 0; i < state.length; i++) {\n    newState[i] = F.zero;\n    for (let j = 0; j < state.length; j++) {\n      newState[i] = F.add(newState[i], F.mul(M[i][j], state[j]));\n    }\n  }\n  for (let i = 0; i < state.length; i++) state[i] = newState[i];\n}\n\nexport function createHash(t, nRoundsF, nRoundsP, seed) {\n  if (typeof seed === 'undefined') seed = SEED;\n  if (typeof nRoundsF === 'undefined') nRoundsF = NROUNDSF;\n  if (typeof nRoundsP === 'undefined') nRoundsP = NROUNDSP;\n  if (typeof t === 'undefined') t = T;\n\n  assert(nRoundsF % 2 === 0);\n  const C = getConstants(t, seed, nRoundsF + nRoundsP);\n  const M = getMatrix(t, seed, nRoundsF + nRoundsP);\n  return function(inputs) {\n    let state = [];\n    assert(inputs.length < t);\n    assert(inputs.length > 0);\n    for (let i = 0; i < inputs.length; i++) state[i] = bigInt(inputs[i]);\n    for (let i = inputs.length; i < t; i++) state[i] = F.zero;\n\n    for (let i = 0; i < nRoundsF + nRoundsP; i++) {\n      ark(state, C[i]);\n      if (i < nRoundsF / 2 || i >= nRoundsF / 2 + nRoundsP) {\n        for (let j = 0; j < t; j++) state[j] = sigma(state[j]);\n      } else {\n        state[0] = sigma(state[0]);\n      }\n      mix(state, M);\n    }\n    return F.affine(state[0]);\n  };\n}\n","import {\n  emptyBalances,\n  updateMyAccountPage\n} from 'redux/actions/MyAccountPage';\nimport {\n  emptyMyHistoryOrders,\n  emptyMyOpenOrders\n} from 'redux/actions/MyOrders';\n\nexport const GET_DATA_FROM_LOCALSTORAGE = 'GET_DATA_FROM_LOCALSTORAGE';\nexport const GET_DATA_FROM_LOCALSTORAGE_SUCCEEDED =\n  'GET_DATA_FROM_LOCALSTORAGE_SUCCEEDED';\n\nexport const SHOW_REGISTER_ACCOUNT = 'SHOW_REGISTER_ACCOUNT';\nexport const SEND_CREATE_REQUEST = 'SEND_CREATE_REQUEST';\nexport const SEND_CREATE_REQUEST_SUCCEEDED = 'SEND_CREATE_REQUEST_SUCCEEDED';\nexport const SEND_CREATE_REQUEST_FAILED = 'SEND_CREATE_REQUEST_FAILED';\n\nexport const CREATE_ON_CHAIN_PENDING = 'CREATE_ON_CHAIN_PENDING';\nexport const CREATE_ON_CHAIN_SUCCEEDED = 'CREATE_ON_CHAIN_SUCCEEDED';\nexport const CREATE_ON_CHAIN_FAILED = 'CREATE_ON_CHAIN_FAILED';\n\nexport const ENABLE_TOKENS = 'ENABLE_TOKENS';\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\n\nexport const LOGOUT = 'LOGOUT';\nexport const CHANGE_ACCOUNT = 'CHANGE_ACCOUNT';\n\nexport const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT';\nexport const UPDATE_REMEMBER_ME = 'UPDATE_REMEMBER_ME';\n\n// UNDEFINED: not connect to MetaMask from web init\nexport const UNDEFINED = 'UNDEFINED';\n\nexport const WALLET_UNCONNECTED = 'WALLET_UNCONNECTED';\nexport const METAMASK_NOT_FOUND = 'METAMASK_NOT_FOUND';\nexport const NOT_REGISTERED = 'NOT_REGISTERED';\nexport const REGISTERING = 'REGISTERING';\nexport const REGISTERED = 'REGISTERED';\nexport const RESETTING_PASSWORD = 'RESETTING_PASSWORD';\nexport const LOGGED_IN = 'LOGGED_IN';\n\nexport function getAllAccountStates() {\n  return [\n    UNDEFINED,\n    WALLET_UNCONNECTED,\n    NOT_REGISTERED,\n    REGISTERING,\n    REGISTERED,\n    RESETTING_PASSWORD,\n    LOGGED_IN\n  ];\n}\n\nexport function updateRememberMe(rememberMe) {\n  return {\n    type: UPDATE_REMEMBER_ME,\n    payload: { rememberMe }\n  };\n}\n\nexport function updatePassword(password) {\n  return {\n    type: RESET_PASSWORD,\n    payload: { password: password }\n  };\n}\n\nexport function updateAccount(account) {\n  return {\n    type: UPDATE_ACCOUNT,\n    payload: { account: account }\n  };\n}\n\nexport function getDataFromLocalStorage(address) {\n  return {\n    type: GET_DATA_FROM_LOCALSTORAGE,\n    payload: { address }\n  };\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT,\n    payload: {}\n  };\n}\n\nexport function changeAccount() {\n  return dispatch => {\n    dispatch({\n      type: CHANGE_ACCOUNT,\n      payload: {}\n    });\n  };\n}\n\nexport function logoutAll() {\n  return dispatch => {\n    (async () => {\n      try {\n        dispatch(logout());\n        dispatch(emptyBalances());\n        dispatch(emptyMyOpenOrders([]));\n        dispatch(emptyMyHistoryOrders([]));\n        dispatch(updateMyAccountPage([]));\n      } catch (error) {}\n    })();\n  };\n}\n","import * as ethUtil from 'ethereumjs-util';\nimport BN from 'bn.js';\nimport BigNumber from 'bignumber.js';\n\nBigNumber.config({\n  EXPONENTIAL_AT: 20,\n  RANGE: [-100000, 10000000],\n  ROUNDING_MODE: 1\n});\n\n/**\n *\n * @param mixed Buffer|number|string (hex string must be with '0x' prefix)\n * @returns {Buffer}\n */\nexport function toBuffer(mixed) {\n  if (mixed instanceof Buffer) {\n    return mixed;\n  } else {\n    return ethUtil.toBuffer(mixed);\n  }\n}\n\n/**\n *\n * @param num number|string (hex string must be with '0x' prefix)\n * @param places number of zeros to pad\n * @returns {Buffer}\n */\nexport function zeroPad(num, places) {\n  return toBuffer(String(num).padStart(places, '0'));\n}\n\n/**\n *\n * @param mixed number | BigNumber |  BN  | Buffer | string\n * @returns {string}\n */\nexport function toHex(mixed) {\n  if (\n    typeof mixed === 'number' ||\n    mixed instanceof BigNumber ||\n    mixed instanceof BN\n  ) {\n    return addHexPrefix(mixed.toString(16));\n  }\n\n  if (mixed instanceof Buffer) {\n    return addHexPrefix(mixed.toString('hex'));\n  }\n\n  if (typeof mixed === 'string') {\n    const regex = new RegExp(/^0x[0-9a-fA-F]*$/);\n    return regex.test(mixed)\n      ? mixed\n      : addHexPrefix(toBuffer(mixed).toString('hex'));\n  }\n  throw new Error('Unsupported type');\n}\n\n/**\n *\n * @param mixed number | BigNumber |  BN  | Buffer | string\n * @returns {number}\n */\nexport function toNumber(mixed) {\n  if (typeof mixed === 'number') {\n    return mixed;\n  }\n\n  if (mixed instanceof BigNumber || mixed instanceof BN) {\n    return mixed.toNumber();\n  }\n\n  if (typeof mixed === 'string') {\n    return Number(mixed);\n  }\n\n  throw new Error('Unsupported type');\n}\n\n/**\n *\n * @param mixed number | BigNumber |  BN  | Buffer | string\n * @returns {BigNumber}\n */\nexport function toBig(mixed) {\n  if (mixed instanceof BigNumber) {\n    return mixed;\n  }\n\n  if (typeof mixed === 'number') {\n    return new BigNumber(mixed.toString());\n  }\n\n  if (typeof mixed === 'string') {\n    return new BigNumber(mixed);\n  }\n\n  throw new Error('Unsupported type');\n}\n\n/**\n *\n * @param mixed number | BigNumber |  BN  | Buffer | string\n * @returns {BN}\n */\nexport function toBN(mixed) {\n  return mixed instanceof BN ? mixed : new BN(toBig(mixed).toString(10), 10);\n}\n\n/**\n *\n * @param value number | BigNumber | Buffer | string\n * @returns {BN}\n */\nexport function fromGWEI(value) {\n  return new BigNumber(\n    toBig(value)\n      .times(1e9)\n      .toFixed(0)\n  );\n}\n\n/**\n *\n * @param value number | BigNumber | Buffer | string\n * @returns {BN}\n */\nexport function toGWEI(value) {\n  return toBig(value).div(1e9);\n}\n\n/**\n * Returns formatted hex string of a given private key\n * @param mixed Buffer| string\n * @returns {string}\n */\nexport function formatKey(mixed) {\n  if (mixed instanceof Buffer) {\n    return mixed.toString('hex');\n  }\n\n  if (typeof mixed === 'string') {\n    return mixed.startsWith('0x') ? mixed.slice(2) : mixed;\n  }\n  throw new Error('Unsupported type');\n}\n\n/**\n * Returns hex string of a given address\n * @param mixed Buffer | string\n * @returns {string}\n */\nexport function formatAddress(mixed) {\n  if (mixed instanceof Buffer) {\n    return ethUtil.toChecksumAddress('0x' + mixed.toString('hex'));\n  }\n\n  if (typeof mixed === 'string') {\n    return ethUtil.toChecksumAddress(\n      mixed.startsWith('0x') ? mixed : '0x' + mixed\n    );\n  }\n  throw new Error('Unsupported type');\n}\n\n/**\n * Returns hex string with '0x' prefix\n * @param input\n * @returns {string}\n */\nexport function addHexPrefix(input) {\n  if (typeof input === 'string') {\n    return input.startsWith('0x') ? input : '0x' + input;\n  }\n  throw new Error('Unsupported type');\n}\n\n/**\n * Returns hex string without '0x' prefix\n * @param input string\n * @returns {string}\n */\nexport function clearHexPrefix(input) {\n  if (typeof input === 'string') {\n    return input.startsWith('0x') ? input.slice(2) : input;\n  }\n  throw new Error('Unsupported type');\n}\n\n/**\n *\n * @param hex\n * @returns {string}\n */\nexport function padLeftEven(hex) {\n  return hex.length % 2 !== 0 ? `0${hex}` : hex;\n}\n\n/**\n * Returns symbol of a given kind of currency\n * @param settingsCurrency\n * @returns {*}\n */\nexport function getDisplaySymbol(settingsCurrency) {\n  switch (settingsCurrency) {\n    case 'CNY':\n      return '￥';\n    case 'USD':\n      return '$';\n    default:\n      return '';\n  }\n}\n\n/**\n * Returns number in string with a given precision\n * @param number number | BigNumber\n * @param precision number\n * @param ceil bool  round up\n * @returns {string}\n */\nexport function toFixed(number, precision, ceil) {\n  precision = precision || 0;\n  if (number instanceof BigNumber) {\n    const rm = ceil ? 0 : 1;\n    return number.toFixed(precision, rm);\n  }\n\n  if (typeof number === 'number') {\n    return ceil\n      ? (\n          Math.ceil(number * Number('1e' + precision)) /\n          Number('1e' + precision)\n        ).toFixed(precision)\n      : (\n          Math.floor(number * Number('1e' + precision)) /\n          Number('1e' + precision)\n        ).toFixed(precision);\n  }\n\n  throw new Error('Unsupported type');\n}\n","export const UPDATE_COLUMNS = 'UPDATE_COLUMNS';\n\nexport function updateColumns() {\n  return {\n    type: UPDATE_COLUMNS,\n    payload: {}\n  };\n}\n","import {\n  addHexPrefix,\n  clearHexPrefix,\n  toBuffer,\n  toHex\n} from '../../common/formatter';\nimport { methodID, rawDecode, rawEncode } from 'ethereumjs-abi';\nimport BN from 'bn.js';\n\nexport default class AbiFunction {\n  constructor({ inputs, name, outputs, constant }) {\n    this.name = name;\n    this.inputTypes = inputs.map(({ type }) => type);\n    this.inputs = inputs;\n    this.outputTypes = outputs.map(({ type }) => type);\n    this.outputs = outputs;\n    this.constant = constant;\n    this.methodAbiHash = toHex(methodID(name, this.inputTypes));\n  }\n\n  /**\n   * @description Returns encoded methodId and inputs\n   * @param inputs Object, examples {owner:\"0x000...}\n   * @returns {string}\n   */\n  encodeInputs(inputs) {\n    const abiInputs = this.parseInputs(inputs);\n    return (\n      this.methodAbiHash +\n      clearHexPrefix(toHex(rawEncode(this.inputTypes, abiInputs)))\n    );\n  }\n\n  /**\n   * @description decode ethereum jsonrpc response result\n   * @param outputs\n   * @returns {*}\n   */\n  decodeOutputs(outputs) {\n    return this.parseOutputs(rawDecode(this.outputTypes, toBuffer(outputs)));\n  }\n\n  /**\n   * @description decode encoded inputs\n   * @param encoded\n   * @returns {*}\n   */\n  decodeEncodedInputs(encoded) {\n    return this.parseOutputs(\n      rawDecode(this.inputTypes, toBuffer(addHexPrefix(encoded)))\n    );\n  }\n\n  parseInputs(inputs = {}) {\n    return this.inputs.map(({ name, type }) => {\n      if (inputs[name] === undefined) {\n        throw new Error(`Parameter ${name} of type ${type} is required!`);\n      }\n      return inputs[name];\n    });\n  }\n\n  parseOutputs(outputs) {\n    return outputs.map(output => {\n      if (output instanceof BN) {\n        return toHex(output);\n      }\n      return output;\n    });\n  }\n}\n","import { methodID } from 'ethereumjs-abi';\nimport { toHex } from '../../common/formatter';\nimport AbiFunction from './AbiFunction';\n\nexport default class Contract {\n  constructor(abi) {\n    const funAbi = abi.filter(({ type }) => type === 'function');\n    this.abiFunctions = funAbi.reduce((acc, item) => {\n      const inputTypes = item.inputs.map(({ type }) => type);\n      const key = `${item.name}(${inputTypes.toString()})`;\n      const methodHash = methodID(item.name, inputTypes);\n      return {\n        ...acc,\n        [item.name]: new AbiFunction(item),\n        [key]: new AbiFunction(item),\n        [methodHash]: new AbiFunction(item)\n      };\n    });\n  }\n\n  /**\n   * @description Encodes inputs data according to  ethereum abi\n   * @param method string can be full method or just method name, examples: 'balanceOf' or balanceOf(address)\n   * @param inputs array\n   * @returns {*|string}\n   */\n  encodeInputs(method, inputs) {\n    const abiFunction = this.abiFunctions[method];\n    if (abiFunction) {\n      return abiFunction.encodeInputs(inputs);\n    } else {\n      throw new Error(`No  ${method} method according to abi `);\n    }\n  }\n\n  /**\n   * @description Decodes outputs\n   * @param method string can be full method or just method name, examples: 'balanceOf' or balanceOf(address)\n   * @param outputs string\n   * @returns {*}\n   */\n  decodeOutputs(method, outputs) {\n    const abiFunction = this.abiFunctions[method];\n    if (abiFunction) {\n      return abiFunction.decodeOutputs(outputs);\n    } else {\n      throw new Error(`No  ${method} method according to abi `);\n    }\n  }\n\n  /**\n   * @description Decode encoded method and inputs\n   * @param encode string | Buffer\n   * @returns {*}\n   */\n  decodeEncodeInputs(encode) {\n    encode = toHex(encode);\n    const methodId = encode.slice(0, 10);\n    const abiFunction = this.abiFunctions[methodId];\n    if (abiFunction) {\n      return abiFunction.decodeEncodedInputs(encode.slice(10));\n    } else {\n      throw new Error(`No corresponding method according to abi `);\n    }\n  }\n}\n","import Contract from './Contract';\n\nconst erc20Abi = require('../../config/abis/erc20.json');\nconst exchangeAbi = require('../../config/abis/exchange.json');\n\nconst ERC20Token = new Contract(erc20Abi);\nconst ExchangeContract = new Contract(exchangeAbi);\n\nexport default {\n  ERC20Token,\n  ExchangeContract\n};\n","import AbiFunction from './AbiFunction';\nimport Contract from './Contract';\nimport Contracts from './Contracts';\n\nexport default {\n  AbiFunction,\n  Contract,\n  Contracts\n};\n","import * as Poseidon from './poseidon';\nimport * as fm from '../common/formatter';\nimport ABI from '../ethereum/contracts';\nimport EdDSA from './eddsa';\nimport config from '../config';\nimport sha256 from 'crypto-js/sha256';\n\nconst assert = require('assert');\n\nexport function generateKeyPair(seed) {\n  return EdDSA.generateKeyPair(seed);\n}\n\nexport function verifyPassword(publicKeyX, publicKeyY, seed) {\n  const keyPair = generateKeyPair(seed);\n  return keyPair.publicKeyX === publicKeyX && keyPair.publicKeyY === publicKeyY;\n}\n\nexport function signGetApiKey(request, keyPair) {\n  if (request.signature !== undefined) {\n    return;\n  }\n  let sign = {\n    accountId: request.accountId,\n    publicKeyX: keyPair.publicKeyX,\n    publicKeyY: keyPair.publicKeyY\n  };\n  const hash = fm.addHexPrefix(sha256(JSON.stringify(sign)).toString());\n  // Create signature\n  request.signature = EdDSA.sign(keyPair.secretKey, hash);\n  // Verify signature\n  const success = EdDSA.verify(hash, request.signature, [\n    keyPair.publicKeyX,\n    keyPair.publicKeyY\n  ]);\n  assert(success, 'Failed to verify signature');\n  return request;\n}\n\nexport function createAccountAndDeposit({\n  exchangeAddress,\n  fee,\n  chainId,\n  publicX,\n  publicY,\n  token,\n  amount,\n  permission,\n  nonce,\n  gasPrice\n}) {\n  try {\n    let address, value;\n    if (token.symbol.toUpperCase() === 'ETH') {\n      address = '0x0';\n      value = '0';\n    } else {\n      address = token.address;\n      value = fm.toHex(fm.toBig(amount).times('1e' + token.decimals));\n    }\n\n    const data = ABI.Contracts.ExchangeContract.encodeInputs(\n      'updateAccountAndDeposit',\n      {\n        pubKeyX: fm.toHex(fm.toBN(publicX)),\n        pubKeyY: fm.toHex(fm.toBN(publicY)),\n        tokenAddress: address,\n        amount: value,\n        permission: fm.toBuffer(permission)\n      }\n    );\n\n    return {\n      to: exchangeAddress,\n      value: fm.toHex(fm.toBig(fee)),\n      data: data,\n      chainId: chainId,\n      nonce: fm.toHex(nonce),\n      gasPrice: fm.toHex(fm.fromGWEI(gasPrice)),\n      gas: fm.toHex(config.getGasLimitByType('create').gas)\n    };\n  } catch (err) {\n    console.error('Failed in method createOrUpdateAccount. Error: ', err);\n    throw err;\n  }\n}\n\nexport function deposit({\n  exchangeAddress,\n  chainId,\n  token,\n  fee,\n  amount,\n  nonce,\n  gasPrice\n}) {\n  let value, data;\n  try {\n    value = fm.toBig(amount).times('1e' + token.decimals);\n    if (token.symbol.toUpperCase() === 'ETH') {\n      data = ABI.Contracts.ExchangeContract.encodeInputs('deposit', {\n        tokenAddress: '0x0',\n        amount: fm.toHex(value)\n      });\n      value = value.plus(fee);\n    } else {\n      data = ABI.Contracts.ExchangeContract.encodeInputs('deposit', {\n        tokenAddress: token.address,\n        amount: fm.toHex(value)\n      });\n      value = fm.toBig(fee);\n    }\n\n    return {\n      to: exchangeAddress,\n      value: fm.toHex(value),\n      data: data,\n      chainId: chainId,\n      nonce: fm.toHex(nonce),\n      gasPrice: fm.toHex(fm.fromGWEI(gasPrice)),\n      gas: fm.toHex(config.getGasLimitByType('depositTo').gas)\n    };\n  } catch (err) {\n    console.error('Failed in method deposit. Error: ', err);\n    throw err;\n  }\n}\n\nexport function onChainWithdraw({\n  exchangeAddress,\n  chainId,\n  token,\n  amount,\n  nonce,\n  gasPrice,\n  fee\n}) {\n  let to, value, data;\n  try {\n    value = fm.toBig(amount).times('1e' + token.decimals);\n    to = token.symbol.toUpperCase() === 'ETH' ? '0x0' : token.address;\n    data = ABI.Contracts.ExchangeContract.encodeInputs('withdraw', {\n      tokenAddress: to,\n      amount: fm.toHex(value)\n    });\n    value = fee;\n\n    return {\n      to: exchangeAddress,\n      value: fm.toHex(fm.toBig(value)),\n      data: data,\n      chainId: chainId,\n      nonce: fm.toHex(nonce),\n      gasPrice: fm.toHex(fm.fromGWEI(gasPrice)),\n      gas: fm.toHex(config.getGasLimitByType('withdraw').gas)\n    };\n  } catch (err) {\n    console.error('Failed in method withdraw. Error: ', err);\n    throw err;\n  }\n}\n\nfunction setupOffChainWithdrawal(withdrawal, tokens) {\n  let token, feeToken;\n  if (!withdrawal.token.startsWith('0x')) {\n    token = config.getTokenBySymbol(withdrawal.token, tokens);\n  } else {\n    token = config.getTokenByAddress(withdrawal.token, tokens);\n  }\n  if (!withdrawal.tokenF.startsWith('0x')) {\n    feeToken = config.getTokenBySymbol(withdrawal.tokenF, tokens);\n  } else {\n    feeToken = config.getTokenByAddress(withdrawal.tokenF, tokens);\n  }\n  withdrawal.tokenId = token.id;\n  withdrawal.token = token.address;\n  withdrawal.amountInBN = config.toWEI(token.symbol, withdrawal.amount, tokens);\n  withdrawal.amount = withdrawal.amountInBN.toString(10);\n\n  withdrawal.tokenFId = feeToken.id;\n  withdrawal.tokenF = feeToken.address;\n  withdrawal.amountFInBN = config.toWEI(\n    feeToken.symbol,\n    withdrawal.amountF,\n    tokens\n  );\n  withdrawal.amountF = withdrawal.amountFInBN.toString(10);\n\n  withdrawal.label =\n    withdrawal.label !== undefined ? withdrawal.label : config.getLabel();\n  return withdrawal;\n}\n\nexport function signWithdrawal(_withdrawal, keyPair, exchangeId, tokens) {\n  if (_withdrawal.signature !== undefined) {\n    return;\n  }\n\n  const withdrawal = setupOffChainWithdrawal(_withdrawal, tokens);\n  const hasher = Poseidon.createHash(9, 6, 53);\n\n  // Calculate hash\n  const inputs = [\n    exchangeId,\n    withdrawal.accountId,\n    withdrawal.tokenId,\n    withdrawal.amountInBN,\n    withdrawal.tokenFId,\n    withdrawal.amountFInBN,\n    withdrawal.label,\n    withdrawal.nonce\n  ];\n  const hash = hasher(inputs).toString(10);\n\n  // Create signature\n  withdrawal.hash = hash;\n  withdrawal.signature = EdDSA.sign(keyPair.secretKey, hash);\n\n  /**\n  // Verify signature\n  const success = EdDSA.verify(hash, withdrawal.signature, [\n    keyPair.publicKeyX,\n    keyPair.publicKeyY\n  ]);\n  assert(success, 'Failed to verify signature');\n  */\n  return withdrawal;\n}\n\nexport function signOrder(_order, keyPair, tokens) {\n  if (_order.signature !== undefined) {\n    return;\n  }\n\n  const order = setupOrder(_order, tokens);\n  const hasher = Poseidon.createHash(14, 6, 53);\n\n  // Calculate hash\n  const inputs = [\n    order.exchangeId,\n    order.orderId,\n    order.accountId,\n    order.tokenSId,\n    order.tokenBId,\n    order.amountSInBN,\n    order.amountBInBN,\n    order.allOrNone ? 1 : 0,\n    order.validSince,\n    order.validUntil,\n    order.maxFeeBips,\n    order.buy ? 1 : 0,\n    order.label\n  ];\n\n  order.hash = hasher(inputs).toString(10);\n\n  // Create signature\n  const signature = EdDSA.sign(keyPair.secretKey, order.hash);\n  order.signature = signature;\n  order.signatureRx = signature.Rx;\n  order.signatureRy = signature.Ry;\n  order.signatureS = signature.s;\n\n  /**\n  // Verify signature\n  const success = EdDSA.verify(order.hash, order.signature, [\n    keyPair.publicKeyX,\n    keyPair.publicKeyY\n  ]);\n  assert(success, 'Failed to verify signature');\n   */\n  return order;\n}\n\nfunction setupOrder(order, tokens) {\n  let tokenBuy, tokenSell;\n  if (!order.tokenS.startsWith('0x')) {\n    tokenSell = config.getTokenBySymbol(order.tokenS, tokens);\n  } else {\n    tokenSell = config.getTokenByAddress(order.tokenS, tokens);\n  }\n  if (!order.tokenB.startsWith('0x')) {\n    tokenBuy = config.getTokenBySymbol(order.tokenB, tokens);\n  } else {\n    tokenBuy = config.getTokenByAddress(order.tokenB, tokens);\n  }\n  order.tokenS = tokenSell.address;\n  order.tokenB = tokenBuy.address;\n  order.tokenSId = tokenSell.tokenId;\n  order.tokenBId = tokenBuy.tokenId;\n\n  order.amountSInBN = config.toWEI(tokenSell.symbol, order.amountS, tokens);\n  order.amountS = order.amountSInBN.toString(10);\n\n  order.amountBInBN = config.toWEI(tokenBuy.symbol, order.amountB, tokens);\n  order.amountB = order.amountBInBN.toString(10);\n\n  order.buy = order.buy !== undefined ? !!order.buy : false;\n\n  order.maxFeeBips =\n    order.maxFeeBips !== undefined ? order.maxFeeBips : config.getMaxFeeBips();\n  order.allOrNone = order.allOrNone !== undefined ? !!order.allOrNone : false;\n\n  order.feeBips =\n    order.feeBips !== undefined ? order.feeBips : order.maxFeeBips;\n  order.rebateBips = order.rebateBips !== undefined ? order.rebateBips : 0;\n  order.label = order.label !== undefined ? order.label : config.getLabel();\n\n  assert(order.maxFeeBips < 64, 'maxFeeBips >= 64');\n  assert(order.feeBips < 64, 'feeBips >= 64');\n  assert(order.rebateBips < 64, 'rebateBips >= 64');\n  assert(order.label < 2 ** 16, 'order.label >= 2**16');\n\n  // Sign the order\n  return order;\n}\n\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport function signCancel(_cancel, keyPair) {\n  if (_cancel.signature !== undefined) {\n    return;\n  }\n  const cancel = setupCancel(_cancel);\n  const hasher = Poseidon.createHash(9, 6, 53);\n\n  // Calculate hash\n  const inputs = [\n    cancel.exchangeId,\n    cancel.accountId,\n    cancel.orderTokenId,\n    cancel.orderId,\n    cancel.tokenFId,\n    cancel.amountFInBN,\n    cancel.label,\n    cancel.nonce\n  ];\n  const hash = hasher(inputs).toString(10);\n\n  // Create signature\n  cancel.signature = EdDSA.sign(keyPair.secretKey, hash);\n\n  /**\n     *\n     // Verify signature\n     const success = EdDSA.verify(hash, cancel.signature, [\n     keyPair.publicKeyX,\n     keyPair.publicKeyY\n     ]);\n     assert(success, 'Failed to verify signature');\n     */\n\n  return cancel;\n}\n\nfunction setupCancel(cancel, tokens) {\n  let orderToken, feeToken;\n  if (!cancel.orderToken.startsWith('0x')) {\n    orderToken = config.getTokenBySymbol(cancel.orderToken, tokens);\n  } else {\n    orderToken = config.getTokenByAddress(cancel.orderToken, tokens);\n  }\n  if (!cancel.tokenF.startsWith('0x')) {\n    feeToken = config.getTokenBySymbol(cancel.tokenF, tokens);\n  } else {\n    feeToken = config.getTokenByAddress(cancel.tokenF, tokens);\n  }\n  cancel.tokenFId = feeToken.tokenId;\n  cancel.tokenF = feeToken.symbol;\n  cancel.orderTokenId = orderToken.tokenId;\n  cancel.orderToken = orderToken.symbol;\n\n  cancel.amountFInBN = config.toWEI(feeToken.symbol, cancel.amountF, tokens);\n  cancel.amountF = cancel.amountFInBN.toString(10);\n\n  cancel.label = cancel.label !== undefined ? cancel.label : config.getLabel();\n  return cancel;\n}\n\nexport function signFlexCancel(request, keyPair) {\n  if (request.signature !== undefined) {\n    return;\n  }\n  let sign = {\n    accountId: request.accountId,\n    orderHash: request.orderHash,\n    clientOrderId: request.clientOrderId\n  };\n\n  const hash = fm.addHexPrefix(sha256(JSON.stringify(sign)).toString());\n  // Create signature\n  request.signature = EdDSA.sign(keyPair.secretKey, hash);\n\n  /**\n     *\n     // Verify signature\n     const success = EdDSA.verify(hash, request.signature, [\n     keyPair.publicKeyX,\n     keyPair.publicKeyY\n     ]);\n     assert(success, 'Failed to verify signature');\n     */\n\n  return request;\n}\n","import { addHexPrefix, toHex, toNumber } from '../common/formatter';\nimport { hashPersonalMessage, keccak256 } from 'ethereumjs-util';\nimport { validate } from '../common';\nimport Transaction from 'ethereumjs-tx';\n\n/**\n * @description sign hash\n * @param web3\n * @param account\n * @param hash\n * @returns {Promise.<*>}\n */\nexport async function sign(web3, account, hash) {\n  await validate({ value: account, type: 'ETH_ADDRESS' });\n\n  return new Promise(resolve => {\n    web3.eth.sign(account, hash, function(err, result) {\n      if (!err) {\n        const r = result.slice(0, 66);\n        const s = addHexPrefix(result.slice(66, 130));\n        const v = toNumber(addHexPrefix(result.slice(130, 132)));\n        resolve({ result: { r, s, v } });\n      } else {\n        const errorMsg = err.message.substring(0, err.message.indexOf(' at '));\n        resolve({ error: { message: errorMsg } });\n      }\n    });\n  });\n}\n\n/**\n * @description sign message\n * @param web3\n * @param account\n * @param message\n * @returns {Promise}\n */\nexport function signMessage(web3, account, message) {\n  const hash = toHex(hashPersonalMessage(keccak256(message)));\n  return sign(web3, account, hash);\n}\n\n/**\n * @description Signs ethereum tx\n * @param web3\n * @param account\n * @param rawTx\n * @returns {Promise.<*>}\n */\nexport async function signEthereumTx(web3, account, rawTx) {\n  await validate({ value: rawTx, type: 'TX' });\n  const ethTx = new Transaction(rawTx);\n  const hash = toHex(ethTx.hash(false));\n  const response = await sign(web3, account, hash);\n  if (!response['error']) {\n    const signature = response['result'];\n    signature.v += ethTx.getChainId() * 2 + 8;\n    Object.assign(ethTx, signature);\n    return { result: toHex(ethTx.serialize()) };\n  } else {\n    throw new Error(response['error']['message']);\n  }\n}\n\n/**\n * @description Sends ethereum tx through MetaMask\n * @param web3\n * @param tx\n * @returns {*}\n */\nexport async function sendTransaction(web3, tx) {\n  await validate({ type: 'TX', value: tx });\n  delete tx.gasPrice;\n  const response = await new Promise(resolve => {\n    web3.eth.sendTransaction(tx, function(err, transactionHash) {\n      if (!err) {\n        resolve({ result: transactionHash });\n      } else {\n        resolve({ error: { message: err.message } });\n      }\n    });\n  });\n\n  if (response['result']) {\n    return response;\n  } else {\n    throw new Error(response['error']['message']);\n  }\n}\n","import * as exchange from '../sign/exchange';\nimport * as fm from '../common/formatter';\nimport { keccakHash } from '../common/utils';\nimport { sendTransaction, signEthereumTx } from '../ethereum/metaMask';\nimport Contracts from '../ethereum/contracts/Contracts';\nimport config from '../config';\n\nconst assert = require('assert');\n\nexport default class Wallet {\n  constructor(web3, address, accountId = -1, keyPair = null) {\n    this.web3 = web3;\n    this.address = address;\n    this.accountId = accountId;\n    this.keyPair = keyPair;\n  }\n\n  /**\n   * Approve Zero\n   * @param tokenAddress: approve token symbol to zero\n   * @param nonce: Ethereum nonce of this address\n   * @param gasPrice: gas price in gwei\n   * @param sendByMetaMask\n   */\n  async approveZero(\n    tokenAddress,\n    exchangeAddress,\n    chainId,\n    nonce,\n    gasPrice,\n    sendByMetaMask = false\n  ) {\n    const rawTx = {\n      to: tokenAddress,\n      value: '0x0',\n      data: Contracts.ERC20Token.encodeInputs('approve', {\n        _spender: exchangeAddress,\n        _value: '0x0'\n      }),\n      chainId: chainId,\n      nonce: fm.toHex(nonce),\n      gasPrice: fm.toHex(fm.fromGWEI(gasPrice)),\n      gas: fm.toHex(config.getGasLimitByType('approve').gas)\n    };\n\n    const response = sendByMetaMask\n      ? await sendTransaction(this.web3, rawTx)\n      : await signEthereumTx(this.web3, this.address, rawTx);\n    return response['result'];\n  }\n\n  /**\n   * Approve Max\n   * @param tokenAddress: approve token symbol to max\n   * @param nonce: Ethereum nonce of this address\n   * @param gasPrice: gas price in gwei\n   * @param sendByMetaMask\n   */\n  async approveMax(\n    tokenAddress,\n    exchangeAddress,\n    chainId,\n    nonce,\n    gasPrice,\n    sendByMetaMask = false\n  ) {\n    const rawTx = {\n      to: tokenAddress,\n      value: '0x0',\n      data: Contracts.ERC20Token.encodeInputs('approve', {\n        _spender: exchangeAddress,\n        _value: config.getMaxAmountInWEI()\n      }),\n      chainId: chainId,\n      nonce: fm.toHex(nonce),\n      gasPrice: fm.toHex(fm.fromGWEI(gasPrice)),\n      gas: fm.toHex(config.getGasLimitByType('approve').gas)\n    };\n    const response = sendByMetaMask\n      ? await sendTransaction(this.web3, rawTx)\n      : await signEthereumTx(this.web3, this.address, rawTx);\n\n    return response['result'];\n  }\n\n  /**\n   * generate key pair of account in DEX\n   * @param password: account specified password\n   */\n  generateKeyPair(password) {\n    assert(this.address !== null);\n    return exchange.generateKeyPair(\n      keccakHash('LOOPRING' + this.address.toLowerCase() + keccakHash(password))\n    );\n  }\n\n  /**\n   * verify password of account in DEX\n   * @param password: account specified password\n   */\n  verifyPassword(password) {\n    assert(this.address !== null);\n    return exchange.verifyPassword(\n      this.keyPair.publicKeyX,\n      this.keyPair.publicKeyY,\n      keccakHash('LOOPRING' + this.address.toLowerCase() + keccakHash(password))\n    );\n  }\n\n  /**\n   * create Or Update Account in DEX\n   * @param gasPrice: in gwei\n   * @param nonce: Ethereum nonce of this address\n   * @param permission: user permission\n   * @param password: user password\n   * @param sendByMetaMask\n   */\n\n  /**\n   *\n   * exchangeAddress,\n   fee,\n   chainId,\n   publicX,\n   publicY,\n   token,\n   amount,\n   permission,\n   nonce,\n   gasPrice\n   *\n   * */\n  async createOrUpdateAccount(password, payload, sendByMetaMask = false) {\n    const keyPair = this.generateKeyPair(password);\n    const tx = exchange.createAccountAndDeposit({\n      ...payload,\n      publicX: keyPair.publicKeyX,\n      publicY: keyPair.publicKeyY\n    });\n    const response = sendByMetaMask\n      ? await sendTransaction(this.web3, tx)\n      : await signEthereumTx(this.web3, this.address, tx);\n    return {\n      data: response['result'],\n      keyPair: keyPair\n    };\n  }\n\n  /**\n   * Deposit to Dex\n   * @param payload\n   * @param sendByMetaMask\n   */\n  async depositTo(payload, sendByMetaMask = false) {\n    const tx = exchange.deposit(payload);\n    const response = sendByMetaMask\n      ? await sendTransaction(this.web3, tx)\n      : await signEthereumTx(this.web3, this.address, tx);\n    return response['result'];\n  }\n\n  /**\n   * On-chain Withdrawal from Dex\n   * @param payload\n   * @param sendByMetaMask\n   */\n  async onchainWithdrawal(payload, sendByMetaMask) {\n    const rawTx = exchange.onChainWithdraw(payload);\n    const response = sendByMetaMask\n      ? await sendTransaction(this.web3, rawTx)\n      : await signEthereumTx(this.web3, this.address, rawTx);\n    return response['result'];\n  }\n\n  /**\n   * Off-chain Withdrawal from Dex\n   * @param accountId: account ID in exchange\n   * @param nonce: DEX nonce of account\n   * @param token: token symbol or address to withdraw\n   * @param amount: amount to withdraw, in decimal string. e.g. '15'\n   * @param tokenF: fee token symbol or address to withdraw\n   * @param amountF: withdrawal fee, in decimal string. e.g. '15'\n   * @param label: label used in protocol\n   */\n  offchainWithdrawal(accountId, nonce, token, amount, tokenF, amountF, label) {\n    const withdraw = {\n      accountId: this.accountId,\n      nonce: nonce,\n      token: token,\n      amount: amount,\n      tokenF: tokenF,\n      amountF: amountF,\n      label: label\n    };\n    return exchange.signWithdrawal(withdraw, this.keyPair);\n  }\n\n  /**\n   * Get signed order, should be submitted by frontend itself TEMPORARY\n   * @param tokenS: symbol or hex address of token sell\n   * @param tokenB: symbol or hex address of token buy\n   * @param amountS: amount of token sell, in string number\n   * @param amountB: amount of token buy, in string number\n   * @param orderId: next order ID, needed by order signature\n   * @param validSince: valid beginning period of this order, SECOND in timestamp\n   * @param validUntil: valid ending period of this order, SECOND in timestamp\n   * @param label label used in protocol\n   * @param buy boolean\n   * @param channelId\n   */\n  submitOrder(\n    tokens,\n    exchangeId,\n    tokenS,\n    tokenB,\n    amountS,\n    amountB,\n    orderId,\n    validSince,\n    validUntil,\n    label,\n    buy,\n    channelId\n  ) {\n    const order = {\n      exchangeId,\n      owner: this.address,\n      accountId: this.accountId,\n      tokenS: tokenS,\n      tokenB: tokenB,\n      amountS: amountS,\n      amountB: amountB,\n      orderId: orderId,\n      validSince: Math.floor(validSince),\n      validUntil: Math.floor(validUntil),\n      label: label,\n      buy: buy,\n      channelId\n    };\n\n    return exchange.signOrder(order, this.keyPair, tokens);\n  }\n\n  /**\n   * Cancel order in Dex\n   * @param nonce: DEX nonce of account\n   * @param orderToken: token symbol or address of cancel\n   * @param orderId: specified order id to cancel\n   * @param tokenF: amountF token symbol or address of cancel\n   * @param amountF: cancel amountF, e.g. '15'\n   * @param label: [OPTIONAL] label used in protocol\n   */\n  submitCancel(nonce, orderToken, orderId, tokenF, amountF, label) {\n    const cancel = {\n      accountId: this.accountId,\n      nonce: nonce,\n      orderToken: orderToken,\n      orderId: orderId,\n      tokenF: tokenF,\n      amountF: amountF,\n      label: label\n    };\n\n    return exchange.signCancel(cancel, this.keyPair);\n  }\n\n  /**\n   * Get Api Key signature\n   */\n  getApiKey() {\n    const request = {\n      accountId: this.accountId\n    };\n    return exchange.signGetApiKey(request, this.keyPair);\n  }\n\n  /**\n   * Get Api Key signature\n   * @param orderHash: [OPTIONAL] specified order hash to cancel\n   * @param clientOrderId: [OPTIONAL] specified client order ID to cancel\n   */\n  submitFlexCancel(orderHash = \"'\", clientOrderId = '') {\n    const request = {\n      accountId: this.accountId,\n      orderHash: orderHash,\n      clientOrderId: clientOrderId\n    };\n    return exchange.signFlexCancel(request, this.keyPair);\n  }\n}\n","import { request } from '../../../common';\n\nexport async function getEthNonce(address) {\n  const data = {\n    address\n  };\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/ethNonce',\n    data\n  });\n\n  return response['nonce'];\n}\n","import { getEthNonce } from 'lightcone/api/v1/ethnonce';\n\nexport const UPDATE_NONCE = 'UPDATE_NONCE';\nexport const FETCH_NONCE = 'FETCH_NONCE';\n\nexport function updateNonce(nonce) {\n  return {\n    type: UPDATE_NONCE,\n    payload: {\n      nonce\n    }\n  };\n}\n\nexport function fetchNonce(address) {\n  return dispatch => {\n    (async () => {\n      try {\n        const nonce = await getEthNonce(address);\n        dispatch(updateNonce(nonce));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport colors from 'colors';\n\nconst LabelValue = ({ label, value, unit, onClick = () => {} }) => {\n  return (\n    <Row\n      gutter={16}\n      style={{\n        padding: '4px 0',\n        fontSize: '0.85rem'\n      }}\n      onClick={onClick}\n    >\n      <Col\n        span={12}\n        style={{\n          color: colors.textDim\n        }}\n      >\n        {label}\n      </Col>\n      <Col\n        span={12}\n        style={{\n          textAlign: 'right',\n          color: colors.textWhite\n        }}\n      >\n        {value}\n\n        {unit ? (\n          <span\n            style={{\n              minWidth: '40px',\n              textAlign: 'right',\n              userSelect: 'none',\n              paddingLeft: '4px'\n            }}\n          >\n            {unit}\n          </span>\n        ) : (\n          <span />\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default LabelValue;\n","import styled from 'styled-components';\n\nimport { Modal } from 'antd';\nimport colors from 'colors';\n\nconst TextFormError = styled.span`\n  color: ${colors.red};\n  font-size: 0.9rem;\n`;\n\nconst TextPopupTitle = styled.span`\n  color: ${colors.textBright};\n  font-size: 1.2rem;\n  font-weight: 600;\n  user-select: none;\n`;\n\nconst AddressDiv = styled.div`\n  padding: 10px 16px;\n  background: ${colors.foreground};\n  color: ${colors.textDim};\n  border-radius: 4px;\n  font-size: 0.9rem;\n`;\n\nconst Instruction = styled.p`\n  color: ${colors.textWhite};\n  font-weight: 400;\n  font-size: 0.9rem;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  padding-bottom: 12px;\n  color: ${colors.textWhite};\n  font-weight: 400;\n  font-size: 0.9rem;\n\n  ul {\n    padding-inline-start: 16px;\n  }\n`;\n\nconst MyModal = styled(Modal)`\n  .ant-spin-blur {\n    opacity: 0 !important;\n  }\n`;\nexport {\n  MyModal,\n  TextFormError,\n  TextPopupTitle,\n  AddressDiv,\n  Instruction,\n  Section\n};\n","let schemas = {\n  STRING: {\n    type: 'string',\n    required: true\n  },\n  URL: {\n    type: 'url',\n    required: true\n  },\n  ADDRESS: {\n    type: 'string',\n    required: true,\n    pattern: /^0x[0-9a-fA-F]{40}$/g\n  },\n  HEX: {\n    type: 'string',\n    required: true,\n    pattern: /^0x[0-9a-fA-F]*$/g\n  },\n  ETH_DATA: {\n    type: 'string',\n    required: true,\n    pattern: /^0x[0-9a-fA-F]{1,64}$/g\n  },\n  TX_HASH: {\n    type: 'string',\n    required: true,\n    pattern: /^0x[0-9a-fA-F]{64}$/g\n  },\n  RPC_TAG: {\n    type: 'enum',\n    required: true,\n    enum: ['latest', 'earliest', 'pending']\n  },\n  TX: {\n    type: 'object',\n    required: true,\n    fields: {\n      to: {\n        type: 'string',\n        required: true,\n        pattern: /^0x[0-9a-fA-F]{40}$/g\n      },\n      value: {\n        type: 'string',\n        required: true,\n        pattern: /^0x[0-9a-fA-F]{1,64}$/g\n      },\n      gas: {\n        type: 'string',\n        required: true,\n        pattern: /^0x[0-9a-fA-F]{1,64}$/g\n      },\n      gasPrice: {\n        type: 'string',\n        required: true,\n        pattern: /^0x[0-9a-fA-F]{1,64}$/g\n      },\n      chainId: {\n        type: 'number',\n        required: true\n      },\n      nonce: {\n        type: 'string',\n        required: true,\n        pattern: /^0x[0-9a-fA-F]{1,64}$/g\n      },\n      data: {\n        type: 'string',\n        required: true,\n        pattern: /^0x[0-9a-fA-F]*$/g\n      },\n      signed: {\n        type: 'string'\n      }\n    }\n  }\n};\n\nexport default schemas;\n","import Schema from 'async-validator';\nimport schemas from './schemas';\n\nlet handleErrors = errors => {\n  let msgs = errors.map(err => err.message).join();\n  throw new Error(`data type invalid: ${msgs} \\n`);\n};\n\nexport default async function validate(payload) {\n  let { type, value, onError, onSuccess } = payload;\n  let source = {};\n  let schema = {};\n\n  if (typeof value === 'undefined') {\n    throw new Error(`data type invalid: ${type} should not be undefined`);\n  }\n  if (value === null) {\n    throw new Error(`data type invalid: ${type} should not be null`);\n  }\n\n  if (schemas[type]) {\n    schema[type] = schemas[type];\n    source[type] = value;\n  }\n\n  let validator = new Schema(schema);\n  await validator.validate(source, (errors, fields) => {\n    if (errors) {\n      if (onError) {\n        onError(errors, fields);\n      } else {\n        handleErrors(errors, fields);\n      }\n    } else {\n      if (onSuccess) {\n        onSuccess();\n      }\n    }\n  });\n}\n","import * as formatter from './formatter';\nimport * as utils from './utils';\nimport request from './request';\nimport validate from './validator';\n\nexport { formatter, request, validate, utils };\n","export const UPDATE_COLOR = 'SET_COLOR';\n\nexport function updateColor(language) {\n  return {\n    type: UPDATE_COLOR,\n    payload: {\n      language\n    }\n  };\n}\n","import { getCandlestick } from 'lightcone/api/LightconeAPI';\n\nimport config from 'lightcone/config';\n\nexport const UPDATE_CANDLE = 'UPDATE_CANDLE';\n\nexport function updateCandles(ohlc) {\n  return {\n    type: UPDATE_CANDLE,\n    payload: {\n      ohlc\n    }\n  };\n}\n\nexport function fetchCandles(market, configTokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        var newCandles = [];\n        const candles = await getCandlestick(market, '1min');\n        for (var i = 0; i < candles.length; i = i + 1) {\n          const candle = candles[i];\n          const tokens = market.split('-');\n          const baseToken = tokens[0];\n          const quoteToken = tokens[1];\n\n          let parsedCandle = {\n            close: Number(candle['close']),\n            high: Number(candle['high']),\n            low: Number(candle['low']),\n            open: Number(candle['open']),\n            date: new Date(candle['start']),\n            volume: config.fromWEI(quoteToken, candle['volume'], configTokens),\n            size: config.fromWEI(baseToken, candle['size'], configTokens)\n          };\n          newCandles.push(parsedCandle);\n        }\n\n        // Requires at last two data points to draw candlestick\n        if (newCandles && newCandles.length > 1) {\n          newCandles = newCandles.sort((a, b) => (a.date > b.date ? 1 : -1));\n          dispatch(updateCandles(newCandles));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n","export const SET_MARKET = 'SET_MARKET';\n\nexport function setMarket(marketName) {\n  return {\n    type: SET_MARKET,\n    payload: {\n      marketName\n    }\n  };\n}\n","export const SHOW_REGISTER_ACCOUNT = 'SHOW_REGISTER_ACCOUNT';\nexport const SHOW_DEPOSIT = 'SHOW_DEPOSIT';\nexport const SHOW_WITHDRAW = 'SHOW_WITHDRAW';\nexport const SHOW_LOGOUT_MODAL = 'SHOW_LOGOUT_MODAL';\nexport const SHOW_EXPORT_ACCOUNT = 'SHOW_EXPORT_ACCOUNT';\nexport const SHOW_ENTER_PASSWORD = 'SHOW_ENTER_PASSWORD';\n\nexport const SHOW_LOGIN_MODAL = 'SHOW_LOGIN_MODAL';\nexport const SHOW_RESET_PASSWORD_MODAL = 'SHOW_RESET_PASSWORD_MODAL';\n\nexport const SHOW_SIDEBAR = 'SHOW_SIDEBAR';\n\nexport function registerAccountModal(show) {\n  return {\n    type: SHOW_REGISTER_ACCOUNT,\n    payload: {\n      show\n    }\n  };\n}\n\nexport function loginModal(show) {\n  return {\n    type: SHOW_LOGIN_MODAL,\n    payload: {\n      show\n    }\n  };\n}\n\nexport function resetPasswordModal(show) {\n  return {\n    type: SHOW_RESET_PASSWORD_MODAL,\n    payload: {\n      show\n    }\n  };\n}\n\nexport function showDepositModal(show, token) {\n  return {\n    type: SHOW_DEPOSIT,\n    payload: {\n      show,\n      token\n    }\n  };\n}\n\nexport function showWithdrawModal(show, token) {\n  return {\n    type: SHOW_WITHDRAW,\n    payload: {\n      show,\n      token\n    }\n  };\n}\n\nexport function showLogoutModal(show) {\n  return {\n    type: SHOW_LOGOUT_MODAL,\n    payload: {\n      show\n    }\n  };\n}\n\nexport function showExportAccountModal(show) {\n  return {\n    type: SHOW_EXPORT_ACCOUNT,\n    payload: {\n      show\n    }\n  };\n}\n\nexport function showEnterPasswordModal(show) {\n  return {\n    type: SHOW_ENTER_PASSWORD,\n    payload: {\n      show\n    }\n  };\n}\n\nexport function showSideBar(show) {\n  return {\n    type: SHOW_SIDEBAR,\n    payload: {\n      show\n    }\n  };\n}\n","import { Button, Col, Dropdown, Menu, Row } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons/faCaretDown';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst AssetMenu = styled(Menu)`\n  background: ${colors.foreground}!important;\n  li {\n    padding-left: 16px;\n    border-bottom: 1px solid ${colors.border}!important;\n\n    :hover {\n      background: ${colors.theme} !important;\n    }\n  }\n`;\n\nconst AssetDropdown = ({ options, selected }) => {\n  return (\n    <Dropdown trigger={['click']} overlay={<AssetMenu>{options}</AssetMenu>}>\n      <Button\n        style={{\n          height: '40px',\n          width: '100%',\n          backgroundColor: colors.foreground,\n          borderStyle: 'none',\n          fontSize: '0.9rem'\n        }}\n      >\n        <Row\n          className=\"dropdown-row\"\n          gutter={16}\n          style={{\n            paddingBottom: '1px'\n          }}\n        >\n          <Col\n            span={16}\n            style={{\n              textAlign: 'left',\n              color: colors.textWhite\n            }}\n          >\n            {selected}\n          </Col>\n          <Col\n            span={8}\n            style={{\n              textAlign: 'right',\n              color: colors.textWhite\n            }}\n          >\n            <FontAwesomeIcon icon={faCaretDown} />\n          </Col>\n        </Row>\n      </Button>\n    </Dropdown>\n  );\n};\n\nexport default AssetDropdown;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst MyFontAwesomeIcon = styled(FontAwesomeIcon)`\n  display: inline-block;\n  width: 16px !important;\n`;\n\nconst PasswordRule = ({ ruleText, password, validator, aggregator }) => {\n  const passed = validator(password);\n  aggregator(passed);\n\n  const getIcon = (password, passed) => {\n    if (password === '')\n      return <MyFontAwesomeIcon icon={faCheck} style={{ color: 'inherit' }} />;\n    else if (passed)\n      return (\n        <MyFontAwesomeIcon icon={faCheck} style={{ color: colors.green }} />\n      );\n    else\n      return <MyFontAwesomeIcon icon={faTimes} style={{ color: colors.red }} />;\n  };\n\n  return (\n    <p\n      style={{\n        fontSize: '0.9rem',\n        margin: '4px 0'\n      }}\n    >\n      {getIcon(password, passed)}\n      <span> {ruleText} </span>\n    </p>\n  );\n};\nexport default PasswordRule;\n","import { ActionButton } from 'styles/Styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MyModal } from './styles/Styles';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport PasswordRule from './components/PasswordRule';\nimport React from 'react';\nimport colors from 'colors';\n\nimport {\n  AddressDiv,\n  Section,\n  TextFormError,\n  TextPopupTitle\n} from 'modals/styles/Styles';\nimport { Input, Spin } from 'antd';\nimport Group from 'modals/components/Group';\nimport ModalIndicator from 'modals/components/ModalIndicator';\n\nclass ConfirmPasswordModal extends React.Component {\n  title = 'OVERRIDE';\n  buttonLabel = 'OVERRIDE';\n  instructions = '';\n  onClose = () => {\n    this.props.closeModal();\n  };\n\n  onProceed = () => {\n    alert('override me');\n  };\n\n  state = {\n    loading: false,\n    isPasswordValid: true,\n    password: '',\n    repeatedPassword: '',\n    passwordMismatch: false\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.isVisible === false &&\n      this.props.isVisible !== prevProps.isVisible\n    ) {\n      this.setState({\n        loading: false,\n        isPasswordValid: true,\n        password: '',\n        repeatedPassword: '',\n        passwordMismatch: false\n      });\n    }\n  }\n\n  passwordValidationAggregator = ruleResult => {\n    if (this.state.isPasswordValid && !ruleResult) {\n      this.setState({ isPasswordValid: false });\n    }\n  };\n\n  getIfPasswordsMismatch = (password1, password2) => {\n    let p1 = password1 || '';\n    let p2 = password2 || '';\n    //return p2.length > p1.length || p1.substring(0, p2.length) !== p2;\n    return p1 !== p2;\n  };\n\n  onPasswordChange = e => {\n    const { value } = e.target;\n    /**\n     * 用户还未输入repeated Password时，可以不对mismatch做校验\n     */\n    const mismatch = !this.state.repeatedPassword\n      ? false\n      : this.getIfPasswordsMismatch(value, this.state.repeatedPassword);\n    this.setState({\n      isPasswordValid: true,\n      password: value,\n      passwordMismatch: mismatch\n    });\n  };\n\n  onRepeatedPasswordChange = e => {\n    const { value } = e.target;\n    const mismatch = this.getIfPasswordsMismatch(this.state.password, value);\n    this.setState({\n      repeatedPassword: value,\n      passwordMismatch: mismatch\n    });\n  };\n\n  onPasswordEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      if (\n        this.state.password.length > 0 &&\n        this.state.password === this.state.repeatedPassword &&\n        this.state.isPasswordValid\n      )\n        this.onProceed();\n    }\n  };\n\n  render() {\n    return (\n      <MyModal\n        width={AppLayout.modalWidth}\n        title={<TextPopupTitle>{this.title}</TextPopupTitle>}\n        footer={null}\n        maskClosable={false}\n        closeIcon={<FontAwesomeIcon icon={faTimes} />}\n        visible={this.props.isVisible}\n        onCancel={() => this.onClose()}\n      >\n        <Spin\n          indicator={\n            <ModalIndicator\n              title=\"metamaskConfirm\"\n              tips={[\n                <div key=\"1\">\n                  <I s=\"metaMaskPendingTxTip\" />\n                </div>\n              ]}\n              imageUrl=\"/assets/images/metamask_pending.png\"\n              marginTop=\"80px\"\n            />\n          }\n          spinning={this.state.loading}\n        >\n          {this.instructions}\n          <Section>\n            <Group label={<I s=\"My Address\" />}>\n              <AddressDiv>{window.wallet && window.wallet.address}</AddressDiv>\n            </Group>\n            <Group label={<I s=\"Password\" />}>\n              <Input.Password\n                autoFocus\n                autoCapitalize={'off'}\n                autoComplete={'off'}\n                value={this.state.password}\n                onChange={this.onPasswordChange}\n                onBlur={this.onBlur}\n                placeholder=\"\"\n                maxLength={128}\n                style={{\n                  color: colors.textWhite\n                }}\n              />\n            </Group>\n            <Group label={<I s=\"Confirm Password\" />}>\n              <Input.Password\n                autoCapitalize={'off'}\n                autoComplete={'off'}\n                value={this.state.repeatedPassword}\n                onChange={this.onRepeatedPasswordChange}\n                onBlur={this.onBlur}\n                placeholder=\"\"\n                maxLength={128}\n                style={{\n                  color: colors.textWhite\n                }}\n                onKeyDown={this.onPasswordEnter.bind(this)}\n              />\n              <div\n                style={{\n                  marginTop: '12px',\n                  height: '20px'\n                }}\n              >\n                <TextFormError>\n                  {this.state.passwordMismatch ? (\n                    <I s=\"PasswordMismatch\" />\n                  ) : (\n                    ''\n                  )}\n                </TextFormError>\n              </div>\n            </Group>\n            <Group>\n              <div>\n                <p>\n                  <I s=\"PasswordRequirements\" />\n                </p>\n\n                <PasswordRule\n                  ruleText={<I s=\"PasswordRequirements_1\" />}\n                  password={this.state.password}\n                  validator={password => {\n                    return !!password.match(/[a-z]/g);\n                  }}\n                  aggregator={this.passwordValidationAggregator}\n                />\n                <PasswordRule\n                  ruleText={<I s=\"PasswordRequirements_2\" />}\n                  password={this.state.password}\n                  validator={password => {\n                    return !!password.match(/[A-Z]/g);\n                  }}\n                  aggregator={this.passwordValidationAggregator}\n                />\n                <PasswordRule\n                  ruleText={<I s=\"PasswordRequirements_3\" />}\n                  password={this.state.password}\n                  validator={password => {\n                    return !!password.match(/[0-9]/g);\n                  }}\n                  aggregator={this.passwordValidationAggregator}\n                />\n                <PasswordRule\n                  ruleText={<I s=\"PasswordRequirements_4\" />}\n                  password={this.state.password}\n                  ruleOK={this.state.hasSpecialLetter}\n                  validator={password => {\n                    return !!password.match(\n                      /[\\\\/~`!@#$%^&*(){}[\\]\"':;?+=\\-|_/>.<,\"]/g\n                    );\n                  }}\n                  aggregator={this.passwordValidationAggregator}\n                />\n                <PasswordRule\n                  ruleText={<I s=\"PasswordRequirements_5\" />}\n                  password={this.state.password}\n                  validator={password => {\n                    return password.length >= 12 && password.length <= 128;\n                  }}\n                  aggregator={this.passwordValidationAggregator}\n                />\n              </div>\n            </Group>\n          </Section>\n          {this.props.showLoginModal ? (\n            <Section>\n              <Group>\n                <a\n                  href\n                  onClick={() => {\n                    this.props.closeModal();\n                    this.props.showLoginModal();\n                  }}\n                  style={{\n                    display: 'inline-block',\n                    float: 'right'\n                  }}\n                >\n                  <I s=\"Try to login again?\" />\n                </a>\n              </Group>\n            </Section>\n          ) : (\n            <span />\n          )}\n\n          <Section>\n            <ActionButton\n              disabled={\n                this.state.password.length === 0 ||\n                this.state.password !== this.state.repeatedPassword ||\n                !this.state.isPasswordValid\n              }\n              onClick={() => this.onProceed()}\n            >\n              {this.buttonLabel}\n            </ActionButton>\n          </Section>\n        </Spin>\n      </MyModal>\n    );\n  }\n}\n\nexport default ConfirmPasswordModal;\n","import { formatter, request } from '../../../common';\n\nexport async function getTokenInfo() {\n  const data = {};\n  const response = await request({\n    method: 'GET',\n    url: '/api/v2/exchange/tokens',\n    data\n  });\n\n  return response['tokens'].map(token => {\n    token.address = formatter.formatAddress(token.address);\n    return token;\n  });\n}\n","import { getTokenInfo } from './get';\n\nexport { getTokenInfo };\n","import { request } from '../../../common';\n// import config from '../../../config';\n\nexport async function getMarketInfo() {\n  const response = await request({\n    method: 'GET',\n    url: '/api/v2/exchange/markets'\n  });\n  return response['markets'];\n}\n\n// function map(markets) {\n//   let updatedMarkets = [];\n//   for (let i = 0; i < markets.length; i = i + 1) {\n//     const market = markets[i];\n//     const baseTokenId = market['baseTokenId'];\n//     let baseToken = config.getTokenByTokenId(baseTokenId);\n//     const quoteTokenId = market['quoteTokenId'];\n//     let quoteToken = config.getTokenByTokenId(quoteTokenId);\n//     const updatedMarket = {\n//       ...market,\n//       baseToken,\n//       quoteToken\n//     };\n//     updatedMarkets.push(updatedMarket);\n//   }\n//   return updatedMarkets;\n// }\n","import { getMarketInfo } from './get';\n\nexport { getMarketInfo };\n","import { request } from '../../../common';\nimport config from '../../../config';\n\nexport async function getTokenBalance(owner, symbol, tokens) {\n  let token = config.getTokenBySymbol(symbol, tokens);\n  let tokenAddress = token.address;\n  const data = {\n    owner,\n    token: tokenAddress\n  };\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/tokenBalances',\n    data\n  });\n\n  return response['balances'];\n}\n","import { getTokenBalance } from './get';\n\nexport { getTokenBalance };\n","import { request } from '../../../common';\n\nexport async function getEthBalance(address) {\n  const data = {\n    address\n  };\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/ethBalances',\n    data\n  });\n\n  return response['balances'];\n}\n","import { getEthBalance } from './get';\n\nexport { getEthBalance };\n","import { request } from '../../../common';\nimport config from '../../../config';\nconst BigNumber = require('bignumber.js');\n\n// tokenIds is skip to get all tokens\nexport async function getBalances(accountId, apiKey, tokens, skip, limit) {\n  const data = {\n    accountId,\n    skip,\n    limit\n  };\n  const headers = {\n    'X-API-KEY': apiKey\n  };\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/user/balances',\n    headers: headers,\n    data\n  });\n\n  const balances = response['balances'];\n  return map(balances, tokens);\n}\n\n// Map API modal to UI modal\nexport function map(balances, configTokens) {\n  let updatedBalances = [];\n\n  for (let i = 0; i < balances.length; i = i + 1) {\n    const balance = balances[i];\n    let updatedBalance = { ...balance };\n    const tokenId = updatedBalance['tokenId'];\n    let token = config.getTokenByTokenId(tokenId, configTokens);\n    updatedBalance['token'] = token;\n\n    const totalAmount = balance['totalAmount'];\n\n    // TODO: what precision do we use?\n    const totalAmountInString = config.fromWEI(\n      token.symbol,\n      totalAmount,\n      configTokens\n    );\n    updatedBalance['totalAmountInString'] = totalAmountInString;\n\n    const frozenAmount = balance['frozenAmount'];\n    const frozenAmountInString = config.fromWEI(\n      token.symbol,\n      frozenAmount,\n      configTokens\n    );\n    updatedBalance['frozenAmountInString'] = frozenAmountInString;\n\n    if (totalAmount !== '0') {\n      let percentage =\n        1 -\n        BigNumber(frozenAmount)\n          .dividedBy(BigNumber(totalAmount))\n          .toNumber();\n      percentage = Math.floor(percentage * 100);\n\n      const availableInBigNumber = BigNumber(totalAmount).minus(frozenAmount);\n      const available = config.fromWEI(\n        token.symbol,\n        availableInBigNumber,\n        configTokens\n      );\n      updatedBalance['percentage'] = percentage;\n      updatedBalance['available'] = available;\n    } else {\n      updatedBalance['percentage'] = 0;\n      updatedBalance['available'] = Number(0).toFixed(token.precision);\n    }\n\n    updatedBalances.push(updatedBalance);\n  }\n  return updatedBalances;\n}\n","import { getBalances, map } from './get';\n\nexport { getBalances, map };\n","// src/icons/index.js\n\n/**\n * List all antd icons you want to use in your source code\n */\n\n// more are here: https://github.com/SolidZORO/leaa/blob/16eac6eab93ce6f0ff83c8fb4229f884a982a9a6/packages/leaa-www/tools/next/next-antd-icon.js\n\nexport { default as EyeOutline } from '@ant-design/icons/lib/outline/EyeOutline';\nexport { default as EyeInvisibleOutline } from '@ant-design/icons/lib/outline/EyeInvisibleOutline';\nexport { default as LeftOutline } from '@ant-design/icons/lib/outline/LeftOutline';\nexport { default as RightOutline } from '@ant-design/icons/lib/outline/RightOutline';\n","import Wallet from './wallet';\n\nexport default Wallet;\n","function getAccounts() {\n  const accountStr = localStorage.getItem('accounts');\n  return accountStr ? new Map(JSON.parse(accountStr)) : new Map();\n}\n\nexport function getAccountFromLocal(address) {\n  const now = Date.now();\n  const accounts = getAccounts();\n  const account = accounts.get(address.toLowerCase());\n  if (!account || !account.time || now >= account.time + 30 * 60 * 1000) {\n    removeAccountFromLocal(address);\n    return null;\n  } else {\n    delete account.time;\n    return account;\n  }\n}\n\nexport function saveAccountToLocal(account) {\n  try {\n    const accounts = getAccounts();\n    accounts.set(account.address.toLowerCase(), {\n      ...account,\n      time: Date.now()\n    });\n    localStorage.setItem('accounts', JSON.stringify([...accounts]));\n  } catch (e) {}\n}\n\nexport function removeAccountFromLocal(address) {\n  const accounts = getAccounts();\n  accounts.delete(address);\n  localStorage.setItem('accounts', JSON.stringify([...accounts]));\n}\n\nfunction getAllCanceledOrders() {\n  const orderStr = localStorage.getItem('canceledOrders');\n  return orderStr ? new Map(JSON.parse(orderStr)) : new Map();\n}\n\nexport function getCanceledOrdersFromLocal(address) {\n  const allOrders = getAllCanceledOrders();\n  const cancelOrders = allOrders.get(address.toLowerCase());\n  return cancelOrders ? cancelOrders : [];\n}\n\nexport function saveCanceledOrderToLocal(address, order) {\n  const allOrders = getAllCanceledOrders();\n  const canceledOrdersOfOwner = getCanceledOrdersFromLocal(address);\n  allOrders.set(address.toLowerCase(), [...canceledOrdersOfOwner, order]);\n  localStorage.setItem('canceledOrders', JSON.stringify([...allOrders]));\n}\n\nexport function removeCanceledOrdersByAddressFromLocal(address) {\n  const allOrders = getAllCanceledOrders();\n  allOrders.delete(address.toLowerCase());\n  localStorage.setItem('canceledOrders', JSON.stringify([...allOrders]));\n}\n\nexport function saveLoginRecord() {\n  localStorage.setItem('hasRecord', 'true');\n}\n\nexport function getLoginRecord() {\n  return localStorage.getItem('hasRecord');\n}\n\nexport function removeLoginRecord() {\n  localStorage.removeItem('hasRecord');\n}\n\nfunction getUpdateRecords() {\n  const recordStr = localStorage.getItem('updateRecords');\n  return recordStr ? new Map(JSON.parse(recordStr)) : new Map();\n}\n\nexport function getUpdateRecordByAddress(address) {\n  const records = getUpdateRecords();\n  return records.get(address.toLowerCase());\n}\n\nexport function saveUpdateRecord(record) {\n  const records = getUpdateRecords();\n  records.set(record.address.toLowerCase(), record);\n  localStorage.setItem('updateRecords', JSON.stringify([...records]));\n}\n\nexport function removeUpdateRecord(address) {\n  const records = getUpdateRecords();\n  records.delete(address.toLowerCase());\n  localStorage.setItem('updateRecords', JSON.stringify([...records]));\n}\n\nexport function saveLanguage(value) {\n  if (value === 'en' || value === 'zh') {\n    localStorage.setItem('language', value);\n  }\n}\n\nexport function getLanguage() {\n  let language = localStorage.getItem('language') || getLanguageFromBrowser();\n  if (language === 'zh') {\n    document.title = '路印去中心化交易所';\n    language = 'zh';\n  } else {\n    language = 'en';\n    document.title = 'Loopring Exchange (DEX)';\n  }\n  return language;\n}\n\nfunction getLanguageFromBrowser() {\n  var language =\n    (window.navigator.languages && window.navigator.languages[0]) || // Chrome / Firefox\n    window.navigator.language || // All browsers\n    window.navigator.userLanguage; // IE <= 10\n  let shortLang = language;\n  if (shortLang.indexOf('-') !== -1) {\n    shortLang = shortLang.split('-')[0];\n  } else if (shortLang.indexOf('_') !== -1) {\n    shortLang = shortLang.split('_')[0];\n  }\n  // console.log('get language from browser', shortLang);\n  return shortLang;\n}\n\nexport function getEtherscanLink(chainId) {\n  const lan = getLanguage();\n\n  switch (chainId) {\n    case 1:\n      if (lan === 'cn') {\n        return 'https://cn.etherscan.com';\n      } else {\n        return 'https://etherscan.io';\n      }\n    case 5:\n      return 'https://goerli.etherscan.io';\n    default:\n      return '';\n  }\n}\n","import { dropTrailingZeroes } from 'pages/trade/components/defaults/util';\nimport config from '../config';\nimport request from '../common/request';\n\nexport function getRefreshDurationInMillionSeconds() {\n  // FIXME: this doesn't work\n  if (\n    window.location.hostname === 'localhost' ||\n    window.location.hostname === '127.0.0.1'\n  ) {\n    return 30 * 1000;\n  } else {\n    return 30 * 1000;\n  }\n}\n\nexport function getApiDocsURL() {\n  return `${config.getServer()}/docs/`;\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport async function getApiKey(data, signed) {\n  const signature = signed.Rx + ',' + signed.Ry + ',' + signed.s;\n  const headers = {\n    'X-API-SIG': signature\n  };\n  return await request({\n    method: 'POST',\n    url: '/api/v1/getApiKey',\n    headers: headers,\n    data\n  });\n}\n\nexport async function applyApiKey(data, signed) {\n  const signature = signed.Rx + ',' + signed.Ry + ',' + signed.s;\n  const headers = {\n    'X-API-SIG': signature\n  };\n  return await request({\n    method: 'POST',\n    url: '/api/v1/applyApiKey',\n    headers: headers,\n    data\n  });\n}\n\nexport async function getDexNonce(data) {\n  return await request({\n    method: 'POST',\n    url: '/api/v1/dexNonce',\n    data\n  });\n}\n\nexport async function submitOrderToLightcone(data, apiKey) {\n  const headers = {\n    'X-API-KEY': apiKey\n  };\n  return await request({\n    method: 'POST',\n    url: '/api/v1/order',\n    headers: headers,\n    data\n  });\n}\n\n// Return order id\nexport async function getOrderId(accountId, tokenSId, apiKey) {\n  const data = {\n    accountId: accountId,\n    tokenSId: tokenSId\n  };\n  const headers = {\n    'X-API-KEY': apiKey\n  };\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/orderId',\n    headers: headers,\n    data\n  });\n\n  return response['orderId'];\n}\n\nexport async function lightconeGetAccount(address) {\n  const data = {\n    address\n  };\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/account',\n    data\n  });\n\n  return response.account;\n}\n\nexport async function getTimestamp() {\n  return await request({\n    method: 'POST',\n    url: '/api/v1/timestamp'\n  });\n}\n\nexport async function getCandlestick(market, interval) {\n  const data = {\n    market,\n    interval\n  };\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/candlestick',\n    data\n  });\n\n  return response['candles'];\n}\n\nexport async function getTrade(market, limit) {\n  const data = {\n    market,\n    limit\n  };\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/trade',\n    data\n  });\n\n  return response['trades'];\n}\n\nexport async function getDepositHistory(\n  accountId,\n  limit,\n  offset,\n  apiKey,\n  tokens\n) {\n  const data = {\n    accountId,\n    types: ['deposit'],\n    limit,\n    offset\n  };\n  const headers = {\n    'X-API-KEY': apiKey\n  };\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/user/deposits',\n    headers: headers,\n    data\n  });\n\n  const totalNum = response['totalNum'];\n  const transactions = response['transactions'];\n  const updatedTransactions = mapTransactions(transactions, tokens);\n  return {\n    totalNum,\n    transactions: updatedTransactions,\n    limit,\n    offset\n  };\n}\n\nfunction mapAmountInUI(baseToken, transaction, tokens) {\n  let amountInUI = config.fromWEI(baseToken.symbol, transaction.amount, tokens);\n  if (parseFloat(amountInUI) === 0) {\n    let amountInDecimals = config.fromWEI(\n      baseToken.symbol,\n      transaction.amount,\n      tokens,\n      {\n        precision: baseToken.decimals\n      }\n    );\n    amountInDecimals = dropTrailingZeroes(amountInDecimals);\n    if (parseFloat(amountInDecimals) !== 0) {\n      return amountInDecimals;\n    }\n  }\n\n  return amountInUI;\n}\n\nfunction mapTransactions(transactions, tokens) {\n  let updatedTransactions = [];\n  for (let i = 0; i < transactions.length; i = i + 1) {\n    let transaction = transactions[i];\n\n    const baseToken = config.getTokenBySymbol(transaction.symbol, tokens);\n    let amountInUI = mapAmountInUI(baseToken, transaction, tokens);\n\n    // Why this is feeAmount?\n    const feeInUI = config.fromWEI('ETH', transaction.feeAmount, tokens);\n\n    const txHashInUI =\n      transaction.txHash.substring(0, 7) + '...' + transaction.txHash.slice(-7);\n    const txHashLink = `https://goerli.etherscan.io/tx/${transaction.txHash}`;\n\n    const updatedTransaction = {\n      ...transaction,\n      tokenName: baseToken.name,\n      amountInUI,\n      feeInUI,\n      txHashInUI,\n      txHashLink\n    };\n    updatedTransactions.push(updatedTransaction);\n  }\n  return updatedTransactions;\n}\n\nexport async function getWithdrawalHistory(\n  accountId,\n  limit,\n  offset,\n  apiKey,\n  tokens\n) {\n  const data = {\n    accountId,\n    types: ['onchainWithdrawal'],\n    limit,\n    offset\n  };\n  const headers = {\n    'X-API-KEY': apiKey\n  };\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/user/withdrawals',\n    headers: headers,\n    data\n  });\n\n  const totalNum = response['totalNum'];\n  const transactions = response['transactions'];\n  const updatedTransactions = mapTransactions(transactions, tokens);\n  return {\n    totalNum,\n    transactions: updatedTransactions,\n    limit,\n    offset\n  };\n}\n\nexport async function getTicker(markets, tokens) {\n  const data = {\n    markets\n  };\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/ticker',\n    data\n  });\n\n  return mapTicker(response['tickers'], tokens);\n}\n\nfunction mapTicker(tickers, configTokens) {\n  let updatedTickers = [];\n  for (let i = 0; i < tickers.length; i = i + 1) {\n    const ticker = tickers[i];\n\n    const tokens = ticker.market.split('-');\n    const baseToken = tokens[0];\n    const quoteToken = tokens[1];\n    const open = parseFloat(ticker['open']);\n    const close = parseFloat(ticker['close']);\n    let percentChange24h = (((close - open) / open) * 100).toFixed(2);\n    percentChange24h = percentChange24h !== 'NaN' ? percentChange24h : '0.00';\n    if (close - open > 0) {\n      percentChange24h = `+ ${percentChange24h}`;\n    }\n\n    const updatedTicker = {\n      ...ticker,\n      percentChange24h,\n      size: config.fromWEI(baseToken, ticker.size, configTokens),\n      volume: config.fromWEI(quoteToken, ticker.volume, configTokens)\n    };\n    updatedTickers.push(updatedTicker);\n  }\n  return updatedTickers;\n}\n\nexport async function getExchangeInfo() {\n  const data = {};\n\n  const response = await request({\n    method: 'GET',\n    url: '/api/v2/exchange/info',\n    data\n  });\n\n  return response['info'];\n}\n","import { getOrders } from 'lightcone/api/v1/orders';\n\n// Open orders\nexport const UPDATE_MY_OPEN_ORDERS = 'UPDATE_MY_OPEN_ORDERS';\nexport const FETCH_MY_OPEN_ORDERS = 'FETCH_MY_OPEN_ORDERS';\nexport const UPDATE_OPEN_ORDERS_OFFSET = 'UPDATE_OPEN_ORDERS_OFFSET';\nexport const EMPTY_MY_OPEN_ORDERS = 'EMPTY_MY_OPEN_ORDERS';\n\n// History orders\nexport const UPDATE_MY_HISTORY_ORDERS = 'UPDATE_MY_HISTORY_ORDERS';\nexport const FETCH_MY_HISTORY_ORDERS = 'FETCH_MY_HISTORY_ORDERS';\nexport const UPDATE_HISTORY_ORDERS_OFFSET = 'UPDATE_HISTORY_ORDERS_OFFSET';\nexport const EMPTY_MY_HISTORY_ORDERS = 'EMPTY_MY_HISTORY_ORDERS';\n\n//Socket\nexport const UPDATE_SOCKET_ORDER = 'UPDATE_SOCKET_ORDER';\n\nexport function updateSocketOrder(order) {\n  return {\n    type: UPDATE_SOCKET_ORDER,\n    payload: {\n      order\n    }\n  };\n}\n\nexport function updateMyOpenOrders(response) {\n  return {\n    type: UPDATE_MY_OPEN_ORDERS,\n    payload: {\n      response\n    }\n  };\n}\n\nexport function updateOpenOrderOffset(offset) {\n  return {\n    type: UPDATE_OPEN_ORDERS_OFFSET,\n    payload: {\n      offset\n    }\n  };\n}\n\nexport function fetchMyOpenOrders(\n  accountId,\n  limit,\n  offset,\n  market,\n  apiKey,\n  tokens\n) {\n  return dispatch => {\n    (async () => {\n      try {\n        const response = await getOrders({\n          accountId,\n          limit,\n          offset,\n          market,\n          statuses: ['waiting', 'processing'],\n          apiKey,\n          tokens\n        });\n        dispatch(updateMyOpenOrders(response));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function emptyMyOpenOrders() {\n  return {\n    type: EMPTY_MY_OPEN_ORDERS,\n    payload: {}\n  };\n}\n\nexport function updateMyHistoryOrders(response) {\n  return {\n    type: UPDATE_MY_HISTORY_ORDERS,\n    payload: {\n      response\n    }\n  };\n}\n\nexport function updateHistoryOrderOffset(offset) {\n  return {\n    type: UPDATE_HISTORY_ORDERS_OFFSET,\n    payload: {\n      offset\n    }\n  };\n}\n\nexport function fetchMyHistoryOrders(\n  accountId,\n  limit,\n  offset,\n  market,\n  apiKey,\n  tokens\n) {\n  return dispatch => {\n    (async () => {\n      try {\n        const response = await getOrders({\n          accountId,\n          limit,\n          offset,\n          market,\n          statuses: ['processed', 'failed', 'cancelled', 'expired'],\n          apiKey,\n          tokens\n        });\n        dispatch(updateMyHistoryOrders(response));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function emptyMyHistoryOrders() {\n  return {\n    type: EMPTY_MY_HISTORY_ORDERS,\n    payload: {}\n  };\n}\n","import { getLanguage } from 'lightcone/api/localStorgeAPI';\nimport { initReactI18next } from 'react-i18next'; // have a own xhr fallback\nimport Backend from 'i18next-chained-backend';\nimport LocalStorageBackend from 'i18next-localstorage-backend';\nimport XHR from 'i18next-xhr-backend';\nimport i18n from 'i18next';\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: getLanguage(),\n    backend: {\n      backends: [\n        LocalStorageBackend, // primary\n        XHR // fallback\n      ],\n      backendOptions: [\n        {\n          prefix: 'i18n_',\n          expirationTime: 365 * 24 * 60 * 60 * 1000, // 1 year\n          versions: {\n            en: process.env.COMMITHASH,\n            zh: process.env.COMMITHASH\n          },\n          store: window.localStorage\n        },\n        {\n          loadPath: '/assets/i18n/{{ns}}/{{lng}}.json'\n        }\n      ]\n    },\n    fallbackLng: 'en',\n    debug: false,\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: ','\n    },\n    react: {\n      wait: true\n    }\n  });\n\nexport default i18n;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { notification } from 'antd';\nimport { tracker } from 'components/DefaultTracker';\nimport React from 'react';\n\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons/faCheckCircle';\nimport { faGhost } from '@fortawesome/free-solid-svg-icons/faGhost';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons/faInfoCircle';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\nimport colors from 'colors';\n\nconst topPosition = 56;\nconst backgroundColor = '#3d3e59';\n\nconst closeIcon = (\n  <FontAwesomeIcon style={{ color: colors.textDim }} icon={faTimes} />\n);\nfunction trackEvent(message) {\n  try {\n    tracker.trackEvent({\n      type: 'USER_NOTIFICATION',\n      data: {\n        message: message['props']['s']\n      }\n    });\n  } catch (error) {}\n}\n\nexport function notifySuccess(message, duration) {\n  trackEvent(message);\n  notification.success({\n    message: message,\n    closeIcon: closeIcon,\n    icon: <FontAwesomeIcon icon={faCheckCircle} />,\n    duration: duration || 3,\n    top: topPosition,\n    style: {\n      color: colors.green,\n      background: backgroundColor\n    }\n  });\n}\n\nexport function notifyWarning(message) {\n  trackEvent(message);\n  notification.warning({\n    message: message,\n    closeIcon: closeIcon,\n    icon: <FontAwesomeIcon icon={faInfoCircle} />,\n    duration: 5,\n    top: topPosition,\n    style: {\n      color: colors.orange,\n      background: backgroundColor\n    }\n  });\n}\n\nexport function notifyError(message) {\n  trackEvent(message);\n  notification.error({\n    message: message,\n    closeIcon: closeIcon,\n    icon: <FontAwesomeIcon icon={faGhost} />,\n    duration: 5,\n    top: topPosition,\n    style: {\n      color: colors.red,\n      background: backgroundColor\n    }\n  });\n}\n","import { Button, Spin } from 'antd';\nimport { MyModal } from './styles/Styles';\nimport { connect } from 'react-redux';\nimport { logoutAll } from 'redux/actions/DexAccount';\nimport { showLogoutModal } from 'redux/actions/ModalManager';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport ModalIndicator from 'modals/components/ModalIndicator';\nimport React from 'react';\nimport Wallet from 'lightcone/wallet/wallet';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport {\n  AddressDiv,\n  Instruction,\n  Section,\n  TextPopupTitle\n} from 'modals/styles/Styles';\nimport Group from 'modals/components/Group';\n\nconst MyButton = styled(Button)`\n  font-size: 1rem !important;\n  font-weight: 600 !important;\n  height: 40px !important;\n  width: 180px;\n  border-style: none !important;\n  border-radius: 20px !important;\n  color: ${colors.textBright}!important;\n  text-transform: uppercase !important;\n  transition: 1s !important;\n`;\n\nconst ConfirmButton = styled(MyButton)`\n  margin-right: 20px;\n  background: ${colors.red}!important;\n`;\n\nconst CancelButton = styled(MyButton)`\n  margin-left: 20px;\n  background: ${colors.theme}!important;\n`;\n\nclass LogoutModal extends React.Component {\n  state = {\n    loading: false\n  };\n  onClick = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      window.wallet = new Wallet(window.wallet.web3, window.wallet.address);\n      this.props.logoutAll();\n      this.onClose();\n      this.setState({ loading: false });\n    }, 100);\n  };\n\n  onClose = () => {\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <MyModal\n        width={AppLayout.modalWidth}\n        title={\n          <TextPopupTitle>\n            <I s=\"Logout\" />\n          </TextPopupTitle>\n        }\n        footer={null}\n        closable={false}\n        maskClosable={false}\n        visible={this.props.isVislble}\n        onCancel={() => this.onClose()}\n      >\n        <Spin\n          spinning={this.state.loading}\n          indicator={<ModalIndicator title=\"Logging out...\" marginTop=\"80px\" />}\n        >\n          <Section>\n            <Instruction>\n              <I s=\"LogoutInstruct_1\" />\n            </Instruction>\n            <Instruction>\n              <I s=\"LogoutInstruct_2\" />\n            </Instruction>\n          </Section>\n          <Section>\n            <Group label={<I s=\"My Address\" />}>\n              <AddressDiv>{this.props.address}</AddressDiv>\n            </Group>\n          </Section>\n          <Section\n            style={{\n              textAlign: 'center'\n            }}\n          >\n            <ConfirmButton onClick={() => this.onClick()}>\n              <I s=\"Yes, log me out.\" />\n            </ConfirmButton>\n            <CancelButton onClick={() => this.onClose()}>\n              <I s=\"Cancel\" />\n            </CancelButton>\n          </Section>\n        </Spin>\n      </MyModal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { modalManager, dexAccount } = state;\n  const isVislble = modalManager.isLogoutModalVisible;\n  const address = dexAccount.account.address;\n  return { isVislble, address };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeModal: () => dispatch(showLogoutModal(false)),\n    logoutAll: () => dispatch(logoutAll())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutModal);\n","import { BigNumber } from 'bignumber.js';\nimport BN from 'bn.js';\nimport abi from 'ethereumjs-abi';\n\nconst assert = require('assert');\n\nclass Bitstream {\n  constructor(initialData = '') {\n    this.data = initialData;\n    if (this.data.startsWith('0x')) {\n      this.data = this.data.slice(2);\n    }\n  }\n\n  getData() {\n    if (this.data.length === 0) {\n      return '0x';\n    } else {\n      return '0x' + this.data;\n    }\n  }\n\n  getBytes32Array() {\n    if (this.data.length === 0) {\n      return [];\n    } else {\n      assert.equal(\n        this.length() % 32,\n        0,\n        'Bitstream not compatible with bytes32[]'\n      );\n      return this.data.match(/.{1,64}/g).map(element => '0x' + element);\n    }\n  }\n\n  addBigNumber(x, numBytes = 32) {\n    const formattedData = this.padString(x.toString(16), numBytes * 2);\n    return this.insert(formattedData);\n  }\n\n  addBN(x, numBytes = 32) {\n    const formattedData = this.padString(x.toString(16), numBytes * 2);\n    return this.insert(formattedData);\n  }\n\n  addNumber(x, numBytes = 4) {\n    // Check if we need to encode this number as negative\n    if (x < 0) {\n      const encoded = abi.rawEncode(['int256'], [x.toString(10)]);\n      const hex = encoded.toString('hex').slice(-(numBytes * 2));\n      return this.addHex(hex);\n    } else {\n      return this.addBigNumber(new BigNumber(x), numBytes);\n    }\n  }\n\n  addAddress(x, numBytes = 20) {\n    const formattedData = this.padString(x.slice(2), numBytes * 2);\n    return this.insert(formattedData);\n  }\n\n  addHex(x) {\n    if (x.startsWith('0x')) {\n      return this.insert(x.slice(2));\n    } else {\n      return this.insert(x);\n    }\n  }\n\n  extractUint8(offset) {\n    return parseInt(this.extractData(offset, 1), 16);\n  }\n\n  extractUint16(offset) {\n    return parseInt(this.extractData(offset, 2), 16);\n  }\n\n  extractUint24(offset) {\n    return parseInt(this.extractData(offset, 3), 16);\n  }\n\n  extractUint32(offset) {\n    return parseInt(this.extractData(offset, 4), 16);\n  }\n\n  extractUint40(offset) {\n    return parseInt(this.extractData(offset, 5), 16);\n  }\n\n  extractUint48(offset) {\n    return parseInt(this.extractData(offset, 6), 16);\n  }\n\n  extractUint56(offset) {\n    return new BN(this.extractData(offset, 7), 16);\n  }\n\n  extractUint64(offset) {\n    return new BN(this.extractData(offset, 8), 16);\n  }\n\n  extractUint(offset) {\n    return new BN(this.extractData(offset, 32), 16);\n  }\n\n  extractAddress(offset) {\n    return '0x' + this.extractData(offset, 20);\n  }\n\n  extractBytes1(offset) {\n    return this.extractBytesX(offset, 1);\n  }\n\n  extractBytes32(offset) {\n    return this.extractBytesX(offset, 32);\n  }\n\n  extractBytesX(offset, length) {\n    return new Buffer(this.extractData(offset, length), 'hex');\n  }\n\n  extractChar(offset) {\n    return this.extractData(offset, 1);\n  }\n\n  extractData(offset, length) {\n    const start = offset * 2;\n    const end = start + length * 2;\n    if (this.data.length < end) {\n      throw new Error(\n        'substring index out of range:[' + start + ', ' + end + ']'\n      );\n    }\n    return this.data.slice(start, end);\n  }\n\n  // Returns the number of bytes of data\n  length() {\n    return this.data.length / 2;\n  }\n\n  insert(x) {\n    const offset = this.length();\n    this.data += x;\n    return offset;\n  }\n}\n\nfunction hashCode(s) {\n  for (var i = 0, h = 0; i < s.length; i++)\n    h = (Math.imul(31, h) + s.charCodeAt(i)) | 0;\n  return Math.abs(h);\n}\n\nfunction padString(x, targetLength) {\n  if (x.length > targetLength) {\n    throw Error(\n      '0x' +\n        x +\n        ' is too big to fit in the requested length (' +\n        targetLength +\n        ')'\n    );\n  }\n  while (x.length < targetLength) {\n    x = '0' + x;\n  }\n  return x;\n}\n\nexport { Bitstream, hashCode, padString };\n","import { ActionButton } from 'styles/Styles';\nimport {\n  AddressDiv,\n  Instruction,\n  Section,\n  TextPopupTitle\n} from 'modals/styles/Styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Menu, Spin } from 'antd';\nimport { MyModal } from './styles/Styles';\nimport { connect } from 'react-redux';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons/faCheck';\nimport { faClock } from '@fortawesome/free-solid-svg-icons/faClock';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\nimport { faHandPointRight } from '@fortawesome/free-solid-svg-icons/faHandPointRight';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons/faSpinner';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\nimport { fetchAllowance, fetchWalletBalance } from 'modals/components/utils';\nimport { formatter } from 'lightcone/common';\nimport { notifyError, notifySuccess } from 'redux/actions/Notification';\nimport { showDepositModal } from 'redux/actions/ModalManager';\nimport AppLayout from 'AppLayout';\nimport AssetDropdown from 'modals/components/AssetDropdown';\nimport Group from 'modals/components/Group';\nimport I from 'components/I';\nimport LabelValue from 'modals/components/LabelValue';\nimport ModalIndicator from 'modals/components/ModalIndicator';\nimport NumericInput from 'components/NumericInput';\nimport React from 'react';\nimport WhyIcon from 'components/WhyIcon';\nimport colors from 'colors';\nimport config from 'lightcone/config';\n\nclass DepositModal extends React.Component {\n  state = {\n    errorMessage1: '',\n    errorToken: '',\n    errorMessage2: '',\n    loading: false,\n    amount: null,\n    validateAmount: true,\n    availableAmount: 0,\n    ethBalance: 0,\n    allowance: 0,\n    approveTxCount: 0,\n    ethEnough: true,\n    processingNum: 1\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (this.props.isVisible !== prevProps.isVisible ||\n        this.props.dexAccount.account.address !==\n          prevProps.dexAccount.account.address) &&\n      this.props.isVisible && window.wallet\n    ) {\n      const selectedTokenSymbol = this.props.modalManager.depositToken;\n      this.loadData(selectedTokenSymbol, true);\n    }\n\n    if (\n      this.props.isVisible === false &&\n      this.props.isVisible !== prevProps.isVisible\n    ) {\n      this.setState({\n        loading: false,\n        amount: null,\n        validateAmount: true,\n        availableAmount: 0,\n        ethBalance: 0,\n        allowance: 0,\n        approveTxCount: 0,\n        ethEnough: true,\n        processingNum: 1\n      });\n    }\n  }\n\n  handleCurrencyTypeSelect = tokenSymbol => {\n    this.props.showDepositModal(tokenSymbol);\n    this.loadData(tokenSymbol);\n  };\n\n  loadData(tokenSymbol, loadETH = false) {\n    (async () => {\n      try {\n        const tokenBalance = await fetchWalletBalance(\n          this.props.dexAccount.account.address,\n          tokenSymbol,\n          this.props.exchange.tokens\n        );\n\n        const ethBalance =\n          tokenSymbol.toUpperCase() === 'ETH'\n            ? tokenBalance\n            : loadETH\n            ? await fetchWalletBalance(\n                this.props.dexAccount.account.address,\n                'ETH',\n                this.props.exchange.tokens\n              )\n            : this.state.ethBalance;\n\n        const allowance = await fetchAllowance(\n          this.props.dexAccount.account.address,\n          tokenSymbol,\n          this.props.exchange.tokens\n        );\n\n        let txCount = 0;\n        if (\n          tokenSymbol.toUpperCase() !== 'ETH' &&\n          this.state.amount &&\n          Number(this.state.amount) > allowance\n        ) {\n          txCount = allowance === 0 ? 1 : 2;\n        }\n\n        const cost = this.getFeeCost(txCount);\n        let ethEnough = true;\n        if (tokenSymbol.toUpperCase() !== 'ETH') {\n          ethEnough = cost <= ethBalance;\n        } else {\n          ethEnough =\n            cost +\n              (this.state.amount && Number(this.state.amount) >= 0\n                ? Number(this.state.amount)\n                : 0) <=\n            ethBalance;\n        }\n\n        let validateAmount = !this.state.amount;\n        if (!validateAmount) {\n          validateAmount =\n            tokenSymbol.toUpperCase() !== 'ETH'\n              ? this.state.amount <= tokenBalance\n              : ethEnough;\n        }\n\n        this.setState({\n          availableAmount: tokenBalance,\n          ethBalance,\n          allowance,\n          ethEnough,\n          approveTxCount: txCount,\n          validateAmount\n        });\n      } catch (error) {}\n    })();\n  }\n\n  getFeeCost = approveTxCount => {\n    const gasPrice = formatter.fromGWEI(this.props.gasPrice.gasPrice);\n    const approveGas = approveTxCount * config.getGasLimitByType('approve').gas;\n    const depositGas = config.getGasLimitByType('depositTo').gas;\n    const gasCost = gasPrice.times(approveGas + depositGas);\n    const fee = config.getFeeByType('deposit', this.props.exchange.onchainFees)\n      .fee;\n\n    return Number(\n      config.fromWEI('ETH', gasCost.plus(fee), this.props.exchange.tokens, {\n        ceil: true\n      })\n    );\n  };\n\n  onAmountValueClick = () => {\n    this.setState({\n      validateAmount: true\n    });\n  };\n\n  onAmountValueChange = value => {\n    const { allowance } = this.state;\n    const selectedTokenSymbol = this.props.modalManager.depositToken;\n    let txCount = 0;\n    if (\n      selectedTokenSymbol.toUpperCase() !== 'ETH' &&\n      Number(value) > allowance\n    ) {\n      txCount = allowance === 0 ? 1 : 2;\n    }\n\n    const cost = this.getFeeCost(txCount);\n    let ethEnough = true;\n    if (selectedTokenSymbol.toUpperCase() !== 'ETH') {\n      ethEnough = cost <= this.state.ethBalance;\n    } else {\n      ethEnough =\n        cost + (value && Number(value) >= 0 ? Number(value) : 0) <=\n        this.state.ethBalance;\n    }\n\n    let validateAmount = !value;\n    if (!validateAmount) {\n      validateAmount =\n        selectedTokenSymbol.toUpperCase() !== 'ETH'\n          ? Number(value) <= this.state.availableAmount\n          : ethEnough;\n    }\n\n    // Check amount decimal points\n    let errorMessage1 = '';\n    let errorToken = '';\n    let errorMessage2 = '';\n\n    const { tokens } = this.props.exchange;\n    const token = config.getTokenBySymbol(selectedTokenSymbol, tokens);\n\n    if (token.symbol && validateAmount && value.split('.').length === 2) {\n      var inputPrecision = value.split('.')[1].length;\n      if (\n        inputPrecision > token.decimals ||\n        (parseFloat(value) === 0 && inputPrecision === token.decimals)\n      ) {\n        errorMessage1 = 'Maximum_amount_input_decimal_part_1';\n        errorToken = `${token.decimals}`;\n        errorMessage2 = 'Maximum_input_decimal_part_2';\n        validateAmount = false;\n      }\n    }\n\n    this.setState({\n      amount: value,\n      ethEnough,\n      validateAmount,\n      approveTxCount: txCount,\n      errorMessage1,\n      errorToken,\n      errorMessage2\n    });\n  };\n\n  validateAmount = () => {\n    const { amount, availableAmount } = this.state;\n    if (\n      amount &&\n      parseFloat(amount) > 0 &&\n      parseFloat(amount) <= availableAmount\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  submitDeposit = () => {\n    this.setState({\n      loading: true\n    });\n\n    const { approveTxCount, amount } = this.state;\n\n    // Deposit\n    let symbol = this.props.modalManager.depositToken;\n\n    (async () => {\n      try {\n        const { gasPrice, exchange } = this.props;\n        const { chainId, tokens, exchangeAddress, onchainFees } = exchange;\n        // Gas price and nonce directly\n        let nonce = this.props.nonce.nonce;\n\n        if (approveTxCount === 2) {\n          await window.wallet.approveZero(\n            config.getTokenBySymbol(symbol, tokens).address,\n            exchangeAddress,\n            chainId,\n            nonce,\n            gasPrice.gasPrice,\n            true\n          );\n          this.setState({\n            processingNum: this.state.processingNum + 1\n          });\n          // await sendApprove(signedEthereumTx);\n          nonce += 1;\n        }\n\n        // Approve\n        if (approveTxCount !== 0) {\n          await window.wallet.approveMax(\n            config.getTokenBySymbol(symbol, tokens).address,\n            exchangeAddress,\n            chainId,\n            nonce,\n            gasPrice.gasPrice,\n            true\n          );\n          // await sendApprove(signedEthereumTx);\n          nonce += 1;\n          this.setState({\n            processingNum: this.state.processingNum + 1\n          });\n        }\n\n        await window.wallet.depositTo(\n          {\n            exchangeAddress,\n            chainId,\n            token: config.getTokenBySymbol(symbol, tokens),\n            fee: config.getFeeByType('deposit', onchainFees).fee,\n            amount,\n            nonce,\n            gasPrice: gasPrice.gasPrice\n          },\n          true\n        );\n\n        this.setState({\n          processingNum: this.state.processingNum + 1\n        });\n\n        notifySuccess(<I s=\"DepositInstructionNotification\" />, 15);\n      } catch (err) {\n        console.log(err);\n        notifyError(<I s=\"DepositInstructionNotificationFailed\" />);\n      } finally {\n        this.props.closeModal();\n        this.setState({\n          loading: false,\n          amount: null,\n          processingNum: 1\n        });\n      }\n    })();\n  };\n\n  onClose = () => {\n    this.props.closeModal();\n  };\n\n  onClick = () => {\n    if (this.validateAmount() === false) {\n      this.setState({\n        validateAmount: false\n      });\n      return;\n    } else {\n      this.setState({\n        validateAmount: true\n      });\n    }\n\n    this.submitDeposit();\n  };\n\n  enterAmount = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.onClick();\n    }\n  };\n\n  depositAll = () => {\n    const selectedTokenSymbol = this.props.modalManager.depositToken;\n    let amount;\n    let txCount = 0;\n    if (selectedTokenSymbol.toUpperCase() === 'ETH') {\n      const fee = this.getFeeCost(0);\n      amount = Number(this.state.availableAmount) - fee;\n    } else {\n      amount = Number(this.state.availableAmount);\n      if (amount > this.state.allowance) {\n        txCount = this.state.allowance === 0 ? 1 : 2;\n      }\n    }\n\n    this.setState({\n      amount: Math.max(0, amount),\n      validateAmount: amount > 0,\n      ethEnough:\n        selectedTokenSymbol.toUpperCase() === 'ETH'\n          ? amount > 0\n          : this.state.ethEnough,\n      approveTxCount: txCount\n    });\n  };\n\n  render() {\n    let address = this.props.dexAccount.account.address;\n\n    const { availableAmount, approveTxCount, processingNum } = this.state;\n    const { tokens } = this.props.exchange;\n\n    const selectedTokenSymbol = this.props.modalManager.depositToken;\n    const { balances } = this.props.balances;\n    const selectedToken = config.getTokenBySymbol(selectedTokenSymbol, tokens);\n    const holdBalance = balances.find(\n      ba => ba.tokenId === selectedToken.tokenId\n    );\n    const holdAmount = holdBalance\n      ? config.fromWEI(\n          selectedToken.symbol,\n          formatter\n            .toBig(holdBalance.totalAmount)\n            .minus(holdBalance.frozenAmount),\n          tokens\n        )\n      : 0;\n\n    const options = tokens\n      .filter(token => {\n        return token.symbol !== 'WETH';\n      })\n      .map((token, i) => {\n        const option = {};\n        option.key = token.symbol;\n        option.text = token.symbol + ' - ' + token.name;\n\n        const menuItem = (\n          <Menu.Item\n            key={i}\n            style={{\n              borderBottomStyle: 'solid',\n              borderBottomColor: colors.foreground,\n              borderBottomWidth: '1px'\n            }}\n            onClick={() => {\n              this.handleCurrencyTypeSelect(token.symbol);\n            }}\n          >\n            <span\n              style={{\n                lineHeight: '30px'\n              }}\n            >\n              {token.symbol}\n            </span>\n          </Menu.Item>\n        );\n\n        return menuItem;\n      });\n    const tips = [];\n    tips.push(<I s=\"metaMaskPendingTxTip\" />);\n    if (approveTxCount === 0) {\n      // No need to show tips.\n    } else if (approveTxCount === 1) {\n      tips.unshift(\n        <div>\n          <FontAwesomeIcon\n            icon={processingNum === 2 ? faSpinner : faClock}\n            style={{ marginRight: '8px', color: colors.green }}\n          />\n          <I s=\"depositTipDeposit2\" />\n        </div>\n      );\n\n      tips.unshift(\n        <div>\n          <FontAwesomeIcon\n            icon={processingNum > 1 ? faCheck : faSpinner}\n            style={{ marginRight: '8px', color: colors.green }}\n          />\n          <I s=\"depositTipApprove1\" />\n        </div>\n      );\n    } else {\n      // Three transactions to be approved\n      // 3rd tx\n      tips.unshift(\n        <div>\n          <FontAwesomeIcon\n            icon={processingNum === 3 ? faHandPointRight : faClock}\n            style={{\n              marginRight: '8px',\n              color: processingNum === 3 ? colors.orange : colors.textWhite\n            }}\n          />\n          <I s=\"depositTipDeposit3\" />\n        </div>\n      );\n\n      // 2nd tx\n      tips.unshift(\n        <div>\n          <FontAwesomeIcon\n            icon={\n              processingNum > 2\n                ? faCheck\n                : processingNum === 2\n                ? faHandPointRight\n                : faClock\n            }\n            style={{\n              marginRight: '8px',\n              color:\n                processingNum > 2\n                  ? colors.green\n                  : processingNum === 2\n                  ? colors.orange\n                  : colors.textWhite\n            }}\n          />\n          <I s=\"depositTipApprove3_2\" />\n        </div>\n      );\n\n      // 1st tx\n      tips.unshift(\n        <div>\n          <FontAwesomeIcon\n            icon={processingNum === 1 ? faHandPointRight : faCheck}\n            style={{\n              marginRight: '8px',\n              color: processingNum === 1 ? colors.orange : colors.green\n            }}\n          />\n          <I s=\"depositTipApproveZero\" />\n        </div>\n      );\n    }\n\n    return (\n      <MyModal\n        width={AppLayout.modalWidth}\n        title={\n          <TextPopupTitle>\n            <I s=\"Make a Deposit\" />\n          </TextPopupTitle>\n        }\n        footer={null}\n        maskClosable={false}\n        closeIcon={<FontAwesomeIcon icon={faTimes} />}\n        visible={this.props.isVisible}\n        onCancel={() => this.onClose()}\n      >\n        <Spin\n          spinning={this.state.loading}\n          indicator={\n            <ModalIndicator\n              title=\"metamaskConfirm\"\n              tips={tips}\n              imageUrl=\"/assets/images/metamask_pending.png\"\n              marginTop=\"80px\"\n            />\n          }\n        >\n          <Section>\n            <Instruction>\n              <I s=\"DepositInstruction_1\" />\n            </Instruction>\n            <ul>\n              <li>\n                <I s=\"DepositInstruction_Timing\" />\n                <WhyIcon text=\"TimingWhy\" />\n              </li>\n              <li>\n                <I s=\"DepositInstruction_Fee\" />\n                <WhyIcon text=\"FeeWhy\" />\n              </li>\n            </ul>\n          </Section>\n\n          <Section>\n            <Group label={<I s=\"My Address\" />}>\n              <AddressDiv>{address}</AddressDiv>\n            </Group>\n            <Group label={<I s=\"Asset\" />}>\n              <AssetDropdown\n                options={options}\n                selected={selectedToken.symbol}\n              />\n            </Group>\n            <Group label={<I s=\"Amount\" />}>\n              <NumericInput\n                decimals={selectedToken.precision}\n                color={\n                  this.state.validateAmount\n                    ? colors.textWhite\n                    : colors.sellPrimary\n                }\n                borderColor={\n                  this.state.validateAmount ? colors.border : colors.sellPrimary\n                }\n                value={this.state.amount}\n                onChange={this.onAmountValueChange}\n                onClick={this.onAmountValueClick}\n                suffix={selectedTokenSymbol.toUpperCase()}\n                onKeyDown={this.enterAmount.bind(this)}\n              />\n              {!this.state.ethEnough && (\n                <div\n                  style={{\n                    fontSize: '0.85rem',\n                    color: colors.red,\n                    height: '24px',\n                    fontWeight: '600',\n                    paddingTop: '12px'\n                  }}\n                >\n                  <FontAwesomeIcon\n                    style={{ marginRight: '8px' }}\n                    size=\"1x\"\n                    icon={faExclamationTriangle}\n                  />\n                  <I s=\"Insufficient Ethereum Balance\" />\n                </div>\n              )}\n              {this.state.ethEnough &&\n                this.state.errorMessage1 === '' &&\n                !this.state.validateAmount && (\n                  <div\n                    style={{\n                      fontSize: '0.85rem',\n                      color: colors.red,\n                      height: '24px',\n                      fontWeight: '600',\n                      paddingTop: '12px'\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{ marginRight: '8px' }}\n                      size=\"1x\"\n                      icon={faExclamationTriangle}\n                    />\n                    <I s=\"Insufficient Token Balance\" />\n                  </div>\n                )}\n              {this.state.errorMessage1 !== '' && !this.state.validateAmount && (\n                <div\n                  style={{\n                    fontSize: '0.85rem',\n                    color: colors.red,\n                    height: '24px',\n                    fontWeight: '600',\n                    paddingTop: '12px'\n                  }}\n                >\n                  <FontAwesomeIcon\n                    style={{ marginRight: '8px' }}\n                    size=\"1x\"\n                    icon={faExclamationTriangle}\n                  />\n                  <I s={this.state.errorMessage1} />\n                  {this.state.errorToken}\n                  <I s={this.state.errorMessage2} />\n                </div>\n              )}\n            </Group>\n          </Section>\n\n          <Section>\n            <LabelValue\n              label={<I s=\"Balance on Exchange\" />}\n              value={holdAmount}\n              unit={selectedTokenSymbol.toUpperCase()}\n            />\n            <LabelValue\n              label={<I s=\"Balance on Ethereum\" />}\n              value={availableAmount}\n              unit={selectedTokenSymbol.toUpperCase()}\n              onClick={() => this.depositAll()}\n            />\n          </Section>\n\n          <Section>\n            <ActionButton\n              disabled={\n                this.state.amount <= 0 ||\n                !this.state.validateAmount ||\n                this.state.loading ||\n                !this.state.ethEnough\n              }\n              onClick={() => this.onClick()}\n            >\n              <I s=\"Deposit\" />\n            </ActionButton>\n          </Section>\n        </Spin>\n      </MyModal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    modalManager,\n    dexAccount,\n    balances,\n    nonce,\n    gasPrice,\n    exchange\n  } = state;\n  const isVisible = modalManager.isDepositModalVisible;\n  return {\n    isVisible,\n    modalManager,\n    dexAccount,\n    balances,\n    nonce,\n    gasPrice,\n    exchange\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeModal: () => dispatch(showDepositModal(false, '')),\n    showDepositModal: token => dispatch(showDepositModal(true, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DepositModal);\n","import {\n  CANCELED_ORDERS,\n  REMOVE_CANCELED_ORDERS\n} from 'redux/actions/CancelOrderManager';\n\nimport {\n  removeCanceledOrdersByAddressFromLocal,\n  saveCanceledOrderToLocal\n} from 'lightcone/api/localStorgeAPI';\n\nconst initialState = {\n  canceledOrders: []\n};\n\nexport const CancelOrderManagerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CANCELED_ORDERS:\n      saveCanceledOrderToLocal(state.account.address, action.payload.hash);\n      return {\n        ...state,\n        canceledOrders: [...state.canceledOrders, action.payload.hash]\n      };\n\n    case REMOVE_CANCELED_ORDERS:\n      removeCanceledOrdersByAddressFromLocal(state.account.address);\n      return {\n        ...state,\n        canceledOrders: []\n      };\n    default:\n      return state;\n  }\n};\n","export const CANCELED_ORDERS = 'CANCELED_ORDERS';\nexport const REMOVE_CANCELED_ORDERS = 'REMOVE_CANCELED_ORDERS';\n\nexport function canceledOrders(hash) {\n  return {\n    type: CANCELED_ORDERS,\n    payload: {\n      hash\n    }\n  };\n}\n\nexport function removeCanceledOrders() {\n  return {\n    type: REMOVE_CANCELED_ORDERS,\n    payload: {}\n  };\n}\n","import { UPDATE_CMC_LEGAL, UPDATE_CMC_PRICE } from 'redux/actions/CmcPrice';\n\nconst initialState = {\n  legal: 'USD',\n  legalPrefix: '$',\n  prices: []\n};\n\nexport const CmcPriceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_CMC_LEGAL:\n      const legal = action.payload.legal;\n      return {\n        ...state,\n        legal\n      };\n    case UPDATE_CMC_PRICE:\n      const prices = action.payload.prices;\n      return {\n        ...state,\n        prices\n      };\n    default:\n      return state;\n  }\n};\n","import { UPDATE_COLOR } from 'redux/actions/ColorManager';\nimport { getLanguage } from 'lightcone/api/localStorgeAPI';\nimport colors from 'colors';\n\n// Internatioanl buy/sell up/down colors\nconst zhColorTheme = {\n  up: colors.red,\n  down: colors.green,\n\n  buyPrimary: colors.green,\n  buySecondary: colors.green + 'BB',\n  buyBar: colors.green,\n\n  sellPrimary: colors.red,\n  sellSecondary: colors.red + 'BB',\n  sellBar: colors.red\n};\n\nconst colorTheme = {\n  up: colors.green,\n  down: colors.red,\n\n  buyPrimary: colors.green,\n  buySecondary: colors.green + 'BB',\n  buyBar: colors.green,\n\n  sellPrimary: colors.red,\n  sellSecondary: colors.red + 'BB',\n  sellBar: colors.red\n};\n\nconst initialState = getLanguage() === 'zh' ? zhColorTheme : colorTheme;\n\nexport const ColorManagerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_COLOR: {\n      const language = action.payload.language;\n      if (language === 'zh') {\n        return {\n          ...state,\n          ...zhColorTheme\n        };\n      } else {\n        return {\n          ...state,\n          ...colorTheme\n        };\n      }\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  CHANGE_ACCOUNT,\n  GET_DATA_FROM_LOCALSTORAGE,\n  LOGOUT,\n  NOT_REGISTERED,\n  REGISTERED,\n  RESET_PASSWORD,\n  UNDEFINED,\n  UPDATE_ACCOUNT,\n  UPDATE_REMEMBER_ME,\n  WALLET_UNCONNECTED,\n  getAllAccountStates\n} from 'redux/actions/DexAccount';\n\nimport {\n  getAccountFromLocal,\n  removeAccountFromLocal,\n  saveAccountToLocal,\n  saveLoginRecord\n} from 'lightcone/api/localStorgeAPI';\n\n/**\n * account :\n * {\n * address\n * apiKey,\n * accountId\n * publicX,\n * publicY,\n * keyPairCipherText\n * }\n * */\nconst initialState = {\n  account: { state: UNDEFINED },\n  rememberMe: true\n};\n\nexport const DexAccountReducer = (state = initialState, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case RESET_PASSWORD:\n      return {\n        ...state,\n        password: payload.password\n      };\n    case UPDATE_REMEMBER_ME:\n      return {\n        ...state,\n        rememberMe: payload.rememberMe\n      };\n    /**\n     * 是否需要保留state总account之前的元素需要再考虑\n     * **/\n    case UPDATE_ACCOUNT:\n      const latestAccount = {\n        ...state.account,\n        ...payload.account\n      };\n      if (state.rememberMe) {\n        saveAccountToLocal(latestAccount);\n      }\n      return {\n        ...state,\n        account: latestAccount\n      };\n\n    /**\n     * 当前state中account 还没有,因此payload 必须传address\n     * **/\n    case GET_DATA_FROM_LOCALSTORAGE:\n      let account = getAccountFromLocal(payload.address);\n      /**\n       * localStorage 有账户信息，说明rememberMe === true\n       */\n      const rememberMe = !!account;\n      account = account ? account : { address: payload.address };\n      /**\n       * 调试中发现，LOGGED_IN 状态不可以直接从localstorage获取，\n       * 因为用户在关闭之后，再次登录之间有可能使用别的设备做过Reset Password操作\n       *\n       * localstorage 设定了有效期,在有效期内用户不会做过Reset Password 操作\n       *\n       */\n      if (\n        getAllAccountStates().includes(account.state) === false ||\n        account.state === WALLET_UNCONNECTED\n      ) {\n        account.state = NOT_REGISTERED;\n      }\n      saveLoginRecord();\n\n      return {\n        ...state,\n        account,\n        rememberMe\n      };\n\n    case CHANGE_ACCOUNT:\n      return {\n        ...state,\n        account: { state: WALLET_UNCONNECTED }\n      };\n\n    case LOGOUT:\n      removeAccountFromLocal(state.account.address);\n      return {\n        account: {\n          ...state.account,\n          state: REGISTERED\n        },\n        rememberMe: false\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  INITIALIZE_INFO,\n  UPDATE_INFO,\n  UPDATE_MARKETS,\n  UPDATE_TOKENS\n} from '../actions/ExchangeInfo';\n\nconst initialState = {\n  isInitialized: false,\n  chainId: 0,\n  exchangeId: 0,\n  exchangeAddress: '',\n  onchainFees: [],\n  markets: [\n    {\n      market: 'LRC-ETH',\n      baseTokenId: 2,\n      quoteTokenId: 0,\n      precisionForPrice: 6,\n      orderbookAggLevels: 5,\n      enabled: true\n    }\n  ],\n  tokens: [\n    {\n      type: 'ETH',\n      tokenId: 0,\n      symbol: 'ETH',\n      name: 'Ethereum',\n      address: '0x0000000000000000000000000000000000000000',\n      unit: '',\n      decimals: 18,\n      precision: 6,\n      minOrderAmount: '50000000000000000',\n      maxOrderAmount: '50000000000000000000',\n      dustOrderAmount: '500000000000000'\n    },\n    {\n      type: 'ERC20',\n      tokenId: 2,\n      symbol: 'LRC',\n      name: 'Loopring',\n      address: '0x6621fc9ca6cb25dd1de695fb1221d12350d7d318',\n      unit: '',\n      decimals: 18,\n      precision: 6,\n      minOrderAmount: '500000000000000000000',\n      maxOrderAmount: '500000000000000000000000',\n      dustOrderAmount: '5000000000000000000'\n    }\n  ]\n};\n\nexport const ExchangeInfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZE_INFO:\n      return {\n        ...action.payload,\n        isInitialized: true\n      };\n    case UPDATE_INFO:\n      return {\n        ...state,\n        ...action.payload\n      };\n\n    case UPDATE_TOKENS:\n      return {\n        ...state,\n        ...action.payload\n      };\n\n    case UPDATE_MARKETS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { UPDATE_GAS_PRICE } from 'redux/actions/GasPrice';\n\nconst initialState = {\n  gasPrice: []\n};\n\nexport const GasPriceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_GAS_PRICE:\n      const gasPrice = action.payload.gasPrice;\n      return {\n        ...state,\n        gasPrice\n      };\n    default:\n      return state;\n  }\n};\n","import { UPDATE_COLUMNS } from 'redux/actions/LayoutManager';\n\nconst initialState = {\n  numColumns: 4\n};\n\nexport const LayoutManagerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_COLUMNS:\n      const numColumns = getNumColumns();\n      return {\n        ...state,\n        numColumns\n      };\n    default:\n      return state;\n  }\n};\n\n/*\n{\n  xs: '480px',\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n  xxl: '1600px',\n}\n*/\nfunction getNumColumns() {\n  const innerWidth = window.innerWidth;\n  if (innerWidth >= 1600) {\n    return 4;\n  } else if (innerWidth >= 992 && innerWidth < 1600) {\n    return 3;\n  } else if (innerWidth >= 576 && innerWidth < 992) {\n    return 2;\n  } else {\n    return 1;\n  }\n}\n","import {\n  CONNECT_TO_META_MASK,\n  DETECT_IF_META_MASK_INSTALLED,\n  INCREASE_REFERENCE_COUNT,\n  UPDATE_META_MASK\n} from 'redux/actions/MetaMask';\n\nconst initialState = {\n  startConnecting: false,\n  // Use count to pop up MetaMask connect.\n  referenceCount: 0,\n  isDesiredNetwork: true,\n  installed: false\n};\n\nexport const MetaMaskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONNECT_TO_META_MASK:\n      const startConnecting = action.payload.startConnecting;\n      let newReferenceCount = state.referenceCount;\n      if (startConnecting === true) {\n        newReferenceCount = state.referenceCount + 1;\n      }\n      return {\n        ...state,\n        startConnecting,\n        referenceCount: newReferenceCount\n      };\n    case UPDATE_META_MASK:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case DETECT_IF_META_MASK_INSTALLED:\n      const installed = action.payload.installed;\n      return {\n        ...state,\n        installed\n      };\n    case INCREASE_REFERENCE_COUNT:\n      return {\n        ...state,\n        referenceCount: state.referenceCount + 1\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  SHOW_DEPOSIT,\n  SHOW_ENTER_PASSWORD,\n  SHOW_EXPORT_ACCOUNT,\n  SHOW_LOGIN_MODAL,\n  SHOW_LOGOUT_MODAL,\n  SHOW_REGISTER_ACCOUNT,\n  SHOW_RESET_PASSWORD_MODAL,\n  SHOW_SIDEBAR,\n  SHOW_WITHDRAW\n} from 'redux/actions/ModalManager';\n\nconst initialState = {\n  isRegisterAccountModalVisible: false,\n  isResetPasswordModalVisible: false,\n  isLoginModalVisible: false,\n  isDepositModalVisible: false,\n  depositToken: 'ETH',\n  isWithdrawModalVisible: false,\n  withdrawalToken: 'ETH',\n  isLogoutModalVisible: false,\n  isExportAccountModalVisible: false,\n  isEnterPasswordModalVisible: false,\n  isSideBarVisible: false\n};\n\nexport const ModalManagerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_REGISTER_ACCOUNT:\n      return {\n        ...state,\n        isRegisterAccountModalVisible: action.payload.show\n      };\n    case SHOW_LOGIN_MODAL:\n      return {\n        ...state,\n        isLoginModalVisible: action.payload.show\n      };\n    case SHOW_RESET_PASSWORD_MODAL:\n      return {\n        ...state,\n        isResetPasswordModalVisible: action.payload.show\n      };\n    case SHOW_DEPOSIT:\n      if (action.payload.show) {\n        return {\n          ...state,\n          isDepositModalVisible: action.payload.show,\n          depositToken: action.payload.token || 'ETH'\n        };\n      } else {\n        return {\n          ...state,\n          isDepositModalVisible: action.payload.show,\n          depositToken: 'ETH'\n        };\n      }\n    case SHOW_WITHDRAW:\n      if (action.payload.show) {\n        return {\n          ...state,\n          isWithdrawModalVisible: action.payload.show,\n          withdrawalToken: action.payload.token || 'ETH'\n        };\n      } else {\n        return {\n          ...state,\n          isWithdrawModalVisible: action.payload.show,\n          withdrawalToken: 'ETH'\n        };\n      }\n    case SHOW_LOGOUT_MODAL:\n      return {\n        ...state,\n        isLogoutModalVisible: action.payload.show\n      };\n    case SHOW_EXPORT_ACCOUNT:\n      return {\n        ...state,\n        isExportAccountModalVisible: action.payload.show\n      };\n    case SHOW_ENTER_PASSWORD:\n      return {\n        ...state,\n        isEnterPasswordModalVisible: action.payload.show\n      };\n    case SHOW_SIDEBAR:\n      return {\n        ...state,\n        isSideBarVisible: action.payload.show\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  EMPTY_BALANCES,\n  EMPTY_DEPOSITS,\n  EMPTY_WITHDRAWALS,\n  UPDATE_BALANCE,\n  UPDATE_DEPOSITS,\n  UPDATE_ETH_BALANCE,\n  UPDATE_MY_BALANCES,\n  UPDATE_TOKEN_BALANCE,\n  UPDATE_WITHDRAWALS\n} from 'redux/actions/MyAccountPage';\nimport config from 'lightcone/config';\n\nconst initialState = {\n  balances: [],\n\n  depositOffset: 0,\n  depositLimit: 20,\n  depositTotalNum: 0,\n  deposits: [],\n\n  withdrawalOffset: 0,\n  withdrawalLimit: 20,\n  withdrawalTotalNum: 0,\n  withdrawals: []\n};\n\nexport const MyAccountPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_BALANCE: {\n      const balance = action.payload.balance;\n      const previousBalances = [...state.balances];\n      const index = previousBalances.findIndex(\n        ba => ba.tokenId === balance.tokenId\n      );\n      if (index !== -1) {\n        previousBalances.splice(index, 1);\n      }\n\n      previousBalances.push(balance);\n      return {\n        ...state,\n        balances: previousBalances\n      };\n    }\n\n    case UPDATE_MY_BALANCES: {\n      const previousBalances = [...state.balances];\n      const newBalances = action.payload.balances;\n      for (var i = 0; i < newBalances.length; i++) {\n        var found = false;\n        for (var j = 0; j < previousBalances.length; j++) {\n          if (previousBalances[j].tokenId === newBalances[i].tokenId) {\n            found = true;\n            previousBalances[j].frozenAmount = newBalances[i].frozenAmount;\n            previousBalances[j].totalAmount = newBalances[i].totalAmount;\n            previousBalances[j].totalAmountInString =\n              newBalances[i].totalAmountInString;\n            previousBalances[j].frozenAmountInString =\n              newBalances[i].frozenAmountInString;\n            previousBalances[j].percentage = newBalances[i].percentage;\n            previousBalances[j].available = newBalances[i].available;\n            break;\n          }\n        }\n        if (!found) {\n          previousBalances.push(newBalances[i]);\n        }\n      }\n      return {\n        ...state,\n        balances: previousBalances\n      };\n    }\n\n    case UPDATE_ETH_BALANCE: {\n      const ethWalletAmount = config.fromWEI(\n        'ETH',\n        action.payload.balance,\n        action.payload.tokens\n      );\n      return {\n        ...state,\n        ethWalletAmount\n      };\n    }\n\n    case UPDATE_TOKEN_BALANCE: {\n      const symbol = action.payload.symbol;\n      const lrcWalletAmount = config.fromWEI(\n        symbol,\n        action.payload.balance,\n        action.payload.tokens\n      );\n      return {\n        ...state,\n        lrcWalletAmount\n      };\n    }\n\n    case EMPTY_BALANCES: {\n      return {\n        ...state,\n        balances: []\n      };\n    }\n\n    case UPDATE_DEPOSITS: {\n      return {\n        ...state,\n        depositOffset: action.payload.offset,\n        depositLimit: action.payload.limit,\n        depositTotalNum: action.payload.totalNum,\n        deposits: action.payload.transactions\n      };\n    }\n\n    case EMPTY_DEPOSITS: {\n      return {\n        ...state,\n        depositOffset: 0,\n        depositLimit: 20,\n        depositTotalNum: 0,\n        deposits: []\n      };\n    }\n\n    case UPDATE_WITHDRAWALS: {\n      return {\n        ...state,\n        withdrawalOffset: action.payload.offset,\n        withdrawalLimit: action.payload.limit,\n        withdrawalTotalNum: action.payload.totalNum,\n        withdrawals: action.payload.transactions\n      };\n    }\n\n    case EMPTY_WITHDRAWALS: {\n      return {\n        ...state,\n        withdrawalOffset: 0,\n        withdrawalLimit: 20,\n        withdrawalTotalNum: 0,\n        withdrawals: []\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  EMPTY_ALL_HISTORY_ORDERS,\n  EMPTY_ALL_OPEN_ORDERS,\n  EMPTY_USER_TRANSACTIONS,\n  UPDATE_ALL_HISTORY_ORDERS,\n  UPDATE_ALL_OPEN_ORDERS,\n  UPDATE_SOCKET_ALL_ORDER,\n  UPDATE_USER_TRANSACTIONS\n} from 'redux/actions/MyOrderPage';\n\nconst initialState = {\n  // 'waiting', 'processing'\n  openOrders: [],\n  openOrdersTotalNum: null,\n  openOrdersLimit: 20,\n  openOrdersOffset: 0,\n\n  // 'processed', 'failed', 'cancelled', 'expired'\n  historyOrders: [],\n  historyOrdersTotalNum: null,\n  historyOrdersLimit: 20,\n  historyOrdersOffset: 0,\n\n  transactions: [],\n  transactionsTotalNum: null,\n  transactionsLimit: 20,\n  transactionsOffset: 0\n};\n\nexport const MyOrderPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ALL_OPEN_ORDERS: {\n      const payload = action.payload;\n      const orders = payload['orders'];\n      orders.sort((a, b) => b.createdAt - a.createdAt);\n      return {\n        ...state,\n        openOrders: orders,\n        openOrdersTotalNum: payload['totalNum'],\n        openOrdersLimit: payload['limit'],\n        openOrdersOffset: payload['offset']\n      };\n    }\n\n    case EMPTY_ALL_OPEN_ORDERS: {\n      return {\n        ...state,\n        openOrders: [],\n        openOrdersTotalNum: null,\n        openOrdersLimit: 20,\n        openOrdersOffset: 0\n      };\n    }\n    case UPDATE_ALL_HISTORY_ORDERS: {\n      const response = action.payload;\n      return {\n        ...state,\n        historyOrders: response['orders'],\n        historyOrdersTotalNum: response['totalNum'],\n        historyOrdersLimit: response['limit'],\n        historyOrdersOffset: response['offset']\n      };\n    }\n    case EMPTY_ALL_HISTORY_ORDERS: {\n      return {\n        ...state,\n        historyOrders: [],\n        historyOrdersTotalNum: null,\n        historyOrdersLimit: 20,\n        historyOrdersOffset: 0\n      };\n    }\n    /**\n     * open orders，可能会新增，可能状态变化，可能减少。\n     * history 只会增加。\n     * 针对socket 推送来的Order更新逻辑如下：\n     * 如果 order 是 openOrder，则首先删除openOrders中相同的Order，然后把新的order加入到open order按照created_at 进行从大到小的排序\n     * 这样也保证了如果是状态变化，则位置不变，如果是新增则放在头部。\n     * 如果 order 是 history order，首先在openOrders中删除该Order。如果historyOrder在第一页，则直接加到头部，如果不在第一页，则不做更新。\n     * 在翻页时，通过rest api 接口查询。\n     */\n    case UPDATE_SOCKET_ALL_ORDER:\n      const order = action.payload.order;\n      if (order.status === 'waiting' || order.status === 'processing') {\n        const openOrders = state.openOrders.filter(o => o.hash !== order.hash);\n        openOrders.push(order);\n        openOrders.sort((a, b) => b.createdAt - a.createdAt);\n        return {\n          ...state,\n          openOrders\n        };\n      } else {\n        const openOrders = state.openOrders.filter(o => o.hash !== order.hash);\n        let historyOrders = [];\n        /**\n         * 如果当前不在第一页，则不展示\n         */\n        if (state.historyOrdersOffset === 0) {\n          historyOrders = state.historyOrders.filter(\n            o => o.hash !== order.hash\n          );\n          historyOrders.unshift(order);\n        } else historyOrders = state.historyOrders;\n\n        return {\n          ...state,\n          openOrders,\n          historyOrders\n        };\n      }\n\n    case UPDATE_USER_TRANSACTIONS: {\n      const response = action.payload;\n      return {\n        ...state,\n        transactions: response['trades'],\n        transactionsTotalNum: response['totalNum'],\n        transactionsLimit: response['limit'],\n        transactionsOffset: response['offset']\n      };\n    }\n    case EMPTY_USER_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: [],\n        transactionsTotalNum: null,\n        transactionsLimit: 20,\n        transactionsOffset: 0\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  EMPTY_MY_HISTORY_ORDERS,\n  EMPTY_MY_OPEN_ORDERS,\n  UPDATE_HISTORY_ORDERS_OFFSET,\n  UPDATE_MY_HISTORY_ORDERS,\n  UPDATE_MY_OPEN_ORDERS,\n  UPDATE_OPEN_ORDERS_OFFSET,\n  UPDATE_SOCKET_ORDER\n} from 'redux/actions/MyOrders';\n\nconst initialState = {\n  // 'waiting', 'processing'\n  openOrders: [],\n  openOrdersTotalNum: null,\n  openOrdersLimit: 20,\n  openOrdersOffset: 0,\n\n  // 'processed', 'failed', 'cancelled', 'expired'\n  historyOrders: [],\n  historyOrdersTotalNum: null,\n  historyOrdersLimit: 20,\n  historyOrdersOffset: 0\n};\n\nexport const MyOrdersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_MY_OPEN_ORDERS: {\n      const response = action.payload.response;\n      const orders = response['orders'];\n      orders.sort((a, b) => b.createdAt - a.createdAt);\n      return {\n        ...state,\n        openOrders: orders,\n        openOrdersTotalNum: response['totalNum']\n        // openOrdersLimit: response['limit'],\n        // openOrdersOffset: response['offset']\n      };\n    }\n\n    case UPDATE_OPEN_ORDERS_OFFSET: {\n      return {\n        ...state,\n        openOrdersOffset: action.payload.offset\n      };\n    }\n    case EMPTY_MY_OPEN_ORDERS: {\n      return {\n        ...state,\n        openOrders: [],\n        openOrdersTotalNum: null,\n        openOrdersLimit: 20,\n        openOrdersOffset: 0\n      };\n    }\n    case UPDATE_MY_HISTORY_ORDERS: {\n      const response = action.payload.response;\n      return {\n        ...state,\n        historyOrders: response['orders'],\n        historyOrdersTotalNum: response['totalNum']\n        // historyOrdersLimit: response['limit'],\n        // historyOrdersOffset: response['offset']\n      };\n    }\n    case UPDATE_HISTORY_ORDERS_OFFSET: {\n      return {\n        ...state,\n        historyOrdersOffset: action.payload.offset\n      };\n    }\n    case EMPTY_MY_HISTORY_ORDERS: {\n      return {\n        ...state,\n        historyOrders: [],\n        historyOrdersTotalNum: null,\n        historyOrdersLimit: 20,\n        historyOrdersOffset: 0\n      };\n    }\n    /**\n     * open orders，可能会新增，可能状态变化，可能减少。\n     * history 只会增加。\n     * 针对socket 推送来的Order更新逻辑如下：\n     * 如果 order 是 openOrder，则首先删除openOrders中相同的Order，然后把新的order加入到open order按照created_at 进行从大到小的排序\n     * 这样也保证了如果是状态变化，则位置不变，如果是新增则放在头部。\n     * 如果 order 是 history order，首先在openOrders中删除该Order。如果historyOrder在第一页，则直接加到头部，如果不在第一页，则不做更新。\n     * 在翻页时，通过rest api 接口查询。\n     */\n    case UPDATE_SOCKET_ORDER:\n      const order = action.payload.order;\n      if (order.status === 'waiting' || order.status === 'processing') {\n        const openOrders = state.openOrders.filter(o => o.hash !== order.hash);\n        openOrders.push(order);\n        openOrders.sort((a, b) => b.createdAt - a.createdAt);\n        return {\n          ...state,\n          openOrders\n        };\n      } else {\n        const openOrders = state.openOrders.filter(o => o.hash !== order.hash);\n        let historyOrders = [];\n        /**\n         * 如果当前不在第一页，则不展示\n         */\n        if (state.historyOrdersOffset === 0) {\n          historyOrders = state.historyOrders.filter(\n            o => o.hash !== order.hash\n          );\n          historyOrders.unshift(order);\n        } else historyOrders = state.historyOrders;\n\n        return {\n          ...state,\n          openOrders,\n          historyOrders\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n","import { UPDATE_NONCE } from 'redux/actions/Nonce';\n\nconst initialState = {\n  nonce: []\n};\n\nexport const NonceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_NONCE:\n      const nonce = action.payload.nonce;\n      return {\n        ...state,\n        nonce\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  UPDATE_TYPE_1,\n  UPDATE_TYPE_2,\n  UPDATE_TYPE_3\n} from 'redux/actions/Tabs';\n\nconst initialState = {\n  type1: 'orderBook',\n  type2: 'open-orders',\n  type3: 'open-orders'\n};\n\nexport const TabsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TYPE_1:\n      if (\n        action.payload.type === 'orderBook' ||\n        action.payload.type === 'tradeHistory'\n      ) {\n        return {\n          ...state,\n          type1: action.payload.type\n        };\n      }\n      return state;\n    case UPDATE_TYPE_2:\n      if (\n        action.payload.type === 'open-orders' ||\n        action.payload.type === 'history-orders'\n      ) {\n        return {\n          ...state,\n          type2: action.payload.type\n        };\n      }\n      return state;\n    case UPDATE_TYPE_3:\n      if (\n        action.payload.type === 'open-orders' ||\n        action.payload.type === 'order-history' ||\n        action.payload.type === 'trade-history'\n      ) {\n        return {\n          ...state,\n          type3: action.payload.type\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n","import { UPDATE_TOKENS } from 'redux/actions/Tokens';\n\nconst initialState = {\n  tokens: []\n};\n\nexport const TokensReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TOKENS:\n      const tokens = action.payload.tokens;\n      return {\n        ...state,\n        tokens\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  EMPTY_TRADE_FORM,\n  UPDATE_PRICE,\n  UPDATE_TRADE_TYPE\n} from 'redux/actions/TradePanel';\nimport { UPDATE_AMOUNT } from '../actions/TradePanel';\n\nconst initialState = {\n  tradeType: 'buy',\n  amount: '',\n  price: ''\n};\n\nexport const TradePanelReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TRADE_TYPE:\n      const tradeType = action.payload.tradeType;\n      if (tradeType === 'buy' || tradeType === 'sell') {\n        return {\n          ...state,\n          tradeType\n        };\n      }\n      return state;\n    case UPDATE_AMOUNT:\n      let amount = String(action.payload.amount);\n      return {\n        ...state,\n        amount\n      };\n    case UPDATE_PRICE:\n      let price = String(action.payload.price);\n      return {\n        ...state,\n        price\n      };\n    case EMPTY_TRADE_FORM:\n      return {\n        ...state,\n        amount: '',\n        price: ''\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_ACCOUNTS,\n  FETCH_ACCOUNTS_DATA_SUCCESS,\n  FETCH_ACCOUNTS_FULFILLED,\n  FETCH_ACCOUNTS_REJECTED\n} from 'redux/actions/Web3';\n\nconst initialState = {\n  accounts: [],\n  accounts_fetched: false,\n  account_exists: false,\n  account_selected: null\n};\n\nexport const Web3 = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ACCOUNTS_FULFILLED: {\n      const exists = action.payload.length > 0;\n      let selected = null;\n      if (exists) selected = action.payload[0];\n      return {\n        ...state,\n        accounts: action.payload,\n        accounts_fetched: true,\n        account_exists: exists,\n        account_selected: selected\n      };\n    }\n    case FETCH_ACCOUNTS_REJECTED:\n      return {\n        ...state,\n        accounts: [],\n        accounts_fetched: false,\n        account_exists: false,\n        account_selected: null\n      };\n    case FETCH_ACCOUNTS: {\n      const exists = action.payload.length > 0;\n      let selected = null;\n      if (exists) selected = action.payload[0];\n      return {\n        ...state,\n        accounts: action.payload,\n        accounts_fetched: true,\n        account_exists: exists,\n        account_selected: selected\n      };\n    }\n    case FETCH_ACCOUNTS_DATA_SUCCESS: {\n      return {\n        ...state,\n        accounts: action.payload.items\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { UPDATE_CANDLE } from 'redux/actions/market/Candle';\n\n// Hack: initial State can not be empty.\nconst initialState = {\n  ohlc: []\n};\n\nexport const CandlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_CANDLE:\n      const ohlc = action.payload.ohlc;\n      return {\n        ...state,\n        ohlc\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_MARKET } from 'redux/actions/market/CurrentMarket';\n\nfunction getCurrentMarketInitState() {\n  const { hash } = window.location;\n  if (hash && hash.includes('#/trade/')) {\n    let current = hash.replace('#/trade/', '');\n    return {\n      current,\n      baseTokenSymbol: current.split('-')[0],\n      quoteTokenSymbol: current.split('-')[1]\n    };\n  } else {\n    return {\n      current: 'LRC-ETH',\n      baseTokenSymbol: 'LRC',\n      quoteTokenSymbol: 'ETH'\n    };\n  }\n}\n\nconst initialState = getCurrentMarketInitState();\n\nexport const CurrentMarketReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_MARKET:\n      const marketName = action.payload.marketName;\n      const tokens = marketName.split('-');\n      const baseTokenSymbol = tokens[0];\n      const quoteTokenSymbol = tokens[1];\n      return {\n        ...state,\n        current: marketName,\n        baseTokenSymbol,\n        quoteTokenSymbol\n      };\n    default:\n      return state;\n  }\n};\n","import { UPDATE_MARKET_LIST } from 'redux/actions/market/MarketList';\n\nconst initialState = {\n  markets: [],\n  marketNames: []\n};\n\nexport const MarketListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_MARKET_LIST:\n      const markets = action.payload.markets;\n      const marketNames = markets.map(val => {\n        return val.market;\n      });\n      return {\n        ...state,\n        markets,\n        marketNames\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  EMPTY_ORDER_BOOKS,\n  UPDATE_ORDER_BOOKS,\n  UPDATE_ORDER_BOOKS_LEVEL,\n  UPDATE_SOCKET_ORDER_BOOKS\n} from 'redux/actions/market/OrderBook';\n\n// Hack: initial State can not be empty. Empty\nconst initialState = {\n  level: 0,\n  version: -1,\n  sells: [],\n  buys: []\n};\n\nexport const OrderBookReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ORDER_BOOKS:\n      if (state.version < action.payload.version) {\n        const sells = action.payload.sells;\n        const buys = action.payload.buys;\n        return {\n          ...state,\n          sells,\n          buys,\n          version: action.payload.version\n        };\n      } else return state;\n\n    case UPDATE_ORDER_BOOKS_LEVEL:\n      const level = action.payload.level;\n      return {\n        ...state,\n        level\n      };\n    case EMPTY_ORDER_BOOKS:\n      return {\n        level: action.payload.level,\n        version: -1,\n        sells: [],\n        buys: []\n      };\n\n    case UPDATE_SOCKET_ORDER_BOOKS:\n      const starVersion = action.payload.startVersion;\n      const endVersion = action.payload.endVersion;\n      if (starVersion <= state.version + 1) {\n        const bids = action.payload.buys;\n        const asks = action.payload.sells;\n        const filteredBuys = bids.filter(slot => slot.count > 0);\n        const filteredSells = asks.filter(slot => slot.count > 0);\n\n        state.sells.forEach(slot => {\n          if (!asks.find(s => s.price === slot.price)) {\n            filteredSells.push(slot);\n          }\n        });\n\n        state.buys.forEach(slot => {\n          if (!bids.find(s => s.price === slot.price)) {\n            filteredBuys.push(slot);\n          }\n        });\n\n        filteredSells.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n        filteredBuys.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n        return {\n          ...state,\n          version: endVersion,\n          sells: filteredSells,\n          buys: filteredBuys\n        };\n      } else return state;\n\n    default:\n      return state;\n  }\n};\n","import { REST_TICKER, UPDATE_TICKER } from 'redux/actions/market/Ticker';\n\nconst initialState = {\n  high: '-',\n  low: '-',\n  percentChange24h: '-',\n  size: '-',\n  volume: '-',\n  open: '-',\n  close: '-'\n};\n\nexport const TickerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TICKER:\n      const ticker = action.payload.ticker;\n      const open = parseFloat(ticker['open']);\n      const close = parseFloat(ticker['close']);\n      let percentChange24h = (((close - open) / open) * 100).toFixed(2);\n      percentChange24h = percentChange24h !== 'NaN' ? percentChange24h : '0.00';\n      if (close > open) {\n        percentChange24h = `+${percentChange24h}`;\n      }\n      return {\n        ...state,\n        ...ticker,\n        percentChange24h: `${percentChange24h}%`\n      };\n\n    case REST_TICKER:\n      return {\n        high: '-',\n        low: '-',\n        percentChange24h: '-',\n        size: '-',\n        volume: '-',\n        open: '-',\n        close: '-'\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  EMPTY_TRADES,\n  EXTEND_TRADES,\n  UPDATE_TRADES\n} from 'redux/actions/market/TradeHistory';\n\nconst initialState = {\n  trades: [],\n  latestTrade: null\n};\n\nexport const TradeHistoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TRADES: {\n      const trades = action.payload.trades;\n      const latestTrade = trades && trades.length > 0 ? trades[0] : null;\n      return {\n        ...state,\n        trades,\n        latestTrade\n      };\n    }\n    case EXTEND_TRADES: {\n      const newTrades = action.payload.newTrades;\n      const previousTrades = state.trades;\n      let trades = newTrades.concat(previousTrades);\n      if (trades.length > 100) {\n        trades = trades.slice(0, 100);\n      }\n      const latestTrade = trades && trades.length > 0 ? trades[0] : null;\n      return {\n        ...state,\n        trades,\n        latestTrade\n      };\n    }\n\n    case EMPTY_TRADES:\n      return {\n        trades: [],\n        latestTrade: null\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport { CancelOrderManagerReducer } from './CancelOrderManager';\nimport { CmcPriceReducer } from './CmcPrice';\nimport { ColorManagerReducer } from './ColorManager';\nimport { DexAccountReducer } from './DexAccount';\nimport { ExchangeInfoReducer } from './ExchangeInfo';\nimport { GasPriceReducer } from './GasPrice';\nimport { LayoutManagerReducer } from './LayoutManager';\nimport { MetaMaskReducer } from './MetaMask';\nimport { ModalManagerReducer } from './ModalManager';\nimport { MyAccountPageReducer } from './MyAccountPage';\nimport { MyOrderPageReducer } from './MyOrderPage';\nimport { MyOrdersReducer } from './MyOrders';\nimport { NonceReducer } from './Nonce';\nimport { TabsReducer } from './Tabs';\nimport { TokensReducer } from './Tokens';\nimport { TradePanelReducer } from './TradePanel';\nimport { Web3 } from './Web3';\n\n// markets\nimport { CandlesReducer } from './market/Candles';\nimport { CurrentMarketReducer } from './market/CurrentMarket';\nimport { MarketListReducer } from './market/MarketList';\nimport { OrderBookReducer } from './market/OrderBook';\nimport { TickerReducer } from './market/Ticker';\nimport { TradeHistoryReducer } from './market/TradeHistory';\n\nconst rootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    exchange: ExchangeInfoReducer,\n    Web3: Web3,\n    tabs: TabsReducer,\n    tokens: TokensReducer,\n    tradePanel: TradePanelReducer,\n    layoutManager: LayoutManagerReducer,\n    market: combineReducers({\n      currentMarket: CurrentMarketReducer,\n      candles: CandlesReducer,\n      marketList: MarketListReducer,\n      orderBook: OrderBookReducer,\n      tradeHistory: TradeHistoryReducer,\n      ticker: TickerReducer\n    }),\n    currentMarket: CurrentMarketReducer,\n    candles: CandlesReducer,\n    marketList: MarketListReducer,\n    orderBook: OrderBookReducer,\n    tradeHistory: TradeHistoryReducer,\n    ticker: TickerReducer,\n    modalManager: ModalManagerReducer,\n    balances: MyAccountPageReducer,\n    myOrders: MyOrdersReducer,\n    myOrderPage: MyOrderPageReducer,\n    metaMask: MetaMaskReducer,\n    dexAccount: DexAccountReducer,\n    nonce: NonceReducer,\n    gasPrice: GasPriceReducer,\n    cancelOrderManager: CancelOrderManagerReducer,\n    cmcPrice: CmcPriceReducer,\n    colorManager: ColorManagerReducer\n  });\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport { tracker } from 'components/DefaultTracker';\nimport createRootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\n// Use createHashHistory if it's deployed to github\nexport const history = createBrowserHistory();\n\nconst trackingMiddleware = tracker => () => next => action => {\n  tracker.trackEvent(action);\n  next(action);\n};\n\n// Setting preloadedState is still behind setting initState in each reducer\nexport default function configureStore(preloadedState) {\n  const composeEnhancer =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancer(\n      applyMiddleware(\n        thunk,\n        routerMiddleware(history),\n        trackingMiddleware(tracker)\n      )\n    )\n  );\n\n  // Hot reloading\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return store;\n}\n","import { ActionButton } from 'styles/Styles';\nimport { Form, Input } from 'antd';\nimport { MyModal } from './styles/Styles';\nimport { connect } from 'react-redux';\nimport {\n  showEnterPasswordModal,\n  showExportAccountModal\n} from 'redux/actions/ModalManager';\nimport { updatePassword } from 'redux/actions/DexAccount';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\n\nimport { decrypt } from 'modals/components/utils';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\n\nimport { utils } from 'lightcone/common';\n\nclass EnterPasswordModal extends React.Component {\n  passwordRef = React.createRef();\n\n  state = {\n    loading: false,\n    password: '',\n    hidePasswordErrorMessage: true,\n    isPasswordValid: false,\n    passwordErrorMessage: <I s=\"Please enter your password!\" />\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.modalManager.isEnterPasswordModalVisible === false &&\n      this.props.modalManager.isEnterPasswordModalVisible !==\n        prevProps.modalManager.isEnterPasswordModalVisible\n    ) {\n      this.setState({\n        password: '',\n        loading: false,\n        hidePasswordErrorMessage: true,\n        passwordErrorMessage: <I s=\"Please enter your password!\" />\n      });\n    }\n\n    if (this.passwordRef.current) {\n      this.passwordRef.current.focus();\n    }\n  }\n\n  onPasswordChange = e => {\n    const { value } = e.target;\n    const isPasswordValid = value.length >= 12 && value.length <= 128;\n    this.setState({\n      password: value,\n      hidePasswordErrorMessage: true,\n      isPasswordValid\n    });\n  };\n\n  pressedButton = () => {\n    let validate = true;\n    if (this.state.password.length === 0) {\n      validate = false;\n      this.setState({\n        hidePasswordErrorMessage: false,\n        passwordErrorMessage: <I s=\"Please enter your password!\" />\n      });\n    } else {\n      // Use password to decode\n      const keyPairCipherText = this.props.dexAccount.account.keyPairCipherText;\n      const tradingPrivKey = decrypt(\n        keyPairCipherText,\n        utils.keccakHash(this.state.password)\n      );\n      if (tradingPrivKey === null) {\n        validate = false;\n        this.setState({\n          hidePasswordErrorMessage: false,\n          passwordErrorMessage: <I s=\"InvalidPassword\" />\n        });\n      } else {\n        // Password is correct\n        this.props.showExportAccountModal(true);\n      }\n    }\n\n    if (validate) {\n      this.props.updatePassword(this.state.password);\n      // Reset password\n      this.setState({\n        password: '',\n        hidePasswordErrorMessage: true\n      });\n\n      this.props.showEnterPasswordModal(false);\n    }\n  };\n\n  passwordEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.pressedButton();\n    }\n  };\n\n  render() {\n    let address = this.props.dexAccount.account.address;\n    const container = (\n      <div>\n        <div>\n          <span\n            style={{\n              color: colors.textWhite,\n              fontSize: '0.9rem'\n            }}\n          >\n            <I s=\"PromptForPassword\" />\n          </span>\n        </div>\n        <div\n          style={{\n            marginBottom: '0px' // distance between components\n          }}\n        >\n          <div>\n            <div\n              style={{\n                paddingTop: '24px',\n                paddingBottom: '9px',\n                paddingLeft: '0px',\n                fontSize: '0.9rem'\n              }}\n            >\n              <I s=\"My Address\" />\n            </div>\n            <div\n              style={{\n                padding: '10px 16px',\n                backgroundColor: colors.foreground,\n                color: colors.textDim,\n                borderRadius: '4px',\n                fontSize: '0.9rem'\n              }}\n            >\n              {address}\n            </div>\n          </div>\n          <Form>\n            <div\n              style={{\n                paddingTop: '32px',\n                paddingBottom: '9px',\n                paddingLeft: '0px',\n                fontSize: '0.9rem'\n              }}\n            >\n              <I s=\"Password\" />\n            </div>\n            <Form.Item\n              style={{\n                paddingTop: '0px',\n                paddingBottom: '0px'\n              }}\n              colon={false}\n              hasFeedback\n            >\n              <Input.Password\n                autoFocus\n                autoCapitalize={'off'}\n                autoComplete={'off'}\n                value={this.state.password}\n                onChange={this.onPasswordChange}\n                onBlur={this.onBlur}\n                placeholder=\"\"\n                maxLength={128}\n                style={{\n                  color: colors.textWhite,\n                  fontWeight: '600',\n                  fontSize: '0.9rem'\n                }}\n                onKeyDown={this.passwordEnter.bind(this)}\n                ref={this.passwordRef}\n              />\n            </Form.Item>\n          </Form>\n          <div\n            style={{\n              height: '2px',\n              marginTop: '6px',\n              marginBottom: '6px'\n            }}\n          >\n            <span\n              style={{\n                color: colors.red,\n                fontSize: '0.9rem'\n              }}\n            >\n              {this.state.hidePasswordErrorMessage\n                ? ''\n                : this.state.passwordErrorMessage}\n            </span>\n          </div>\n        </div>\n        <div\n          style={{\n            paddingTop: '40px',\n            paddingBottom: '2px'\n          }}\n        >\n          <ActionButton\n            block\n            // className={'nav-tab-theme-button'}\n            onClick={() => this.pressedButton()}\n            disabled={\n              this.state.password.length === 0 || !this.state.isPasswordValid\n            }\n          >\n            <I s=\"Export\" />\n          </ActionButton>\n        </div>\n      </div>\n    );\n\n    return (\n      <MyModal\n        width={AppLayout.modalWidth}\n        title={\n          <span\n            style={{\n              color: colors.textWhite,\n              fontWeight: '600',\n              fontSize: '1.2rem',\n              userSelect: 'none'\n            }}\n          >\n            <I s=\"Export Account\" />\n          </span>\n        }\n        footer={null}\n        maskClosable={false}\n        closeIcon={<FontAwesomeIcon icon={faTimes} />}\n        visible={this.props.modalManager.isEnterPasswordModalVisible}\n        onOk={() => this.props.showEnterPasswordModal(false)}\n        onCancel={() => this.props.showEnterPasswordModal(false)}\n      >\n        {container}\n      </MyModal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { dexAccount, modalManager } = state;\n  return { dexAccount, modalManager };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showEnterPasswordModal: show => dispatch(showEnterPasswordModal(show)),\n    showExportAccountModal: show => dispatch(showExportAccountModal(show)),\n    updatePassword: password => dispatch(updatePassword(password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterPasswordModal);\n","import { Modal } from 'antd';\nimport { connect } from 'react-redux';\nimport { decrypt } from 'modals/components/utils';\nimport { showExportAccountModal } from 'redux/actions/ModalManager';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\n\nconst PrettyPrintJson = data => {\n  return <pre>{JSON.stringify(data, null, 2)}</pre>;\n};\n\nconst ExportedDiv = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-size: 0.85rem;\n  padding: 8px 8px;\n  background: ${colors.foreground};\n  color: ${colors.textDim}\n  border-radius: 4px;\n  &:hover {\n    color: ${colors.textWhite}\n  }\n  &::selection, &::-moz-selection{\n    background-color: ${colors.theme}\n  }\n`;\n\nclass ExportAccountModal extends React.Component {\n  pressedLogoutButton = () => {\n    this.props.showExportAccountModal(false);\n  };\n\n  render() {\n    var container = null;\n    const { dexAccount } = this.props;\n    if (dexAccount.account && dexAccount.account.accountId) {\n      var json = {};\n      json['exchangeName'] = 'LoopringDEX: Beta 1';\n      json['exchangeAddress'] = this.props.exchangeAddress;\n      json['exchangeId'] = this.props.exchangeId;\n      json['accountAddress'] = window.wallet ? window.wallet.address : '';\n      json['accountId'] = this.props.dexAccount.account.accountId;\n      json['apiKey'] = this.props.dexAccount.account.apiKey;\n      json['publicKeyX'] = this.props.dexAccount.account.publicKeyX;\n      json['publicKeyY'] = this.props.dexAccount.account.publicKeyY;\n      json['privateKey'] = decrypt(\n        dexAccount.account.keyPairCipherText,\n        this.props.dexAccount.account.password\n      );\n\n      container = (\n        <div>\n          <div\n            style={{\n              textAlign: 'center',\n              color: colors.red,\n              marginTop: '20px'\n            }}\n          >\n            <FontAwesomeIcon icon={faExclamationTriangle} size=\"3x\" />\n            <div\n              style={{\n                textAlign: 'left',\n                marginTop: '20px',\n                fontSize: '0.9rem'\n              }}\n            >\n              <I s=\"exportAccountWarning\" />\n            </div>\n          </div>\n          <ExportedDiv>{PrettyPrintJson(json)}</ExportedDiv>\n        </div>\n      );\n    }\n\n    return (\n      <Modal\n        width={AppLayout.modalWidth}\n        title={\n          <span\n            style={{\n              color: colors.textWhite,\n              fontWeight: '600',\n              fontSize: '1.2rem',\n              userSelect: 'none'\n            }}\n          >\n            <I s=\"Export Account\" />\n          </span>\n        }\n        footer={null}\n        maskClosable={false}\n        closeIcon={<FontAwesomeIcon icon={faTimes} />}\n        visible={this.props.modalManager.isExportAccountModalVisible}\n        onOk={() => this.props.showExportAccountModal(false)}\n        onCancel={() => this.props.showExportAccountModal(false)}\n      >\n        {container}\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { modalManager, dexAccount, exchange } = state;\n  return {\n    modalManager,\n    dexAccount,\n    exchangeId: exchange.exchangeId,\n    exchangeAddress: exchange.exchangeAddress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showExportAccountModal: show => dispatch(showExportAccountModal(show))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExportAccountModal);\n","import { Modal } from 'antd';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport React from 'react';\n\nimport { Instruction, Section, TextPopupTitle } from 'modals/styles/Styles';\n\nexport default class MaintenanceModal extends React.Component {\n  render() {\n    return (\n      <div>\n        <Modal\n          width={AppLayout.modalWidth}\n          title={\n            <TextPopupTitle>\n              <I s=\"MaintenanceModalTitle\" />\n            </TextPopupTitle>\n          }\n          footer={null}\n          visible={this.props.isVisible}\n        >\n          <Section style={{ textAlign: 'center' }}>\n            <img\n              width=\"80px\"\n              draggable=\"false\"\n              style={{\n                marginTop: '20px',\n                userSelect: 'none'\n              }}\n              alt=\"maintaince\"\n              src=\"/assets/images/maintaince.png\"\n            />\n            <Instruction\n              style={{\n                paddingTop: '20px',\n                textAlign: 'center'\n              }}\n            >\n              <I s=\"MaintenanceModalInstruction\" />\n            </Instruction>\n          </Section>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import { ActionButton } from 'styles/Styles';\nimport {\n  AddressDiv,\n  Section,\n  TextFormError,\n  TextPopupTitle\n} from 'modals/styles/Styles';\nimport { Input, Spin } from 'antd';\nimport {\n  LOGGED_IN,\n  RESETTING_PASSWORD,\n  updateAccount,\n  updatePassword,\n  updateRememberMe\n} from 'redux/actions/DexAccount';\nimport { MyModal } from './styles/Styles';\nimport { connect } from 'react-redux';\nimport { lightconeGetAccount } from 'lightcone/api/LightconeAPI';\nimport { loginModal, resetPasswordModal } from 'redux/actions/ModalManager';\nimport AppLayout from 'AppLayout';\nimport Group from 'modals/components/Group';\nimport I from 'components/I';\nimport ModalIndicator from 'modals/components/ModalIndicator';\nimport React from 'react';\nimport colors from 'colors';\n\nimport { encrypt } from 'modals/components/utils';\nimport { utils } from 'lightcone/common';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\n\nclass LoginModal extends React.Component {\n  passwordRef = React.createRef();\n\n  state = {\n    password: '',\n    error: '',\n    loading: false\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.isVisible === false &&\n      this.props.isVisible !== prevProps.isVisible\n    ) {\n      this.setState({\n        password: '',\n        error: ''\n      });\n    }\n\n    if (this.passwordRef.current) {\n      this.passwordRef.current.focus();\n    }\n  }\n\n  onPasswordChange = e => {\n    const { value } = e.target;\n    this.setState({\n      password: value,\n      error: '',\n      loading: false\n    });\n  };\n\n  onClose = () => {\n    this.props.closeModal();\n  };\n\n  onClick = () => {\n    this.setState({\n      loading: true\n    });\n\n    const _this = this;\n    const { updateRememberMe, updateAccount } = this.props;\n    const { account } = this.props.dexAccount;\n\n    (async () => {\n      try {\n        const passwordHash = utils.keccakHash(_this.state.password);\n        const keyPair = window.wallet.generateKeyPair(_this.state.password);\n        if (\n          !!keyPair.secretKey &&\n          keyPair.publicKeyX === account.publicKeyX &&\n          keyPair.publicKeyY === account.publicKeyY\n        ) {\n          const relayAccount = await lightconeGetAccount(window.wallet.address);\n          const keyPairCipherText = encrypt(keyPair.secretKey, passwordHash);\n          const state = relayAccount.isFreeze ? RESETTING_PASSWORD : LOGGED_IN;\n          updateAccount({\n            ...account,\n            state,\n            keyPairCipherText,\n            password: passwordHash\n          });\n\n          updateRememberMe(true);\n\n          _this.onClose();\n          _this.setState({\n            loading: false\n          });\n          // notifySuccess(<I s=\"WelcomeBack\" />);\n        } else {\n          throw new Error('Invalid password');\n        }\n      } catch (err) {\n        _this.setState({\n          password: '',\n          loading: false,\n          error: <I s=\"InvalidPassword\" />\n        });\n      }\n    })();\n  };\n\n  onPasswordEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.onClick();\n    }\n  };\n\n  render() {\n    return (\n      <MyModal\n        width={AppLayout.modalWidth}\n        title={\n          <TextPopupTitle>\n            <I s=\"Login\" />\n          </TextPopupTitle>\n        }\n        footer={null}\n        maskClosable={false}\n        closeIcon={<FontAwesomeIcon icon={faTimes} />}\n        visible={this.props.isVisible}\n        onCancel={() => this.onClose()}\n      >\n        <Spin\n          spinning={this.state.loading}\n          indicator={<ModalIndicator title=\"Logging in...\" marginTop=\"80px\" />}\n        >\n          <Section>\n            <Group label={<I s=\"My Address\" />}>\n              <AddressDiv>{this.props.dexAccount.account.address}</AddressDiv>\n            </Group>\n\n            <Group label={<I s=\"Password\" />}>\n              <Input.Password\n                autoFocus\n                autoCapitalize={'off'}\n                autoComplete={'off'}\n                value={this.state.password}\n                onChange={this.onPasswordChange}\n                placeholder=\"\"\n                maxLength={128}\n                style={{\n                  color: colors.textWhite\n                }}\n                onKeyDown={this.onPasswordEnter.bind(this)}\n                ref={this.passwordRef}\n              />\n              <div\n                style={{\n                  marginTop: '6px',\n                  height: '20px'\n                }}\n              >\n                <TextFormError>{this.state.error}</TextFormError>\n              </div>\n            </Group>\n          </Section>\n          <Section>\n            <Group>\n              <a\n                href\n                onClick={() => {\n                  this.props.closeModal();\n                  this.props.resetPasswordModal(true);\n                }}\n                style={{\n                  display: 'inline-block',\n                  // marginBottom: '24px',\n                  // marginTop: '-12px',\n                  float: 'right'\n                }}\n              >\n                <I s=\"Forgot password?\" />\n              </a>\n            </Group>\n          </Section>\n          <Section>\n            <ActionButton\n              disabled={!this.state.password}\n              onClick={() => this.onClick()}\n            >\n              <I s=\"Login\" />\n            </ActionButton>\n          </Section>\n        </Spin>\n      </MyModal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { modalManager, dexAccount } = state;\n  const isVisible = modalManager.isLoginModalVisible;\n  return { isVisible, modalManager, dexAccount };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeModal: () => dispatch(loginModal(false)),\n    resetPasswordModal: show => dispatch(resetPasswordModal(show)),\n    updateAccount: account => dispatch(updateAccount(account)),\n    updatePassword: password => dispatch(updatePassword(password)),\n    updateRememberMe: rememberMe => dispatch(updateRememberMe(rememberMe))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModal);\n","import { getBalances } from 'lightcone/api/v1/balances';\nimport { getEthBalance } from 'lightcone/api/v1/ethBalance';\nimport { getTokenBalance } from 'lightcone/api/v1/tokenBalance';\n\nimport {\n  getDepositHistory,\n  getWithdrawalHistory\n} from 'lightcone/api/LightconeAPI';\n\nexport const UPDATE_MY_BALANCES = 'UPDATE_MY_BALANCES';\nexport const UPDATE_ETH_BALANCE = 'UPDATE_ETH_BALANCE';\n\nexport const UPDATE_TOKEN_BALANCE = 'UPDATE_TOKEN_BALANCE';\nexport const UPDATE_BALANCE = 'UPDATE_BALANCE';\n\nexport const EMPTY_BALANCES = 'EMPTY_BALANCES';\n\nexport const UPDATE_DEPOSITS = 'UPDATE_DEPOSITS';\nexport const EMPTY_DEPOSITS = 'EMPTY_DEPOSITS';\n\nexport const UPDATE_WITHDRAWALS = 'UPDATE_WITHDRAWALS';\nexport const EMPTY_WITHDRAWALS = 'EMPTY_WITHDRAWALS';\n\nexport function emptyBalances() {\n  return {\n    type: EMPTY_BALANCES,\n    payload: {}\n  };\n}\n\nexport function updateBalance(balance) {\n  return {\n    type: UPDATE_BALANCE,\n    payload: {\n      balance\n    }\n  };\n}\n\nexport function updateMyAccountPage(balances) {\n  return {\n    type: UPDATE_MY_BALANCES,\n    payload: {\n      balances\n    }\n  };\n}\n\nexport function fetchMyAccountPage(accountId, apiKey, tokens, skip, limit) {\n  return dispatch => {\n    (async () => {\n      try {\n        const balances = await getBalances(\n          accountId,\n          apiKey,\n          tokens,\n          skip,\n          limit\n        );\n        dispatch(updateMyAccountPage(balances));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n\nexport function updateEthBalance(balance, tokens) {\n  return {\n    type: UPDATE_ETH_BALANCE,\n    payload: {\n      balance,\n      tokens\n    }\n  };\n}\n\nexport function fetchEthBalance(address) {\n  return dispatch => {\n    (async () => {\n      try {\n        const balance = await getEthBalance(address);\n        dispatch(updateEthBalance(balance));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function updateTokenBalance(balance, symbol, tokens) {\n  return {\n    type: UPDATE_TOKEN_BALANCE,\n    payload: {\n      balance,\n      symbol,\n      tokens\n    }\n  };\n}\n\nexport function fetchTokenBalance(owner, symbol, tokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        const balance = await getTokenBalance(owner, symbol, tokens);\n        dispatch(updateTokenBalance(balance, symbol));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function updateDeposits(payload) {\n  return {\n    type: UPDATE_DEPOSITS,\n    payload\n  };\n}\n\nexport function fetchDeposits(limit, offset, accountId, apiKey, tokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        const response = await getDepositHistory(\n          accountId,\n          limit,\n          offset,\n          apiKey,\n          tokens\n        );\n        dispatch(updateDeposits(response));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function emptyDeposits() {\n  return {\n    type: EMPTY_DEPOSITS,\n    payload: {}\n  };\n}\n\nexport function updateWithdrawals(payload) {\n  return {\n    type: UPDATE_WITHDRAWALS,\n    payload\n  };\n}\n\nexport function fetchWithdrawals(limit, offset, accountId, apiKey, tokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        const response = await getWithdrawalHistory(\n          accountId,\n          limit,\n          offset,\n          apiKey,\n          tokens\n        );\n        dispatch(updateWithdrawals(response));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function emptyWithdrawals() {\n  return {\n    type: EMPTY_WITHDRAWALS,\n    payload: {}\n  };\n}\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport { Instruction, Section } from 'modals/styles/Styles';\nimport {\n  REGISTERING,\n  updateAccount,\n  updatePassword,\n  updateRememberMe\n} from 'redux/actions/DexAccount';\nimport { notifyError, notifySuccess } from 'redux/actions/Notification';\nimport { registerAccountModal } from 'redux/actions/ModalManager';\nimport WhyIcon from 'components/WhyIcon';\n\nimport { encrypt } from 'modals/components/utils';\nimport { formatter, utils } from 'lightcone/common';\nimport ConfirmPasswordModal from './ConfirmPasswordModal';\nimport config from 'lightcone/config';\n\nclass RegisterAccountModal extends ConfirmPasswordModal {\n  title = (<I s=\"Register Account\" />);\n  buttonLabel = (<I s=\"Register Account\" />);\n  instructions = (\n    <Section>\n      <Instruction>\n        <I s=\"RegisterAccountInstruction_1\" />\n      </Instruction>\n      <ul>\n        <li>\n          <I s=\"RegisterAccountInstruction_Timing\" />\n          <WhyIcon text=\"TimingWhy\" />\n        </li>\n        <li>\n          <I s=\"RegisterAccountInstruction_Fee\" />\n          <WhyIcon text=\"RegisterAccountInstruction_FeeWhy\" />\n        </li>\n      </ul>\n    </Section>\n  );\n\n  onProceed = () => {\n    this.setState({\n      loading: true\n    });\n    if (this.state.password.length > 0 && this.state.isPasswordValid) {\n      const { updateRememberMe, exchange, nonce, gasPrice } = this.props;\n      const { password } = this.state;\n      updateRememberMe(false);\n\n      (async () => {\n        try {\n          const passwordHash = utils.keccakHash(password);\n          const fee = formatter\n            .toBig(config.getFeeByType('create', exchange.onchainFees).fee)\n            .plus(config.getFeeByType('deposit', exchange.onchainFees).fee);\n          const createOrUpdateAccountResponse = await window.wallet.createOrUpdateAccount(\n            password,\n            {\n              exchangeAddress: exchange.exchangeAddress,\n              fee: fee.toString(),\n              chainId: exchange.chainId,\n              token: config.getTokenBySymbol('ETH', exchange.tokens),\n              amount: '',\n              permission: '',\n              nonce: nonce.nonce,\n              gasPrice: gasPrice.gasPrice\n            },\n            true\n          );\n\n          const keyPair = createOrUpdateAccountResponse['keyPair'];\n\n          if (keyPair.secretKey === undefined) {\n            throw new Error(\n              'Failed to parse the response of account creation.'\n            );\n          }\n          const keyPairCipherText = encrypt(keyPair.secretKey, passwordHash);\n\n          const account = {\n            address: window.wallet.address,\n            publicKeyX: keyPair.publicKeyX,\n            publicKeyY: keyPair.publicKeyY,\n            keyPairCipherText,\n            state: REGISTERING,\n            password: passwordHash\n          };\n\n          this.props.updateAccount(account);\n          notifySuccess(<I s=\"AccountBeingRegisteredNotification\" />);\n        } catch (err) {\n          notifyError(<I s=\"AccountRegistrationFailedNotofication\" />);\n        } finally {\n          // Reset password\n          this.setState({\n            password: '',\n            repeatedPassword: ''\n          });\n\n          this.onClose();\n        }\n      })();\n    }\n  };\n}\n\nconst mapStateToProps = state => {\n  const { modalManager, nonce, gasPrice, exchange } = state;\n  const isVisible = modalManager.isRegisterAccountModalVisible;\n  return { isVisible, modalManager, nonce, gasPrice, exchange };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeModal: () => dispatch(registerAccountModal(false)),\n    updateAccount: account => dispatch(updateAccount(account)),\n    updatePassword: password => dispatch(updatePassword(password)),\n    updateRememberMe: rememberMe => dispatch(updateRememberMe(rememberMe))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegisterAccountModal);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport { Instruction, Section } from 'modals/styles/Styles';\nimport {\n  RESETTING_PASSWORD,\n  updateAccount,\n  updatePassword,\n  updateRememberMe\n} from 'redux/actions/DexAccount';\nimport { encrypt } from 'modals/components/utils';\nimport { formatter, utils } from 'lightcone/common';\nimport { loginModal, resetPasswordModal } from 'redux/actions/ModalManager';\nimport { notifyError, notifySuccess } from 'redux/actions/Notification';\nimport { saveUpdateRecord } from 'lightcone/api/localStorgeAPI';\nimport ConfirmPasswordModal from './ConfirmPasswordModal';\nimport WhyIcon from 'components/WhyIcon';\n\nimport config from 'lightcone/config';\n\nclass ResetPasswordModal extends ConfirmPasswordModal {\n  title = (<I s=\"Reset Password\" />);\n  buttonLabel = (<I s=\"Reset Password\" />);\n\n  instructions = (\n    <Section>\n      <Instruction>\n        <I s=\"ResetPasswordInstruction_1\" />\n      </Instruction>\n      <ul>\n        <li>\n          <I s=\"ResetPasswordInstruction_Timing\" />\n          <WhyIcon text=\"TimingWhy\" />\n        </li>\n        <li>\n          <I s=\"ResetPasswordInstruction_Fee\" />\n          <WhyIcon text=\"FeeWhy\" />\n        </li>\n      </ul>\n    </Section>\n  );\n\n  processChange = (address, dexAccount, newAccount) => {\n    saveUpdateRecord({\n      address: window.wallet.address,\n      from: {\n        publicKeyX: dexAccount.account.publicKeyX,\n        publicKeyY: dexAccount.account.publicKeyY\n      },\n      to: {\n        publicKeyX: newAccount.publicKeyX,\n        publicKeyY: newAccount.publicKeyY\n      }\n    });\n\n    this.props.updateAccount(newAccount);\n  };\n\n  onProceed = () => {\n    this.setState({\n      loading: true\n    });\n    if (this.state.password.length > 0 && this.state.isPasswordValid) {\n      const {\n        updateRememberMe,\n        dexAccount,\n        exchange,\n        nonce,\n        gasPrice\n      } = this.props;\n      const { password } = this.state;\n      updateRememberMe(true);\n\n      (async () => {\n        try {\n          const passwordHash = utils.keccakHash(password);\n          const fee = formatter\n            .toBig(config.getFeeByType('update', exchange.onchainFees).fee)\n            .plus(config.getFeeByType('deposit', exchange.onchainFees).fee);\n          const createOrUpdateAccountResponse = await window.wallet.createOrUpdateAccount(\n            password,\n            {\n              exchangeAddress: exchange.exchangeAddress,\n              fee: fee.toString(),\n              chainId: exchange.chainId,\n              token: config.getTokenBySymbol('ETH', exchange.tokens),\n              amount: '',\n              permission: '',\n              nonce: nonce.nonce,\n              gasPrice: gasPrice.gasPrice\n            },\n            true\n          );\n\n          // const hash = createOrUpdateAccountResponse['data'];\n          const keyPair = createOrUpdateAccountResponse['keyPair'];\n\n          if (keyPair.secretKey === undefined) {\n            throw new Error(\n              'Failed to parse the response of account creation.'\n            );\n          }\n          const keyPairCipherText = encrypt(keyPair.secretKey, passwordHash);\n\n          const account = {\n            ...dexAccount.account,\n            publicKeyX: keyPair.publicKeyX,\n            publicKeyY: keyPair.publicKeyY,\n            keyPairCipherText,\n            state: RESETTING_PASSWORD,\n            password: passwordHash\n          };\n\n          this.processChange(window.wallet.address, dexAccount, account);\n          notifySuccess(<I s=\"PasswordResetNotification\" />);\n        } catch (err) {\n          notifyError(<I s=\"PasswordResetFailedNotofication\" />);\n        } finally {\n          // Reset password\n          this.setState({\n            isPasswordValid: true,\n            password: '',\n            repeatedPassword: '',\n            passwordMismatch: false\n          });\n\n          this.onClose();\n        }\n      })();\n    }\n  };\n}\n\nconst mapStateToProps = state => {\n  const { modalManager, dexAccount, nonce, gasPrice, exchange } = state;\n  const isVisible = modalManager.isResetPasswordModalVisible;\n  return { isVisible, modalManager, dexAccount, nonce, gasPrice, exchange };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showLoginModal: () => dispatch(loginModal(true)),\n    closeModal: () => dispatch(resetPasswordModal(false)),\n    updateAccount: account => dispatch(updateAccount(account)),\n    updatePassword: password => dispatch(updatePassword(password)),\n    updateRememberMe: rem => dispatch(updateRememberMe(rem))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordModal);\n","import { ActionButton } from 'styles/Styles';\nimport {\n  AddressDiv,\n  Instruction,\n  Section,\n  TextPopupTitle\n} from 'modals/styles/Styles';\nimport { Menu, Spin } from 'antd';\nimport { MyModal } from './styles/Styles';\nimport { connect } from 'react-redux';\nimport { fetchWalletBalance } from 'modals/components/utils';\nimport { showWithdrawModal } from 'redux/actions/ModalManager';\nimport AppLayout from 'AppLayout';\nimport AssetDropdown from 'modals/components/AssetDropdown';\nimport Group from 'modals/components/Group';\nimport I from 'components/I';\nimport LabelValue from 'modals/components/LabelValue';\nimport ModalIndicator from 'modals/components/ModalIndicator';\nimport NumericInput from 'components/NumericInput';\nimport React from 'react';\nimport WhyIcon from 'components/WhyIcon';\nimport colors from 'colors';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\nimport { formatter } from 'lightcone/common';\nimport { notifyError, notifySuccess } from 'redux/actions/Notification';\nimport config from 'lightcone/config';\n\nclass WithdrawModal extends React.Component {\n  state = {\n    errorMessage1: '',\n    errorToken: '',\n    errorMessage2: '',\n    loading: false,\n    amount: null,\n    ethBalance: 0,\n    ethEnough: true,\n    validateAmount: true,\n    availableAmount: 0\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.isVisible &&\n      (this.props.dexAccount.account.address !==\n        prevProps.dexAccount.account.address ||\n        this.props.isVisible !== prevProps.isVisible) &&\n      window.wallet\n    ) {\n      const { balances } = this.props.balances;\n      const selectedTokenSymbol = this.props.modalManager.withdrawalToken;\n      (async () => {\n        const ethBalance = await fetchWalletBalance(\n          this.props.dexAccount.account.address,\n          'ETH',\n          this.props.exchange.tokens\n        );\n        const fee = this.getFeeCost();\n        this.setState({\n          ethBalance: ethBalance,\n          ethEnough: fee <= ethBalance\n        });\n      })();\n      const holdAmount = this.getAvailableAmount(selectedTokenSymbol, balances);\n      this.setState({\n        availableAmount: holdAmount,\n        validateAmount:\n          !this.state.amount || Number(this.state.amount) <= holdAmount\n      });\n    }\n\n    if (\n      this.props.isVisible === false &&\n      this.props.isVisible !== prevProps.isVisible\n    ) {\n      this.setState({\n        loading: false,\n        amount: null,\n        validateAmount: true,\n        availableAmount: 0\n      });\n    }\n  }\n\n  handleCurrencyTypeSelect = tokenSymbol => {\n    const amount = this.getAvailableAmount(\n      tokenSymbol,\n      this.props.balances.balances\n    );\n    this.props.showModal(tokenSymbol);\n\n    this.setState({\n      availableAmount: amount,\n      validateAmount: !this.state.amount || Number(this.state.amount) <= amount\n    });\n  };\n\n  // TODO: move to redux. will do the tranformation just after getting the data.\n  getAvailableAmount = (symbol, balances) => {\n    const tokens = this.props.exchange.tokens;\n    const selectedToken = config.getTokenBySymbol(symbol, tokens);\n    const holdBalance = balances.find(\n      ba => ba.tokenId === selectedToken.tokenId\n    );\n    return holdBalance\n      ? config.fromWEI(\n          selectedToken.symbol,\n          formatter\n            .toBig(holdBalance.totalAmount)\n            .minus(holdBalance.frozenAmount),\n          tokens\n        )\n      : 0;\n  };\n\n  getFeeCost = () => {\n    const gasPrice = formatter.fromGWEI(this.props.gasPrice.gasPrice);\n    const withdrawalGas = config.getGasLimitByType('withdraw').gas;\n    const gasCost = gasPrice.times(withdrawalGas);\n    const fee = config.getFeeByType('withdraw', this.props.exchange.onchainFees)\n      .fee;\n\n    return Number(\n      config.fromWEI('ETH', gasCost.plus(fee), this.props.exchange.tokens, {\n        ceil: true\n      })\n    );\n  };\n\n  onAmountValueClick = () => {\n    this.setState({\n      validateAmount: true\n    });\n  };\n\n  onAmountValueChange = value => {\n    const selectedTokenSymbol = this.props.modalManager.withdrawalToken;\n\n    let validateAmount = !value || Number(value) <= this.state.availableAmount;\n\n    // Check amount decimal points\n    let errorMessage1 = '';\n    let errorToken = '';\n    let errorMessage2 = '';\n\n    const { tokens } = this.props.exchange;\n    const token = config.getTokenBySymbol(selectedTokenSymbol, tokens);\n\n    if (token.symbol && validateAmount && value.split('.').length === 2) {\n      var inputPrecision = value.split('.')[1].length;\n      if (\n        inputPrecision > token.decimals ||\n        (parseFloat(value) === 0 && inputPrecision === token.decimals)\n      ) {\n        errorMessage1 = 'Maximum_amount_input_decimal_part_1';\n        errorToken = `${token.decimals}`;\n        errorMessage2 = 'Maximum_input_decimal_part_2';\n        validateAmount = false;\n      }\n    }\n\n    this.setState({\n      amount: value,\n      validateAmount,\n      errorMessage1,\n      errorToken,\n      errorMessage2\n    });\n  };\n\n  validateAmount = () => {\n    const { amount, availableAmount } = this.state;\n    if (\n      amount &&\n      parseFloat(amount) > 0 &&\n      availableAmount >= parseFloat(amount)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  submitWithdraw = () => {\n    this.setState({\n      loading: true\n    });\n\n    // Withdraw\n    let symbol = this.props.modalManager.withdrawalToken;\n\n    (async () => {\n      try {\n        const {\n          tokens,\n          onchainFees,\n          exchangeAddress,\n          chainId\n        } = this.props.exchange;\n\n        await window.wallet.onchainWithdrawal(\n          {\n            exchangeAddress,\n            chainId,\n            token: config.getTokenBySymbol(symbol, tokens),\n            amount: this.state.amount,\n            nonce: this.props.nonce.nonce,\n            gasPrice: this.props.gasPrice.gasPrice,\n            fee: config.getFeeByType('withdraw', onchainFees).fee\n          },\n          true\n        );\n\n        notifySuccess(<I s=\"WithdrawInstructionNotification\" />, 15);\n      } catch (err) {\n        notifyError(<I s=\"WithdrawInstructionNotificationFailed\" />);\n      } finally {\n        this.props.closeModal();\n        this.setState({\n          loading: false\n        });\n      }\n    })();\n  };\n\n  onClick = () => {\n    if (this.validateAmount() === false) {\n      this.setState({\n        validateAmount: false\n      });\n      return;\n    } else {\n      this.setState({\n        validateAmount: true\n      });\n    }\n\n    this.submitWithdraw();\n  };\n\n  enterAmount = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.onClick();\n    }\n  };\n\n  withdrawAll = () => {\n    this.setState({\n      amount: this.state.availableAmount,\n      validateAmount: true\n    });\n  };\n\n  render() {\n    let address = this.props.dexAccount.account.address;\n    const { tokens } = this.props.exchange;\n    const selectedTokenSymbol = this.props.modalManager.withdrawalToken;\n    const selectedToken = config.getTokenBySymbol(selectedTokenSymbol, tokens);\n\n    const options = tokens\n      .filter(token => {\n        return token.symbol !== 'WETH';\n      })\n      .map((token, i) => {\n        const option = {};\n        option.key = token.symbol;\n        option.text = token.symbol + ' - ' + token.name;\n\n        const menuItem = (\n          <Menu.Item\n            key={i}\n            style={{\n              borderBottomStyle: 'solid',\n              borderBottomColor: colors.foreground,\n              borderBottomWidth: '1px'\n            }}\n            onClick={() => {\n              this.handleCurrencyTypeSelect(token.symbol);\n            }}\n          >\n            <span\n              style={{\n                lineHeight: '30px'\n              }}\n            >\n              {token.symbol}\n            </span>\n          </Menu.Item>\n        );\n\n        return menuItem;\n      });\n\n    return (\n      <MyModal\n        width={AppLayout.modalWidth}\n        title={\n          <TextPopupTitle>\n            <I s=\"Make a Withdrawal\" />\n          </TextPopupTitle>\n        }\n        footer={null}\n        maskClosable={false}\n        closeIcon={<FontAwesomeIcon icon={faTimes} />}\n        visible={this.props.isVisible}\n        onCancel={() => this.props.closeModal()}\n      >\n        <Spin\n          spinning={this.state.loading}\n          indicator={\n            <ModalIndicator\n              title=\"metamaskConfirm\"\n              tips={[\n                <div key=\"1\">\n                  <I s=\"metaMaskPendingTxTip\" />\n                </div>\n              ]}\n              imageUrl=\"/assets/images/metamask_pending.png\"\n              marginTop=\"80px\"\n            />\n          }\n        >\n          <Section>\n            <Instruction>\n              <I s=\"WithdrawInstruction_1\" />\n            </Instruction>\n            <ul>\n              <li>\n                <I s=\"WithdrawInstruction_Timing\" />\n                <WhyIcon text=\"TimingWhy\" />\n              </li>\n              <li>\n                <I s=\"WithdrawInstruction_Fee\" /> <WhyIcon text=\"FeeWhy\" />\n              </li>\n            </ul>\n          </Section>\n          <Section>\n            <Group label={<I s=\"My Address\" />}>\n              <AddressDiv>{address}</AddressDiv>\n            </Group>\n            <Group label={<I s=\"Asset\" />}>\n              <AssetDropdown\n                options={options}\n                selected={selectedToken.symbol}\n              />\n            </Group>\n            <Group label={<I s=\"Amount\" />}>\n              <NumericInput\n                decimals={selectedToken.precision}\n                color={\n                  this.state.validateAmount\n                    ? colors.textWhite\n                    : colors.sellPrimary\n                }\n                borderColor={\n                  this.state.validateAmount ? colors.border : colors.sellPrimary\n                }\n                value={this.state.amount}\n                onChange={this.onAmountValueChange}\n                onClick={this.onAmountValueClick}\n                suffix={selectedTokenSymbol.toUpperCase()}\n                fontSize=\"0.9rem\"\n                onKeyDown={this.enterAmount.bind(this)}\n              />\n              {!this.state.ethEnough && (\n                <div\n                  style={{\n                    fontSize: '0.85rem',\n                    color: colors.red,\n                    height: '24px',\n                    fontWeight: '600',\n                    paddingTop: '12px'\n                  }}\n                >\n                  <FontAwesomeIcon\n                    style={{ marginRight: '8px' }}\n                    size=\"1x\"\n                    icon={faExclamationTriangle}\n                  />\n                  <I s=\"Insufficient Ethereum Balance\" />\n                </div>\n              )}\n              {this.state.ethEnough &&\n                this.state.errorMessage1 === '' &&\n                !this.state.validateAmount && (\n                  <div\n                    style={{\n                      fontSize: '0.85rem',\n                      color: colors.red,\n                      height: '24px',\n                      fontWeight: '600',\n                      paddingTop: '12px'\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{ marginRight: '8px' }}\n                      size=\"1x\"\n                      icon={faExclamationTriangle}\n                    />\n                    <I s=\"Insufficient Token Balance\" />\n                  </div>\n                )}\n              {this.state.errorMessage1 !== '' && !this.state.validateAmount && (\n                <div\n                  style={{\n                    fontSize: '0.85rem',\n                    color: colors.red,\n                    height: '24px',\n                    fontWeight: '600',\n                    paddingTop: '12px'\n                  }}\n                >\n                  <FontAwesomeIcon\n                    style={{ marginRight: '8px' }}\n                    size=\"1x\"\n                    icon={faExclamationTriangle}\n                  />\n                  <I s={this.state.errorMessage1} />\n                  {this.state.errorToken}\n                  <I s={this.state.errorMessage2} />\n                </div>\n              )}\n            </Group>\n          </Section>\n          <Section>\n            <LabelValue\n              label={<I s=\"Balance on Exchange\" />}\n              value={this.state.availableAmount}\n              unit={selectedTokenSymbol.toUpperCase()}\n              onClick={() => this.withdrawAll()}\n            />\n            <LabelValue\n              label={<I s=\"Available to Withdraw\" />}\n              value={this.state.availableAmount}\n              unit={selectedTokenSymbol.toUpperCase()}\n            />\n          </Section>\n          <Section>\n            <ActionButton\n              disabled={\n                this.state.amount <= 0 ||\n                !this.state.validateAmount ||\n                this.state.loading ||\n                !this.state.ethEnough\n              }\n              onClick={() => this.onClick()}\n            >\n              <I s=\"Withdraw\" />\n            </ActionButton>\n          </Section>\n        </Spin>\n      </MyModal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    modalManager,\n    dexAccount,\n    balances,\n    nonce,\n    gasPrice,\n    exchange\n  } = state;\n  const isVisible = modalManager.isWithdrawModalVisible;\n  return {\n    isVisible,\n    modalManager,\n    dexAccount,\n    balances,\n    nonce,\n    gasPrice,\n    exchange\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeModal: () => dispatch(showWithdrawModal(false)),\n    showModal: token => dispatch(showWithdrawModal(true, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithdrawModal);\n","import React from 'react';\nimport colors from 'colors';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons/faCircleNotch';\nimport {\n  showDepositModal,\n  showWithdrawModal\n} from 'redux/actions/ModalManager';\n\nimport { DepositOutlineButton, WithdrawOutlineButton } from 'styles/Styles';\nimport { fetchWalletBalance } from 'modals/components/utils';\nimport I from 'components/I';\nimport SimpleTableWidget from 'components/SimpleTableWidget';\n\nclass BalanceTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      balanceOnEthereumDict: {}\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadBalanceOnEthereum();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.balances.balances.length !== this.props.balances.balances.length\n    ) {\n      this.loadBalanceOnEthereum();\n    }\n  }\n\n  // TODO: Have to use other API endpoints to get data\n  loadBalanceOnEthereum() {\n    (async () => {\n      try {\n        const { tokens } = this.props;\n        const balanceOnEthereumDict = {};\n        for (let i = 0; i < tokens.length; i++) {\n          const token = tokens[i];\n          balanceOnEthereumDict[token.symbol] = await fetchWalletBalance(\n            this.props.dexAccount.account.address,\n            token.symbol,\n            tokens\n          );\n        }\n        if (this.mounted) {\n          this.setState({\n            balanceOnEthereumDict\n          });\n        }\n      } catch (error) {}\n    })();\n  }\n\n  columnBuilders = [\n    {\n      label: 'Asset',\n      align: 'left',\n      width: 100,\n      getColValue: balance => {\n        return balance.token.symbol;\n      }\n    },\n    {\n      label: 'Asset Name',\n      align: 'left',\n      width: 200,\n      getColValue: balance => {\n        return <I s={balance.token.name} />;\n      }\n    },\n    {\n      label: 'Balance on Ethereum',\n      align: 'right',\n      getColValue: balance => {\n        if (this.state.balanceOnEthereumDict[balance.token.symbol]) {\n          return this.state.balanceOnEthereumDict[balance.token.symbol];\n        } else {\n          return (\n            <div>\n              <FontAwesomeIcon\n                style={{\n                  width: '14px',\n                  height: '14px'\n                }}\n                color={colors.textDim}\n                icon={faCircleNotch}\n                spin={true}\n              />\n            </div>\n          );\n        }\n      }\n    },\n    {\n      label: 'Balance on Exchange',\n      align: 'right',\n      getColValue: balance => {\n        return balance.totalAmountInString;\n      }\n    },\n    {\n      label: 'Available Balance',\n      align: 'right',\n      getColValue: balance => {\n        return <div>{balance.available}</div>;\n      }\n    },\n    {\n      label: 'Operations',\n      align: 'right',\n      getColValue: balance => {\n        return (\n          <div>\n            <DepositOutlineButton\n              style={{\n                marginRight: '8px'\n              }}\n              onClick={() => {\n                this.props.showDepositModal(true, balance.token.symbol);\n              }}\n            >\n              <I s=\"Deposit\" />\n            </DepositOutlineButton>\n            <WithdrawOutlineButton\n              onClick={() => {\n                this.props.showWithdrawModal(true, balance.token.symbol);\n              }}\n            >\n              <I s=\"Withdraw\" />\n            </WithdrawOutlineButton>\n          </div>\n        );\n      }\n    }\n  ];\n\n  render() {\n    let { balances } = this.props.balances;\n    const tokens = this.props.tokens.filter(token => {\n      return token.symbol !== 'WETH';\n    });\n    balances = balances || [];\n    balances = tokens.map(token => {\n      const balance = balances.find(ba => ba.token.tokenId === token.tokenId);\n      if (balance) {\n        return balance;\n      } else {\n        return {\n          token,\n          totalAmountInString: Number(0).toFixed(token.precision),\n          available: Number(0).toFixed(token.precision)\n        };\n      }\n    });\n    return (\n      <SimpleTableWidget\n        margin={20}\n        emptyText=\"NoBalance\"\n        columnBuilders={this.columnBuilders}\n        rowData={balances}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { dexAccount, balances, exchange } = state;\n  return {\n    dexAccount,\n    balances,\n    tokens: exchange.tokens\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      showDepositModal,\n      showWithdrawModal\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BalanceTable);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport colors from 'colors';\n\nimport { ConfigProvider, Pagination, Table, Tooltip } from 'antd';\nimport Moment from 'moment';\n\nimport {\n  LargeTableContainer,\n  LargeTableRow,\n  LargeTableRowFailed,\n  LargeTableRowProcessed,\n  LargeTableRowProcessing,\n  TextCompactTableHeader\n} from 'styles/Styles';\nimport EmptyTableIndicator from 'components/EmptyTableIndicator';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons/faCheckCircle';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons/faCircleNotch';\nimport { faClock } from '@fortawesome/free-solid-svg-icons/faClock';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons/faExclamationCircle';\n\nimport './BalanceTable.less'; // TODO: remove this dependency\nimport { getEtherscanLink } from 'lightcone/api/localStorgeAPI';\n\nconst StatusFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-right: 4px;\n`;\nclass DepositWithdrawalBaseTable extends React.Component {\n  render() {\n    const customizeRenderEmpty = () => (\n      <EmptyTableIndicator text={this.props.placeHolder} />\n    );\n\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'padding',\n        width: 14\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Asset\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'symbol'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Amount\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'amount'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Fee\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'fee'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Tx Hash\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'txHash',\n        width: 180\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Timestamp\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'date',\n        width: 180\n      },\n      {\n        title: (\n          <TextCompactTableHeader\n            style={{\n              paddingRight: '64px'\n            }}\n          >\n            <I s=\"Status\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'status'\n      }\n    ];\n\n    const data = [];\n    for (let i = 0; i < this.props.data.length; i++) {\n      const transaction = this.props.data[i];\n      var status = '-';\n      if (transaction.status === 'processing') {\n        status = (\n          <Tooltip\n            placement=\"bottom\"\n            overlayStyle={{\n              color: colors.textWhite,\n              fontSize: '0.85rem'\n            }}\n            title={\n              <div>\n                <p>\n                  <I s={'StatusProcessing'} />\n                </p>\n                <p>\n                  <I s={'StatusProcessing2'} />\n                </p>\n              </div>\n            }\n          >\n            <LargeTableRowProcessing style={{ color: colors.highlight }}>\n              <StatusFontAwesomeIcon icon={faCircleNotch} spin />\n              <div>\n                <I s=\"Processing\" />\n              </div>\n            </LargeTableRowProcessing>\n          </Tooltip>\n        );\n      } else if (transaction.status === 'processed') {\n        status = (\n          <LargeTableRowProcessed style={{ color: colors.green }}>\n            <StatusFontAwesomeIcon icon={faCheckCircle} />\n            <div>\n              <I s=\"Succeeded\" />\n            </div>\n          </LargeTableRowProcessed>\n        );\n      } else if (transaction.status === 'failed') {\n        status = (\n          <LargeTableRowFailed style={{ color: colors.red }}>\n            <StatusFontAwesomeIcon icon={faExclamationCircle} />\n            <div>\n              <I s=\"Failed\" />\n            </div>\n          </LargeTableRowFailed>\n        );\n      } else if (transaction.status === 'received') {\n        status = (\n          <Tooltip\n            placement=\"bottom\"\n            overlayStyle={{\n              color: colors.textWhite,\n              fontSize: '0.85rem'\n            }}\n            title={<I s={'StatusConfirming'} />}\n          >\n            <LargeTableRowProcessing style={{ color: colors.orange }}>\n              <StatusFontAwesomeIcon icon={faClock} />\n\n              <div>\n                <I s=\"Confirming\" />\n              </div>\n            </LargeTableRowProcessing>\n          </Tooltip>\n        );\n      }\n      data.push({\n        key: i,\n        symbol: (\n          <LargeTableRow>\n            <I s={transaction.tokenName} />\n          </LargeTableRow>\n        ),\n        amount: (\n          <LargeTableRow>\n            {transaction.amountInUI} {transaction.symbol}\n          </LargeTableRow>\n        ),\n        fee: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim\n            }}\n          >\n            {transaction.feeInUI} ETH\n          </LargeTableRow>\n        ),\n        date: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim\n            }}\n          >\n            {Moment(transaction.timestamp).format('YYYY-MM-DD HH:mm:ss')}\n          </LargeTableRow>\n        ),\n        txHash: (\n          <LargeTableRow>\n            <a\n              href={`${getEtherscanLink(this.props.chainId)}/tx/${\n                transaction.txHash\n              }`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {transaction.txHashInUI}\n            </a>\n          </LargeTableRow>\n        ),\n        status: (\n          <div\n            style={{\n              paddingRight: '14px'\n            }}\n          >\n            {status}\n          </div>\n        )\n      });\n    }\n\n    const hasPagination = this.props.total > this.props.limit;\n\n    return (\n      <LargeTableContainer className={'my-table'}>\n        <ConfigProvider renderEmpty={data.length === 0 && customizeRenderEmpty}>\n          <Table\n            style={{\n              borderStyle: 'solid',\n              borderWidth: '1px',\n              borderColor: colors.foreground,\n              height: `${data.length * 34 + 35}px`,\n              minHeight: '500px'\n            }}\n            size=\"middle\"\n            columns={columns}\n            dataSource={data}\n            pagination={false}\n            scroll={{\n              y: `${data.length * 34}px`\n            }}\n          />\n          {hasPagination ? (\n            <Pagination\n              style={{\n                padding: '30px 0px 30px 0px',\n                background: colors.background,\n                textAlign: 'center'\n              }}\n              size=\"\"\n              total={this.props.total}\n              current={this.props.current}\n              onChange={this.props.onChange}\n              pageSize={this.props.limit}\n            />\n          ) : (\n            <div />\n          )}\n        </ConfigProvider>\n      </LargeTableContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { exchange } = state;\n  return { chainId: exchange.chainId };\n};\n\nexport default connect(mapStateToProps, null)(DepositWithdrawalBaseTable);\n","import { connect } from 'react-redux';\nimport { fetchDeposits, fetchWithdrawals } from 'redux/actions/MyAccountPage';\nimport React from 'react';\n\nimport { compareDexAccounts } from 'components/services/utils';\nimport DepositWithdrawalBaseTable from 'pages/account/components/DepositWithdrawalBaseTable';\n\nimport './BalanceTable.less'; // TODO: remove this dependency\n\nclass DepositWithdrawalTable extends React.Component {\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.dexAccount &&\n      prevProps.dexAccount.account &&\n      this.props.dexAccount &&\n      this.props.dexAccount.account &&\n      this.props.dexAccount.account.accountId &&\n      compareDexAccounts(prevProps.dexAccount, this.props.dexAccount) ===\n        false &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.loadData();\n    }\n\n    if (prevProps.tabs.type4 !== this.props.tabs.type4) {\n      this.loadData();\n    }\n  }\n\n  loadData(offset = -1) {\n    try {\n      const {\n        dexAccount,\n        tokens,\n        balances,\n        fetchDeposits,\n        fetchWithdrawals\n      } = this.props;\n      if (\n        !!dexAccount.account.accountId &&\n        !!dexAccount.account.keyPairCipherText &&\n        dexAccount.account.apiKey\n      ) {\n        if (this.props.type === 'deposit') {\n          fetchDeposits(\n            balances.depositLimit,\n            offset !== -1 ? offset : balances.depositOffset,\n            dexAccount.account.accountId,\n            dexAccount.account.apiKey,\n            tokens\n          );\n        } else {\n          fetchWithdrawals(\n            balances.withdrawalLimit,\n            offset !== -1 ? offset : balances.withdrawalOffset,\n            dexAccount.account.accountId,\n            dexAccount.account.apiKey,\n            tokens\n          );\n        }\n      }\n    } catch (err) {}\n  }\n\n  onChange = page => {\n    const offset =\n      this.props.type === 'deposit'\n        ? this.props.balances.depositLimit * (page - 1)\n        : this.props.balances.withdrawalLimit * (page - 1);\n    this.loadData(offset);\n  };\n\n  render() {\n    const { type, balances } = this.props;\n    let data;\n    let total;\n    let limit;\n    let current;\n\n    if (type === 'deposit') {\n      data = balances.deposits;\n      total = balances.depositTotalNum;\n      limit = balances.depositLimit;\n      current = Math.floor(balances.depositOffset / limit) + 1;\n    } else {\n      data = balances.withdrawals;\n      total = balances.withdrawalTotalNum;\n      limit = balances.withdrawalLimit;\n      current = Math.floor(balances.withdrawalOffset / limit) + 1;\n    }\n\n    return (\n      <DepositWithdrawalBaseTable\n        placeHolder={type === 'deposit' ? 'NoDeposits' : 'NoWithdrawals'}\n        data={data}\n        total={total}\n        limit={limit}\n        current={current}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { dexAccount, balances, tabs, exchange } = state;\n  return { dexAccount, balances, tabs, tokens: exchange.tokens };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDeposits: (limit, offset, accountId, apiKey, tokens) =>\n      dispatch(fetchDeposits(limit, offset, accountId, apiKey, tokens)),\n    fetchWithdrawals: (limit, offset, accountId, apiKey, tokens) =>\n      dispatch(fetchWithdrawals(limit, offset, accountId, apiKey, tokens))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DepositWithdrawalTable);\n","import { Layout, Spin } from 'antd';\nimport I from 'components/I';\nimport React from 'react';\n// Shared componenets\nimport AppLayout from 'AppLayout';\nimport PageMobile from 'components/MobileIndicator';\nimport SecondaryNavBar from 'components/SecondaryNavBar';\nimport colors from 'colors';\n\nconst SimpleSecondaryPageLayout = ({\n  navbarConfig,\n  children,\n  pageId,\n  loading\n}) => {\n  return (\n    <Layout\n      style={{\n        height: AppLayout.simpleSecondaryPageHeight,\n        backgroundColor: colors.background\n      }}\n    >\n      <Layout.Content\n        width=\"100%\"\n        style={{\n          padding: '0px',\n          backgroundColor: colors.background\n        }}\n      >\n        <div\n          className=\"desktop-layout\"\n          style={{\n            padding: '0px',\n            backgroundColor: colors.background\n          }}\n        >\n          <SecondaryNavBar selected={pageId} subPages={navbarConfig} />\n          <div\n            style={{\n              paddingLeft: '60px',\n              paddingRight: '60px',\n              paddingTop: '24px'\n            }}\n          >\n            <Spin\n              spinning={loading ? true : false}\n              size=\"large\"\n              indicator={\n                <img\n                  alt=\"loading...\"\n                  src=\"/assets/images/bars.svg\"\n                  style={{ opacity: '1' }}\n                />\n              }\n              tip={\n                <div style={{ fontSize: '0.85rem', color: colors.textDim }}>\n                  <I s=\"Loading...\" />\n                </div>\n              }\n            >\n              {children}\n            </Spin>\n          </div>\n        </div>\n        <div className=\"mobile-layout\">\n          <PageMobile />\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default SimpleSecondaryPageLayout;\n","// React and third-partycomponents\n\nimport React from 'react';\n\nimport BalanceTable from './components/BalanceTable';\nimport DepositWithdrawalTable from './components/DepositWithdrawalTable';\nimport SimpleSecondaryPageLayout from '../components/SimpleSecondaryPageLayout';\n\nconst accountSubPages = [\n  {\n    id: 'balances',\n    label: 'Balances',\n    url: '/account/balances'\n  },\n  {\n    id: 'deposits',\n    label: 'Deposits',\n    url: '/account/deposits'\n  },\n  {\n    id: 'withdrawals',\n    label: 'Withdrawals',\n    url: '/account/withdrawals'\n  }\n];\n\nconst MyBalancesPage = () => {\n  return (\n    <SimpleSecondaryPageLayout pageId=\"balances\" navbarConfig={accountSubPages}>\n      <BalanceTable />\n    </SimpleSecondaryPageLayout>\n  );\n};\n\nconst MyDepositsPage = () => {\n  return (\n    <SimpleSecondaryPageLayout pageId=\"deposits\" navbarConfig={accountSubPages}>\n      <DepositWithdrawalTable type=\"deposit\" />\n    </SimpleSecondaryPageLayout>\n  );\n};\n\nconst MyWithdrawalsPage = () => {\n  return (\n    <SimpleSecondaryPageLayout\n      pageId=\"withdrawals\"\n      navbarConfig={accountSubPages}\n    >\n      <DepositWithdrawalTable type=\"withdrawals\" />\n    </SimpleSecondaryPageLayout>\n  );\n};\n\nexport { MyBalancesPage, MyDepositsPage, MyWithdrawalsPage };\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport colors from 'colors';\n\nimport {\n  CancelOrderButton,\n  LargeTableContainer,\n  LargeTableRow,\n  LargeTableRowFailed,\n  LargeTableRowProcessed,\n  LargeTableRowStatus,\n  TextCompactTableHeader\n} from 'styles/Styles';\nimport { ConfigProvider, Pagination, Table } from 'antd';\nimport { cancelOrders } from 'lightcone/api/v1/orders';\nimport { notifyError, notifySuccess } from 'redux/actions/Notification';\nimport EmptyTableIndicator from 'components/EmptyTableIndicator';\nimport Moment from 'moment';\n\nimport 'pages/account/components/BalanceTable.less';\n\nclass OrderBaseTable extends React.Component {\n  onClickCancel = order => {\n    // Send cancel request...\n    (async () => {\n      try {\n        const apiKey = this.props.dexAccount.account.apiKey;\n        // Use password to decode\n        if (this.props.dexAccount.password === null) {\n          throw new Error(\n            'Password is not correct! Please try again or reset Password.'\n          );\n        }\n        const signed = window.wallet.submitFlexCancel(\n          order.hash,\n          order.clientOrderId\n        );\n\n        await cancelOrders(\n          this.props.dexAccount.account.accountId,\n          signed.hash,\n          signed.clientOrderId,\n          signed.signature,\n          apiKey\n        );\n        notifySuccess(<I s=\"Your order has been cancelled.\" />);\n      } catch (err) {\n        notifyError(<I s=\"Failed to cancel your order.\" />);\n      }\n    })();\n  };\n\n  render() {\n    const customizeRenderEmpty = () => (\n      <EmptyTableIndicator text={'NoHistoryOrders'} />\n    );\n\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'padding',\n        width: 14\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Side\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'side'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Filled_Rate\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'filled'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Market\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'market'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Size\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'size'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Price\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'price'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Fee\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'fee'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Timestamp\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'date',\n        width: 180\n      },\n      {\n        title: (\n          <TextCompactTableHeader\n            style={{\n              paddingRight: '14px'\n            }}\n          >\n            <I s=\"Status/Operations\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'status'\n      }\n    ];\n\n    const data = [];\n    for (let i = 0; i < this.props.data.length; i++) {\n      const order = this.props.data[i];\n\n      var status = '-';\n      if (order.status === 'processing' || order.status === 'waiting') {\n        status = (\n          <CancelOrderButton\n            onClick={e => {\n              e.preventDefault();\n              this.onClickCancel(order);\n            }}\n          >\n            <I s=\"Cancel\" />\n          </CancelOrderButton>\n        );\n      } else if (order.status === 'processed') {\n        status = (\n          <LargeTableRowProcessed>\n            <div>\n              <I s=\"Filled\" />\n            </div>\n          </LargeTableRowProcessed>\n        );\n      } else if (order.status === 'failed') {\n        status = (\n          <LargeTableRowFailed>\n            <div>\n              <I s=\"Failed\" />\n            </div>\n          </LargeTableRowFailed>\n        );\n      } else if (\n        order.status === 'cancelling' ||\n        order.status === 'cancelled'\n      ) {\n        status = (\n          <LargeTableRowStatus>\n            <div>\n              <I s=\"Cancelled\" />\n            </div>\n          </LargeTableRowStatus>\n        );\n      } else if (order.status === 'expired') {\n        status = (\n          <LargeTableRowStatus>\n            <div>\n              <I s=\"Expired\" />\n            </div>\n          </LargeTableRowStatus>\n        );\n      }\n      data.push({\n        key: i,\n        side: (\n          <LargeTableRow\n            style={{\n              color:\n                order.side === 'BUY'\n                  ? this.props.colorManager.buyPrimary\n                  : this.props.colorManager.sellPrimary\n            }}\n          >\n            {order.side === 'BUY' ? <I s=\"Buy\" /> : <I s=\"Sell\" />}\n          </LargeTableRow>\n        ),\n        market: <LargeTableRow>{order.market}</LargeTableRow>,\n        size: <LargeTableRow>{order.sizeInString} </LargeTableRow>,\n        filled: (\n          <LargeTableRow\n            style={{\n              color: colors.textWhite\n            }}\n          >\n            {order.filled}\n          </LargeTableRow>\n        ),\n        price: (\n          <LargeTableRow\n            style={{\n              color:\n                order.side === 'BUY'\n                  ? this.props.colorManager.buyPrimary\n                  : this.props.colorManager.sellPrimary\n            }}\n          >\n            {order.price}\n          </LargeTableRow>\n        ),\n        fee: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim\n            }}\n          >\n            {order.feeInString}{' '}\n            {order.feeInString !== '-'\n              ? order.side === 'BUY'\n                ? order.market.split('-')[0]\n                : order.market.split('-')[1]\n              : ''}\n          </LargeTableRow>\n        ),\n        date: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim\n            }}\n          >\n            {Moment(order.createdAt).format('YYYY-MM-DD HH:mm:ss')}\n          </LargeTableRow>\n        ),\n        status: (\n          <div\n            style={{\n              textAlign: 'right',\n              paddingRight: '14px'\n            }}\n          >\n            {status}\n          </div>\n        )\n      });\n    }\n\n    const hasPagination = this.props.total > this.props.limit;\n\n    return (\n      <LargeTableContainer className={'my-table'}>\n        <ConfigProvider renderEmpty={data.length === 0 && customizeRenderEmpty}>\n          <Table\n            style={{\n              borderStyle: 'none',\n              borderWidth: '0px',\n              height: `${data.length * 34 + 35}px`,\n              minHeight: '500px'\n            }}\n            size=\"middle\"\n            columns={columns}\n            dataSource={data}\n            pagination={false}\n            scroll={{\n              y: `${data.length * 34}px`\n            }}\n          />\n          {hasPagination ? (\n            <Pagination\n              style={{\n                padding: '30px 0px 30px 0px',\n                background: colors.background,\n                textAlign: 'center'\n              }}\n              size=\"\"\n              total={this.props.total}\n              current={this.props.current}\n              onChange={this.props.onChange}\n              pageSize={this.props.limit}\n            />\n          ) : (\n            <div />\n          )}\n        </ConfigProvider>\n      </LargeTableContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { colorManager, dexAccount, myOrders, market } = state;\n  return { colorManager, dexAccount, myOrders, market };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderBaseTable);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport OrderBaseTable from './OrderBaseTable';\n\nimport { LOGGED_IN } from 'redux/actions/DexAccount';\nimport { compareDexAccounts } from 'components/services/utils';\nimport { fetchMyHistoryOrders } from 'redux/actions/MyOrderPage';\n\nclass HistoryOrdersTable extends React.Component {\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (this.props.exchange.isInitialized !== prevProps.exchange.isInitialized ||\n        !compareDexAccounts(prevProps.dexAccount, this.props.dexAccount)) &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.loadData();\n    }\n  }\n\n  loadData(offset = -1) {\n    const {\n      dexAccount,\n      exchange,\n      myOrderPage,\n      fetchMyHistoryOrders\n    } = this.props;\n\n    if (\n      exchange.isInitialized &&\n      !!dexAccount.account.accountId &&\n      dexAccount.account.state === LOGGED_IN &&\n      dexAccount.account.apiKey\n    ) {\n      fetchMyHistoryOrders(\n        dexAccount.account.accountId,\n        myOrderPage.historyOrdersLimit,\n        offset !== -1 ? offset : myOrderPage.historyOrdersOffset,\n        dexAccount.account.apiKey,\n        exchange.tokens\n      );\n    }\n  }\n\n  onChange = page => {\n    const offset = this.props.myOrderPage.historyOrdersLimit * (page - 1);\n    this.loadData(offset);\n  };\n\n  render() {\n    const current =\n      Math.floor(\n        this.props.myOrderPage.historyOrdersOffset /\n          this.props.myOrderPage.historyOrdersLimit\n      ) + 1;\n    return (\n      <OrderBaseTable\n        placeHolder=\"NoHistoryOrders\"\n        data={this.props.myOrderPage.historyOrders}\n        total={this.props.myOrderPage.historyOrdersTotalNum}\n        limit={this.props.myOrderPage.historyOrdersLimit}\n        offset={this.props.myOrderPage.historyOrdersOffset}\n        current={current}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { myOrderPage, exchange, dexAccount } = state;\n  return { myOrderPage, exchange, dexAccount };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMyHistoryOrders: (accountId, limit, offset, apiKey, tokens) =>\n      dispatch(fetchMyHistoryOrders(accountId, limit, offset, apiKey, tokens))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryOrdersTable);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport colors from 'colors';\n\nimport { ConfigProvider, Pagination, Table } from 'antd';\nimport Moment from 'moment';\n\nimport {\n  LargeTableContainer,\n  LargeTableRow,\n  TextCompactTableHeader\n} from 'styles/Styles';\nimport EmptyTableIndicator from 'components/EmptyTableIndicator';\n\nimport { compareDexAccounts } from 'components/services/utils';\nimport { fetchUserTransactions } from 'redux/actions/MyOrderPage';\n\nimport { LOGGED_IN } from 'redux/actions/DexAccount';\n\nimport 'pages/account/components/BalanceTable.less';\n\nclass HistoryTradesTable extends React.Component {\n  componentDidMount() {\n    try {\n      this.loadData();\n    } catch (error) {}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (this.props.exchange.isInitialized !== prevProps.exchange.isInitialized ||\n        !compareDexAccounts(prevProps.dexAccount, this.props.dexAccount)) &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.loadData();\n    }\n  }\n\n  loadData(offset = -1) {\n    const {\n      dexAccount,\n      exchange,\n      myOrderPage,\n      fetchUserTransactions\n    } = this.props;\n\n    if (\n      exchange.isInitialized &&\n      !!dexAccount.account.accountId &&\n      dexAccount.account.state === LOGGED_IN &&\n      dexAccount.account.apiKey\n    ) {\n      fetchUserTransactions(\n        dexAccount.account.accountId,\n        myOrderPage.transactionsLimit,\n        offset !== -1 ? offset : myOrderPage.transactionsOffset,\n        dexAccount.account.apiKey,\n        exchange.tokens\n      );\n    }\n  }\n\n  onChange = page => {\n    const offset = this.props.myOrderPage.transactionsLimit * (page - 1);\n    this.loadData(offset);\n  };\n\n  render() {\n    const current =\n      Math.floor(\n        this.props.myOrderPage.transactionsOffset /\n          this.props.myOrderPage.transactionsLimit\n      ) + 1;\n\n    const customizeRenderEmpty = () => (\n      <EmptyTableIndicator text={'NoHistoryOrders'} />\n    );\n\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'padding',\n        width: 14\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Side\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'side'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Market\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'market'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Filled Size\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'size'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Actual Settlement Price\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'price'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Fee\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'fee'\n      },\n      {\n        title: (\n          <TextCompactTableHeader\n            style={{\n              paddingRight: '14px'\n            }}\n          >\n            <I s=\"Timestamp\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'date',\n        width: 180\n      }\n    ];\n\n    const data = [];\n    for (let i = 0; i < this.props.myOrderPage.transactions.length; i++) {\n      const order = this.props.myOrderPage.transactions[i];\n\n      data.push({\n        key: i,\n        side: (\n          <LargeTableRow\n            style={{\n              color:\n                order.side === 'BUY'\n                  ? this.props.colorManager.buyPrimary\n                  : this.props.colorManager.sellPrimary\n            }}\n          >\n            {order.side === 'BUY' ? <I s=\"Buy\" /> : <I s=\"Sell\" />}\n          </LargeTableRow>\n        ),\n        market: <LargeTableRow>{order.market}</LargeTableRow>,\n        size: (\n          <LargeTableRow>\n            {order.sizeInString} {order.market.split('-')[0]}\n          </LargeTableRow>\n        ),\n        price: (\n          <LargeTableRow\n            style={{\n              color:\n                order.side === 'BUY'\n                  ? this.props.colorManager.buyPrimary\n                  : this.props.colorManager.sellPrimary\n            }}\n          >\n            {Number(order.price)} {order.market.split('-')[1]}\n          </LargeTableRow>\n        ),\n        fee: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim\n            }}\n          >\n            {order.feeInString}\n            {order.side === 'BUY'\n              ? order.market.split('-')[0]\n              : order.market.split('-')[1]}\n          </LargeTableRow>\n        ),\n        date: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim,\n              textAlign: 'right',\n              paddingRight: '14px'\n            }}\n          >\n            {Moment(order.timestamp).format('YYYY-MM-DD HH:mm:ss')}\n          </LargeTableRow>\n        )\n      });\n    }\n\n    const hasPagination =\n      this.props.myOrderPage.transactionsTotalNum >\n      this.props.myOrderPage.transactionsLimit;\n\n    return (\n      <LargeTableContainer className={'my-table'}>\n        <ConfigProvider renderEmpty={data.length === 0 && customizeRenderEmpty}>\n          <Table\n            style={{\n              borderStyle: 'none',\n              borderWidth: '0px',\n              height: `${this.props.myOrderPage.transactions.length * 34 +\n                35}px`,\n              minHeight: '500px'\n            }}\n            size=\"middle\"\n            columns={columns}\n            dataSource={data}\n            pagination={false}\n            scroll={{\n              y: `${this.props.myOrderPage.transactions.length * 34}px`\n            }}\n          />\n          {hasPagination ? (\n            <Pagination\n              style={{\n                padding: '30px 0px 30px 0px',\n                background: colors.background,\n                textAlign: 'center'\n              }}\n              size=\"\"\n              total={this.props.myOrderPage.transactionsTotalNum}\n              current={current}\n              onChange={this.onChange}\n              pageSize={this.props.myOrderPage.transactionsLimit}\n            />\n          ) : (\n            <div />\n          )}\n        </ConfigProvider>\n      </LargeTableContainer>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { colorManager, dexAccount, myOrderPage, exchange } = state;\n  return { colorManager, dexAccount, myOrderPage, exchange };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserTransactions: (accountId, limit, offset, apiKey, tokens) =>\n      dispatch(fetchUserTransactions(accountId, limit, offset, apiKey, tokens))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryTradesTable);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { LOGGED_IN } from 'redux/actions/DexAccount';\nimport { compareDexAccounts } from 'components/services/utils';\nimport { fetchMyOpenOrders } from 'redux/actions/MyOrderPage';\nimport OrderBaseTable from './OrderBaseTable';\n\nclass OpenOrdersTable extends React.Component {\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (this.props.exchange.isInitialized !== prevProps.exchange.isInitialized ||\n        !compareDexAccounts(prevProps.dexAccount, this.props.dexAccount)) &&\n      this.props.dexAccount.account.apiKey\n    ) {\n      this.loadData();\n    }\n  }\n\n  loadData(offset = -1) {\n    const { dexAccount, exchange, myOrderPage, fetchMyOpenOrders } = this.props;\n\n    if (\n      exchange.isInitialized &&\n      !!dexAccount.account.accountId &&\n      dexAccount.account.state === LOGGED_IN &&\n      dexAccount.account.apiKey\n    ) {\n      fetchMyOpenOrders(\n        dexAccount.account.accountId,\n        myOrderPage.openOrdersLimit,\n        offset !== -1 ? offset : myOrderPage.openOrdersOffset,\n        dexAccount.account.apiKey,\n        exchange.tokens\n      );\n    }\n  }\n\n  onChange = page => {\n    const offset = this.props.myOrderPage.openOrdersLimit * (page - 1);\n    this.loadData(offset);\n  };\n\n  render() {\n    const current =\n      Math.floor(\n        this.props.myOrderPage.openOrdersOffset /\n          this.props.myOrderPage.openOrdersLimit\n      ) + 1;\n\n    return (\n      <OrderBaseTable\n        placeHolder=\"NoOpenOrders\"\n        data={this.props.myOrderPage.openOrders}\n        total={this.props.myOrderPage.openOrdersTotalNum}\n        limit={this.props.myOrderPage.openOrdersLimit}\n        offset={this.props.myOrderPage.openOrdersOffset}\n        current={current}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { myOrderPage, exchange, dexAccount } = state;\n  return { myOrderPage, exchange, dexAccount };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMyOpenOrders: (accountId, limit, offset, apiKey, tokens) =>\n      dispatch(fetchMyOpenOrders(accountId, limit, offset, apiKey, tokens))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenOrdersTable);\n","import React from 'react';\n\nimport HistoryOrdersTable from './components/HistoryOrdersTable';\nimport HistoryTradesTable from './components/HistoryTradesTable';\nimport OpenOrdersTable from './components/OpenOrdersTable';\nimport SimpleSecondaryPageLayout from '../components/SimpleSecondaryPageLayout';\n\nconst orderSubPages = [\n  {\n    id: 'open-orders',\n    label: 'Open Orders',\n    url: '/orders/open-orders'\n  },\n  {\n    id: 'order-history',\n    label: 'Order History',\n    url: '/orders/order-history'\n  },\n  {\n    id: 'trade-history',\n    label: 'Trades',\n    url: '/orders/trade-history'\n  }\n];\n\nconst MyOpenOrdersPage = () => {\n  return (\n    <SimpleSecondaryPageLayout\n      pageId=\"open-orders\"\n      navbarConfig={orderSubPages}\n    >\n      <OpenOrdersTable />\n    </SimpleSecondaryPageLayout>\n  );\n};\n\nconst MyOrderHistoryPage = () => {\n  return (\n    <SimpleSecondaryPageLayout\n      pageId=\"order-history\"\n      navbarConfig={orderSubPages}\n    >\n      <HistoryOrdersTable />\n    </SimpleSecondaryPageLayout>\n  );\n};\n\nconst MyTradesPage = () => {\n  return (\n    <SimpleSecondaryPageLayout\n      pageId=\"trade-history\"\n      navbarConfig={orderSubPages}\n    >\n      <HistoryTradesTable />\n    </SimpleSecondaryPageLayout>\n  );\n};\n\nexport { MyOpenOrdersPage, MyOrderHistoryPage, MyTradesPage };\n","import { Layout } from 'antd';\nimport { Scroller } from 'styles/Styles';\nimport { connect } from 'react-redux';\n\nimport AppLayout from 'AppLayout';\n\nimport React from 'react';\n\nimport colors from 'colors';\nconst { Content, Sider } = Layout;\n\nclass LegalTemplate extends React.Component {\n  render() {\n    return (\n      <div>\n        <Layout\n          hasSider\n          style={{\n            height: AppLayout.simpleSecondaryPageHeight\n          }}\n        >\n          <Sider\n            width={AppLayout.tradePanelWidth}\n            style={{\n              borderTop: '1px solid ' + colors.foreground,\n              padding: '0px',\n              background: colors.sidePanelBackground,\n              borderStyle: 'none'\n            }}\n            trigger={null}\n            breakpoint=\"sm\"\n            collapsedWidth=\"0\"\n            onBreakpoint={broken => {}}\n            onCollapse={(collapsed, type) => {\n              this.props.updateColumns();\n            }}\n          >\n            <Scroller\n              style={{\n                borderTop: '1px solid ' + colors.foreground\n              }}\n            >\n              {this.props.navigation}\n            </Scroller>\n          </Sider>\n          <Content\n            width=\"100%\"\n            style={{\n              backgroundColor: colors.background,\n              borderLeftStyle: 'none'\n            }}\n          >\n            <div\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                width: '740px',\n                overflow: 'scroll',\n                height: '100%',\n                background:\n                  'url(/assets/images/bars.svg) center center no-repeat',\n                backgroundSize: '40px 40px',\n                backgroundColor: colors.background\n              }}\n            >\n              <iframe\n                title=\"termly\"\n                src={this.props.src}\n                frameBorder=\"0\"\n                style={{\n                  overflow: 'hidden',\n                  height: '100%',\n                  width: '100%'\n                }}\n              ></iframe>\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { layoutManager } = state;\n  return { layoutManager };\n};\n\nexport default connect(mapStateToProps, null)(LegalTemplate);\n","import {\n  MenuFontAwesomeIcon,\n  SideBarButton,\n  SideBarGroupLabel\n} from 'components/SideBarDrawer';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons/faFileAlt';\nimport { history } from 'redux/configureStore';\nimport I from 'components/I';\nimport LegalTemplate from './components/LegalTemplate';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst SideBarButtonAlt = styled(SideBarButton)`\n  &[disabled],\n  &[disabled]:hover {\n    background-color: ${colors.foreground}!important;\n    color: ${colors.textBright}!important;\n  }\n`;\nconst SideNavigation = ({ current }) => (\n  <div style={{ padding: '24px 0' }}>\n    <SideBarGroupLabel>\n      <I s=\"Legal Documents\" />\n    </SideBarGroupLabel>\n    <SideBarButtonAlt\n      disabled={current === 'terms'}\n      onClick={() => history.push('/legal/terms')}\n    >\n      <MenuFontAwesomeIcon icon={faFileAlt} />\n      <I s=\"Terms of Use\" />\n    </SideBarButtonAlt>\n\n    <SideBarButtonAlt\n      disabled={current === 'privacy'}\n      onClick={() => history.push('/legal/privacy-policy')}\n    >\n      <MenuFontAwesomeIcon icon={faFileAlt} />\n      <I s=\"Privacy Policy\" />\n    </SideBarButtonAlt>\n\n    <SideBarButtonAlt\n      disabled={current === 'cookie'}\n      onClick={() => history.push('/legal/cookie-policy')}\n    >\n      <MenuFontAwesomeIcon icon={faFileAlt} />\n      <I s=\"Cookie Policy\" />\n    </SideBarButtonAlt>\n\n    <SideBarButtonAlt\n      disabled={current === 'disclaimer'}\n      onClick={() => history.push('/legal/disclaimer')}\n    >\n      <MenuFontAwesomeIcon icon={faFileAlt} />\n      <I s=\"Disclaimer\" />\n    </SideBarButtonAlt>\n\n    <div\n      style={{\n        fontSize: '0.8rem',\n\n        color: colors.textDim,\n        padingTop: '24px',\n        margin: '24px'\n      }}\n    >\n      <I s=\"NoChineseDocument\" />\n    </div>\n  </div>\n);\n\nconst TermsPage = () => {\n  return (\n    <LegalTemplate\n      navigation={<SideNavigation current=\"terms\" />}\n      src=\"https://app.termly.io/document/terms-of-use-for-website/a3ba9520-8d44-4f27-aafa-e8541c4fbe41\"\n    />\n  );\n};\n\nconst DisclaimerPage = () => {\n  return (\n    <LegalTemplate\n      navigation={<SideNavigation current=\"disclaimer\" />}\n      src=\"https://app.termly.io/document/disclaimer/c2e3b92e-6bb5-4f42-9582-a887ceb92742\"\n    />\n  );\n};\n\nconst PrivacyPolicyPage = () => {\n  return (\n    <LegalTemplate\n      navigation={<SideNavigation current=\"privacy\" />}\n      src=\"https://app.termly.io/document/privacy-policy/740b0507-cd76-496c-8109-5eb68fc24aba\"\n    />\n  );\n};\n\nconst CookiePolicyPage = () => {\n  return (\n    <LegalTemplate\n      navigation={<SideNavigation current=\"cookie\" />}\n      src=\"https://app.termly.io/document/cookie-policy/b1750f23-1855-4923-9a4a-88904894b2c6\"\n    />\n  );\n};\n\nexport { TermsPage, DisclaimerPage, PrivacyPolicyPage, CookiePolicyPage };\n","import { Layout } from 'antd';\nimport { Scroller } from 'styles/Styles';\nimport { connect } from 'react-redux';\nimport { getLanguage } from 'lightcone/api/localStorgeAPI';\nimport AppLayout from 'AppLayout';\n\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport colors from 'colors';\nimport styled from 'styled-components';\nconst { Content, Sider } = Layout;\n\nconst MarkdownWrapper = styled.div`\n  padding: 64px 40px 0  40px;\n  font-family: Montserrat, sans-serif;\n  color: ${colors.textWhiteBulk};\n  font-size: 1rem;\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    font-weight: 600;\n    color: ${colors.textWhite};\n  }\n  h1 {\n    padding-top: 20px;\n    font-size: 36px;\n    text-transform: uppercase;\n    margin-bottom: 2rem;\n    color: ${colors.textBright}\n  }\n  h2 {\n    text-transform: uppercase;\n    font-size: 26px;\n    margin-top: 2.4rem;\n    color: ${colors.theme}\n  }\n  h3 {\n    margin-top: 2rem;\n    font-size: 18px;\n    color: ${colors.textWhite}\n  }\n\n  blockquote {\n    color: ${colors.textDim}\n    font-style: italic;\n    border-left: 2px solid ${colors.textDim}\n    padding: 4px 16px 4px 16px;\n  }\n\n  mark {\n    background: transparent;\n    color: ${colors.green}\n  }\n\n  pre {\n    font-family: monospace !important;\n    color: ${colors.orange};\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 4px;\n    font-size: 0.85rem;\n    padding: 16px 8px;\n  }\n\n  hr {\n    margin: 16px 0;\n    border-color: ${colors.sidePanelBackground};\n  }\n\n  img {\n    max-width: 640px;\n  }\n\n  table {\n    background: ${colors.foreground}\n    margin: 24px auto;\n    font-size: 0.9rem;\n    min-width: 100%;\n  }\n\n  thead {\n    background: linear-gradient(\n        180deg,\n        rgba(46, 47, 74, 1) 0%,\n        rgba(37, 38, 59, 1) 100%\n      );\n\n  }\n\n  thead > tr> th {\n     color: ${colors.textDim};\n     font-weight: normal;\n  }\n\n  tbody {\n    min-width: 80%;\n    border: 1px solid ${colors.border}\n  }\n\n  td, th {\n    padding: 8px 12px;\n  }\n\n  tr {\n    border-bottom: 1px solid ${colors.border}\n  }\n\n  tbody> tr:hover  > td{\n    color: ${colors.textBright}\n    background: ${colors.lightForeground};\n  }\n\n  td {\n    color: ${colors.textWhite}\n  }\n\n  ul, ol {\n    padding-inline-start: 18px;\n  }\n`;\n\nclass MakrdownPage extends React.Component {\n  state = {\n    markdown: '',\n    loading: true\n  };\n\n  componentDidMount() {\n    const url = `/assets/markdown/${getLanguage()}/${this.props.fileName}`;\n    fetch(url)\n      .then(r => r.text())\n      .then(text => {\n        this.setState({\n          markdown: text,\n          loading: false\n        });\n      });\n  }\n\n  getContainerBackground() {\n    return this.state.loading\n      ? 'url(/assets/images/bars.svg) center center no-repeat'\n      : 'none';\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout\n          hasSider\n          style={{\n            height: AppLayout.simpleSecondaryPageHeight\n          }}\n        >\n          <Sider\n            width={AppLayout.tradePanelWidth}\n            style={{\n              borderTop: '1px solid ' + colors.foreground,\n              padding: '0px',\n              background: colors.sidePanelBackground,\n              borderStyle: 'none'\n            }}\n            trigger={null}\n            breakpoint=\"sm\"\n            collapsedWidth=\"0\"\n            onBreakpoint={broken => {}}\n            onCollapse={(collapsed, type) => {\n              this.props.updateColumns();\n            }}\n          >\n            <Scroller\n              style={{\n                borderTop: '1px solid ' + colors.foreground\n              }}\n            >\n              {this.props.navigation}\n            </Scroller>\n          </Sider>\n          <Content\n            width=\"100%\"\n            style={{\n              backgroundColor: colors.background,\n              borderLeftStyle: 'none'\n            }}\n          >\n            <div\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                width: '740px',\n                overflow: 'scroll',\n                height: '100%',\n                background: this.getContainerBackground(),\n                backgroundSize: '40px 40px'\n              }}\n            >\n              <MarkdownWrapper>\n                <ReactMarkdown\n                  escapeHtml={false}\n                  source={this.state.markdown}\n                />\n              </MarkdownWrapper>\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { layoutManager } = state;\n  return { layoutManager };\n};\n\nexport default connect(mapStateToProps, null)(MakrdownPage);\n","import { history } from 'redux/configureStore';\nimport I from 'components/I';\nimport MakrdownPage from './components/MarkdownPage';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport {\n  MenuFontAwesomeIcon,\n  SideBarButton,\n  SideBarGroupLabel\n} from 'components/SideBarDrawer';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons/faFileAlt';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons/faTrophy';\n\nconst SideBarButtonAlt = styled(SideBarButton)`\n  &[disabled],\n  &[disabled]:hover {\n    background-color: ${colors.foreground}!important;\n    color: ${colors.textBright}!important;\n  }\n`;\nconst SideNavigation = ({ current }) => (\n  <div style={{ padding: '24px 0' }}>\n    <SideBarGroupLabel>\n      <I s=\"Documentation\" />\n    </SideBarGroupLabel>\n    <SideBarButtonAlt\n      disabled={current === 'fees'}\n      onClick={() => history.push('/document/fees')}\n    >\n      <MenuFontAwesomeIcon icon={faFileAlt} />\n      <I s=\"Fee Schedule\" />\n    </SideBarButtonAlt>\n    <SideBarButtonAlt\n      disabled={current === 'listing'}\n      onClick={() => history.push('/document/listing')}\n    >\n      <MenuFontAwesomeIcon icon={faFileAlt} />\n      <I s=\"Token Listing\" />\n    </SideBarButtonAlt>\n    <SideBarButtonAlt\n      disabled={current === 'api'}\n      onClick={() => history.push('/document/api')}\n    >\n      <MenuFontAwesomeIcon icon={faFileAlt} />\n      <I s=\"Relayer API\" />\n    </SideBarButtonAlt>\n\n    <SideBarGroupLabel>\n      <I s=\"Beta Programs\" />\n    </SideBarGroupLabel>\n\n    <SideBarButtonAlt\n      hoverbg={colors.orange}\n      colortxt={colors.orange}\n      disabled={current === 'beta1'}\n      onClick={() => history.push('/document/beta1')}\n    >\n      <MenuFontAwesomeIcon icon={faTrophy} />\n      <I s=\"Beta1 Testing Rewards\" />\n    </SideBarButtonAlt>\n  </div>\n);\n\nconst FeesPage = () => {\n  return (\n    <MakrdownPage\n      navigation={<SideNavigation current=\"fees\" />}\n      fileName=\"Fees.md\"\n    />\n  );\n};\n\nconst ListingPage = () => {\n  return (\n    <MakrdownPage\n      navigation={<SideNavigation current=\"listing\" />}\n      fileName=\"Listing.md\"\n    />\n  );\n};\n\nconst APIPage = () => {\n  return (\n    <MakrdownPage\n      navigation={<SideNavigation current=\"api\" />}\n      fileName=\"API.md\"\n    />\n  );\n};\n\nconst Beta1RewardsPage = () => {\n  return (\n    <MakrdownPage\n      navigation={<SideNavigation current=\"beta1\" />}\n      fileName=\"Beta1Rewards.md\"\n    />\n  );\n};\n\nexport { FeesPage, APIPage, ListingPage, Beta1RewardsPage };\n","import { connect } from 'react-redux';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\n\nimport { Layout } from 'antd';\nconst { Content } = Layout;\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const rotation = -Math.random() * 45;\n    const rotation2 = -rotation;\n    return (\n      <div>\n        <div\n          style={{\n            height: AppLayout.borderWidth,\n            backgroundColor: colors.border\n          }}\n        />\n        <Layout\n          hasSider={false}\n          style={{\n            height: AppLayout.simpleSecondaryPageHeight\n          }}\n        >\n          <Content\n            width=\"100%\"\n            style={{\n              paddingTop: '0px',\n              backgroundColor: colors.foreground,\n              borderLeftStyle: 'none'\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n                minHeight: '50vh',\n                margin: 'auto',\n                marginTop: '20vh',\n                backgroundSize: 'contain',\n                backgroundPosition: 'bottom',\n                backgroundImage: 'url(\"./assets/images/404.png\")',\n                backgroundRepeat: 'no-repeat',\n                backgroundBlendMode: 'color-dodge',\n                transform: 'rotate(' + rotation + 'deg)'\n              }}\n            >\n              <div\n                style={{\n                  fontWeight: '600',\n                  fontSize: '6rem',\n                  marginTop: '0%',\n                  marginLeft: '20%',\n                  color: colors.theme,\n                  userSelect: 'none',\n                  transform: 'rotate(' + rotation2 + 'deg)'\n                }}\n              >\n                <I s=\"404\" />\n                <div\n                  style={{\n                    fontSize: '1rem',\n                    fontWeight: 'normal',\n                    color: colors.textWhite,\n                    padding: '8px',\n                    borderRadius: '4px'\n                  }}\n                >\n                  <I s=\"404title\" />\n                </div>\n                <div\n                  style={{\n                    padding: '8px',\n                    borderRadius: '4px',\n                    fontSize: '0.9rem',\n                    fontWeight: 'normal',\n                    background: colors.foreground,\n                    width: '240px',\n                    color: colors.textDim\n                  }}\n                >\n                  <I s=\"If you believe this is indeed a bug, please \" />\n                  <a href=\"mailto:foundation@loopring.org\">\n                    <I s=\"contact us\" />\n                  </a>\n                  <I s=\". We would appreciate your feedback.\" />\n                </div>\n              </div>\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { layoutManager } = state;\n  return { layoutManager };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotFoundPage);\n","import styled from 'styled-components';\n\n// TODO(ruby): this should be a React component, not a styled object\nconst OrderSizeBar = styled.td`\n  {\n    padding: ${props => {\n      const totalUnits = props.sizeBarMaxSize / props.sizeBarUnitSize;\n      const numUnits = Math.floor(props.size / props.sizeBarUnitSize);\n      const percentSize = numUnits >= totalUnits ? 1 : numUnits / totalUnits;\n      const sizeBarWidth = (1 - percentSize) * props.sizeBarMaxWidth + 1;\n\n      return '0 0 0 ' + sizeBarWidth + 'px';\n    }};\n    boxs-sizing: border-box;\n    border-color: ${props =>\n      props.showSizeBar\n        ? props.side === 'buy'\n          ? props.buyBar\n          : props.sellBar\n        : 'red'};\n    border-style: solid;\n    border-width: ${props => {\n      const totalUnits = props.sizeBarMaxSize / props.sizeBarUnitSize;\n      const numUnits = Math.floor(props.size / props.sizeBarUnitSize);\n      const percentSize = numUnits >= totalUnits ? 1 : numUnits / totalUnits;\n      const sizeBarWidth = percentSize * props.sizeBarMaxWidth + 1;\n\n      return '0 0 0 ' + sizeBarWidth + 'px';\n    }};\n\n`;\n\nexport default OrderSizeBar;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport OrderSizeBar from './OrderSizeBar';\nimport colors from 'colors';\n\nconst CompactOrderTableRow = styled.tr`\n  font-size: 0.85rem;\n  color: ${colors.textDim};\n  height: 24px;\n  font-weight: 600;\n  background: ${colors.foreground};\n  &:hover {\n    cursor: pointer;\n    background: ${colors.background};\n  }\n`;\n\nconst CompactOrderTableSizeColumn = styled.td`\n  text-align: right;\n  width: 30%;\n  padding: 1px 5% 1px 1px;\n`;\n\nconst CompactOrderTableSizePrice = styled.td`\n  text-align: left;\n  width: 30%;\n  padding: 1px 1px 1px 1px;\n`;\n\nconst CompactOrderTablePositionColumn = styled.td`\n  text-align: right;\n  width: 30%;\n  padding: 1px 12px 1px 1px;\n`;\n\nconst EmptyOrderRow = () => {\n  return (\n    <CompactOrderTableRow style={{ userSelect: 'none' }}>\n      <td />\n      <CompactOrderTableSizeColumn\n        style={{\n          textAlign: 'left'\n        }}\n      >\n        -\n      </CompactOrderTableSizeColumn>\n      <CompactOrderTableSizePrice\n        style={{\n          textAlign: 'center'\n        }}\n      >\n        -\n      </CompactOrderTableSizePrice>\n      <CompactOrderTablePositionColumn>-</CompactOrderTablePositionColumn>\n    </CompactOrderTableRow>\n  );\n};\n\nconst OrderRow = ({\n  showSizeBar,\n  side,\n  size,\n  filled,\n  sizeBarMaxWidth,\n  sizeBarMaxSize,\n  sizeBarUnitSize,\n  buyPrimary,\n  buyBar,\n  sellPrimary,\n  sellBar,\n  onClick,\n  order,\n  dataConfigs,\n  onClickCancel,\n  ...props\n}) => {\n  return (\n    <CompactOrderTableRow\n      {...props}\n      onClick={e => {\n        e.preventDefault();\n        if (onClick) {\n          onClick(order, side);\n        }\n      }}\n    >\n      <OrderSizeBar\n        {...{\n          showSizeBar,\n          side,\n          size,\n          sizeBarMaxWidth,\n          sizeBarMaxSize,\n          sizeBarUnitSize,\n          buyPrimary,\n          buyBar,\n          sellPrimary,\n          sellBar\n        }}\n      />\n\n      {dataConfigs.map(({ propName = 'data', format, getter, renderer }, i) => {\n        if (propName === 'price') {\n          return (\n            <CompactOrderTableSizePrice key={i}>\n              {renderer({\n                side,\n                format,\n                [propName]: getter(order),\n                buyPrimary,\n                sellPrimary\n              })}\n            </CompactOrderTableSizePrice>\n          );\n        } else if (propName === 'size') {\n          return (\n            <CompactOrderTableSizeColumn key={i}>\n              {renderer({\n                side,\n                format,\n                [propName]: getter(order)\n              })}\n            </CompactOrderTableSizeColumn>\n          );\n        } else if (propName === 'position') {\n          return (\n            <CompactOrderTablePositionColumn key={i}>\n              {renderer({\n                side,\n                format,\n                [propName]: getter(order)\n              })}\n            </CompactOrderTablePositionColumn>\n          );\n        } else {\n          return <span />;\n        }\n      })}\n    </CompactOrderTableRow>\n  );\n};\n\nOrderRow.propTypes = {\n  side: PropTypes.oneOf(['buy', 'sell']),\n  showSizeBar: PropTypes.bool,\n  dataConfigs: PropTypes.arrayOf(PropTypes.object)\n};\n\nOrderRow.defaultProps = {\n  side: 'buy',\n  showSizeBar: true,\n  dataConfigs: []\n};\n\nexport { OrderRow, EmptyOrderRow };\n","import styled from 'styled-components';\n\nconst BaseHeader = styled.th`\n  font-weight: 400;\n  text-align: right;\n  height: 32px;\n`;\n\nexport const OrderBookHeaderSizeBar = styled(BaseHeader)`\n  width: 22px;\n  padding: 0px;\n`;\n\nexport const OrderBookHeaderSize = styled(BaseHeader)`\n  width: 20%;\n  padding: 1px 10px 1px 1px;\n`;\n\nexport const OrderBookHeaderPrice = styled(BaseHeader)`\n  width: 25%;\n  padding: 1px 1px 1px 26px;\n  text-align: left;\n`;\n\nexport const OrderBookHeaderPosition = styled(BaseHeader)`\n  width: 20%;\n  padding: 1px;\n`;\n","import PropTypes from 'prop-types';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst AbsoluteContainer = styled.div`\n  left: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: absolute;\n  background: ${colors.foreground};\n`;\n\nAbsoluteContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default AbsoluteContainer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  width: 100%\n  border-collapse: collapse\n  background: ${colors.foreground}\n  font-weight: 600;\n`;\n\nconst HiddenCompactTableHead = styled.thead`\n  visibility: hidden;\n`;\n\nconst CollapseCompactTableHead = styled.thead`\n  visibility: collapse;\n`;\n\nconst CompactOrderTable = ({\n  children,\n  showSizeBar,\n  headerLabels,\n  tableHeaderVisibility,\n  ...props\n}) => (\n  <Table {...props}>\n    {/* HiddenCompactTableHead is to set column width */}\n    {tableHeaderVisibility === 'hidden' ? (\n      <HiddenCompactTableHead>\n        <tr>\n          {showSizeBar ? <th /> : null}\n          {headerLabels.map((label, i) => (\n            <th key={i} style={{ userSelect: 'none' }}>\n              {label}\n            </th>\n          ))}\n        </tr>\n      </HiddenCompactTableHead>\n    ) : (\n      <CollapseCompactTableHead>\n        <tr>\n          {showSizeBar ? <th /> : null}\n          {headerLabels.map((label, i) => (\n            <th key={i} style={{ userSelect: 'none' }}>\n              {label}\n            </th>\n          ))}\n        </tr>\n      </CollapseCompactTableHead>\n    )}\n    <tbody>{children}</tbody>\n  </Table>\n);\n\nCompactOrderTable.propTypes = {\n  children: PropTypes.node,\n  showSizeBar: PropTypes.bool,\n  headerLabels: PropTypes.array,\n  tableHeaderVisibility: PropTypes.string\n};\n\nCompactOrderTable.defaultProps = {\n  showSizeBar: true,\n  headerLabels: [],\n  tableHeaderVisibility: 'hidden'\n};\n\nexport default CompactOrderTable;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst FullWidthTable = styled.table`\n  width: 100%;\n  z-index: 1;\n  font-size: 0.9rem;\n  font-weight: normal;\n  color: ${colors.textDim};\n  height: 40px;\n  user-select: none;\n  background: linear-gradient(\n    180deg,\n    rgba(46, 47, 74, 1) 0%,\n    rgba(37, 38, 59, 1) 100%\n  );\n`;\n\nconst CompactTableHead = ({ children, ...props }) => (\n  <FullWidthTable {...props}>\n    <thead>\n      <tr>{children}</tr>\n    </thead>\n  </FullWidthTable>\n);\n\nCompactTableHead.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default CompactTableHead;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Panel = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: absolute;\n`;\n\nPanel.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Panel;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport colors from 'colors';\n\nclass PanelHeader extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          height: '44px',\n          lineHeight: '20px',\n          paddingTop: '12px',\n          paddingBottom: '12px',\n          paddingLeft: '0px',\n          paddingRight: '0px',\n          position: 'relative',\n          fontWeight: '600',\n          fontSize: '0.9rem',\n          userSelect: 'none',\n          color: colors.textWhite\n        }}\n      >\n        {this.props.headerText}\n      </div>\n    );\n  }\n}\n\nPanelHeader.propTypes = {\n  headerText: PropTypes.node.isRequired\n};\n\nexport default PanelHeader;\n","import Numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { countTrailingZeroes } from './defaults/util';\nimport colors from 'colors';\n\nconst LowContrast = styled.span`\n  color: ${colors.textDim};\n`;\n\nconst MedContrast = styled.span`\n  color: ${colors.textWhite};\n`;\n\nconst HighContrast = styled.span`\n  color: ${colors.textWhite};\n`;\n\nconst DotColor = styled.span`\n  color: ${props =>\n    props.digitsAfterDecimal.length === 0 ? colors.textDim : colors.textWhite};\n`;\n\nconst PrettySize = ({ size = 0, format, side }) => {\n  const formattedSize = Numeral(size).format(format);\n  if (size === 0) return <LowContrast>{formattedSize}</LowContrast>;\n  // count trailing zeroes\n  const numTrailingZeroes = countTrailingZeroes(formattedSize);\n  // get digit arrays before and after decimal\n  const [digitsBeforeDecimal, digitsAfterDecimal = []] = formattedSize\n    .split('.')\n    .map(str => str.split(''));\n  // splice trailing zeroes into seperate array\n  const trailingZeroes = digitsAfterDecimal.splice(\n    digitsAfterDecimal.length - numTrailingZeroes\n  );\n  // return colorized version of size\n  return [\n    <MedContrast key=\"dbd\">{digitsBeforeDecimal}</MedContrast>,\n    <DotColor key=\"dot\" side={side} digitsAfterDecimal={digitsAfterDecimal}>\n      .\n    </DotColor>,\n    <HighContrast key=\"dad\">{digitsAfterDecimal}</HighContrast>,\n    <LowContrast key=\"tz\">{trailingZeroes}</LowContrast>\n  ];\n};\n\nPrettySize.propTypes = {\n  size: PropTypes.number,\n  format: PropTypes.string,\n  side: PropTypes.oneOf(['buy', 'sell'])\n};\n\nexport default PrettySize;\n","import PrettySize from './PrettySize';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst MedContrast = styled.span`\n  color: ${colors.textDim};\n`;\n\nconst PrettyPosition = ({ position, format, side }) =>\n  position && Number(position) ? (\n    <PrettySize size={position} format={format} side={side} />\n  ) : (\n    <MedContrast>-</MedContrast>\n  );\n\nexport default PrettyPosition;\n","import Numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { countTrailingZeroes } from './defaults/util';\nimport colors from 'colors';\n\nconst SidePrimary = styled.span`\n  color: ${props => {\n    if (props.price > props.prePrice) {\n      return props.buyPrimary;\n    } else if (props.price < props.prePrice) {\n      return props.sellPrimary;\n    } else {\n      return props.side === 'buy' ? props.buyPrimary : props.sellPrimary;\n    }\n  }};\n`;\n\nconst SideSecondary = styled.span`\n  color: ${props => {\n    if (props.price > props.prePrice) {\n      return props.buyPrimary;\n    } else if (props.price < props.prePrice) {\n      return props.sellPrimary;\n    } else {\n      return props.side === 'buy' ? props.buyPrimary : props.sellPrimary;\n    }\n  }};\n`;\n\nconst SideBar = styled.span`\n  color: ${props => {\n    if (props.price > props.prePrice) {\n      return props.buyPrimary;\n    } else if (props.price < props.prePrice) {\n      return props.sellPrimary;\n    } else {\n      return props.side === 'buy' ? props.buyPrimary : props.sellPrimary;\n    }\n  }};\n`;\n\nconst NoSidePrimary = styled.span`\n  color: ${colors.textWhite};\n`;\n\nconst NoSideSecondary = styled.span`\n  color: ${colors.textDim};\n`;\n\nconst DotColor = styled.span(\n  ({ side, digitsAfterDecimal, price, prePrice, buyPrimary, sellPrimary }) => {\n    if (digitsAfterDecimal.length === 0) {\n      return {\n        color: side === 'buy' ? buyPrimary : sellPrimary\n      };\n    } else {\n      if (price > prePrice) {\n        return { color: buyPrimary };\n      } else if (price < prePrice) {\n        return { color: sellPrimary };\n      } else {\n        return {\n          color: side === 'buy' ? buyPrimary : sellPrimary\n        };\n      }\n    }\n  }\n);\n\nconst NoSideDotColor = styled.span(({ side, digitsAfterDecimal }) => {\n  return {\n    color: colors.textWhite\n  };\n});\n\nconst PrettyPrice = ({\n  price = 0,\n  format,\n  side,\n  prePrice,\n  buyPrimary,\n  sellPrimary\n}) => {\n  let updatedPrice = String(price);\n  let updatedPrePrice = prePrice;\n  let formattedSize = updatedPrice;\n\n  // Avoid scientific notation\n  if (updatedPrice.includes('e-') || updatedPrice.includes('E-')) {\n    try {\n      const formatLength = format.split('.')[1].length;\n      updatedPrice = Number(updatedPrice).toFixed(formatLength);\n      formattedSize = updatedPrice;\n    } catch (error) {}\n  } else if (updatedPrice.includes('e') || updatedPrice.includes('E')) {\n    try {\n      updatedPrice = Number(updatedPrice).toLocaleString('fullwide', {\n        useGrouping: false\n      });\n    } catch (error) {}\n  } else {\n    formattedSize = Numeral(updatedPrice).format(format);\n  }\n\n  // count trailing zeroes\n  const numTrailingZeroes = countTrailingZeroes(formattedSize);\n  // get digit arrays before and after decimal\n  const [digitsBeforeDecimal, digitsAfterDecimal] = formattedSize\n    .split('.')\n    .map(str => str.split(''));\n  // splice trailing zeroes into seperate array\n  const trailingZeroes = digitsAfterDecimal.splice(\n    digitsAfterDecimal.length - numTrailingZeroes\n  );\n  // return colorized version of price\n  return side ? (\n    <span>\n      <SideSecondary\n        key=\"dbd\"\n        side={side}\n        price={updatedPrice}\n        prePrice={updatedPrePrice}\n        buyPrimary={buyPrimary}\n        sellPrimary={sellPrimary}\n      >\n        {digitsBeforeDecimal}\n      </SideSecondary>\n      <DotColor\n        key=\"dot\"\n        side={side}\n        price={updatedPrice}\n        prePrice={updatedPrePrice}\n        digitsAfterDecimal={digitsAfterDecimal}\n        buyPrimary={buyPrimary}\n        sellPrimary={sellPrimary}\n      >\n        .\n      </DotColor>\n      <SidePrimary\n        key=\"dad\"\n        side={side}\n        price={updatedPrice}\n        prePrice={updatedPrePrice}\n        buyPrimary={buyPrimary}\n        sellPrimary={sellPrimary}\n      >\n        {digitsAfterDecimal}\n      </SidePrimary>\n      <SideBar\n        key=\"tz\"\n        side={side}\n        price={updatedPrice}\n        prePrice={updatedPrePrice}\n        buyPrimary={buyPrimary}\n        sellPrimary={sellPrimary}\n      >\n        {trailingZeroes}\n      </SideBar>\n    </span>\n  ) : (\n    <span>\n      <NoSidePrimary key=\"_dbd\" side={side}>\n        {digitsBeforeDecimal}\n      </NoSidePrimary>\n      <NoSideDotColor\n        key=\"dot\"\n        side={side}\n        digitsAfterDecimal={digitsAfterDecimal}\n      >\n        .\n      </NoSideDotColor>\n      <NoSidePrimary key=\"_dad\" side={side}>\n        {digitsAfterDecimal}\n      </NoSidePrimary>\n      <NoSideSecondary key=\"tz\" side={side}>\n        {trailingZeroes}\n      </NoSideSecondary>\n    </span>\n  );\n};\n\nPrettyPrice.propTypes = {\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  format: PropTypes.string,\n  side: PropTypes.oneOf(['buy', 'sell'])\n};\n\nPrettyPrice.defaultProps = {\n  price: 0,\n  format: '0.00'\n};\n\nexport default PrettyPrice;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background: ${colors.foreground};\n`;\n\nconst Scrollable = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Scroller = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n  position: absolute;\n`;\n\nconst ScrollContainer = ({ scrollerRef, children, ...props }) => (\n  <Container {...props}>\n    <Scrollable>\n      <Scroller ref={scrollerRef} hidden-scrollbars>\n        {children}\n      </Scroller>\n    </Scrollable>\n  </Container>\n);\n\nScrollContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default ScrollContainer;\n","import PrettyPrice from '../../components/PrettyPrice';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from 'colors';\n\nconst Spread = ({\n  spread,\n  label,\n  format,\n  buyPrimary,\n  sellPrimary,\n  ...props\n}) => (\n  <div\n    {...props}\n    style={{\n      fontSize: '0.85rem',\n      fontWeight: '600',\n      lineHeight: '30px',\n      color: colors.textWhite,\n      backgroundColor: colors.lightForeground\n    }}\n  >\n    <div\n      style={{\n        display: 'inline-block',\n        marginLeft: '0px',\n        width: '40%',\n        textAlign: 'left',\n        padding: '1px 1px 1px 26px',\n        userSelect: 'none'\n      }}\n    >\n      {label}\n    </div>\n    <div\n      style={{\n        display: 'inline-block',\n        width: '30%',\n        textAlign: 'right',\n        padding: '1px 5% 1px 1px',\n        userSelect: 'none'\n      }}\n    >\n      <PrettyPrice\n        price={spread}\n        format={format}\n        buyPrimary={buyPrimary}\n        sellPrimary={sellPrimary}\n      />\n    </div>\n  </div>\n);\n\nSpread.propTypes = {\n  spread: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  format: PropTypes.string\n};\n\nSpread.defaultProps = {\n  spread: 0,\n  format: '0.00'\n};\n\nexport default Spread;\n","import PropTypes from 'prop-types';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst StickyContainer = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 100%;\n  position: absolute;\n  background: ${colors.foreground};\n`;\n\nStickyContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default StickyContainer;\n","import * as R from 'ramda';\nimport { connect } from 'react-redux';\nimport I from 'components/I';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport colors from 'colors';\n// Defaults\nimport * as getters from '../components/defaults/getters';\nimport * as util from '../components/defaults/util';\n\n// Components\nimport { EmptyOrderRow, OrderRow } from './components/OrderRow';\nimport {\n  OrderBookHeaderPosition,\n  OrderBookHeaderPrice,\n  OrderBookHeaderSize\n} from './styles/Styles';\nimport AbsoluteContainer from '../components/AbsoluteContainer';\nimport CompactOrderTable from '../components/CompactOrderTable';\nimport CompactTableHead from '../components/CompactTableHead';\nimport Panel from '../components/Panel';\nimport PanelHeader from '../components/PanelHeader';\nimport PrettyPosition from '../components/PrettyPosition';\nimport PrettyPrice from '../components/PrettyPrice';\nimport PrettySize from '../components/PrettySize';\nimport ScrollContainer from '../components/ScrollContainer';\nimport Spread from './components/Spread';\nimport StickyContainer from '../components/StickyContainer';\n\nimport config from 'lightcone/config';\n\nconst unsafePropNames = [\n  'asks',\n  'bids',\n  'depth',\n  'spreadText',\n  'showSizeBar',\n  'onClickOrder',\n  'sizeBarMaxWidth',\n  'sizeBarMaxSize',\n  'sizeBarUnitSize',\n  'getSize',\n  'getPrice',\n  'getPosition',\n  'sizeFormat',\n  'priceFormat',\n  'renderSize',\n  'renderPrice',\n  'renderPosition'\n];\n\nclass OrderBook extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    // hasOrders is required for hasCentered.\n    this.state = { hasOrders: false, hasCentered: false };\n    this.scroller = null;\n    this.centerSpread = this.centerSpread.bind(this);\n    this.centerSpreadOnResize = this.centerSpreadOnResize.bind(this);\n    window.addEventListener('resize', this.centerSpreadOnResize);\n    const mql = window.matchMedia('(max-width: 1240px)');\n    mql.addListener(this.centerSpread);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.state.hasOrders && util.hasReceivedOrderBook(this.props)) {\n      return this.setState({ hasOrders: true });\n    }\n    if (this.scroller && this.state.hasOrders && !this.state.hasCentered) {\n      return this.setState({ hasCentered: true }, this.centerSpread);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.centerSpreadOnResize);\n  }\n\n  centerSpread() {\n    if (this.scroller) {\n      // Add a round method to avoid the first row is cut off.\n      // 4 is for padding-top\n      const diff =\n        (this.scroller.scrollHeight - this.scroller.clientHeight) / 2 + 4;\n      const otherHeights = 32 * 3 + 14;\n      const num = Math.round((diff - otherHeights) / 24);\n      this.scroller.scrollTop = num * 24 + otherHeights;\n    }\n  }\n\n  centerSpreadOnResize() {\n    if (!this.state.hasCentered) {\n      return this.centerSpread();\n    }\n  }\n\n  render() {\n    const {\n      asks,\n      bids,\n      depth,\n      showSizeBar,\n      onClickOrder,\n      sizeBarMaxWidth,\n      sizeBarMaxSize,\n      sizeBarUnitSize,\n      getSize,\n      getPrice,\n      getPosition,\n      renderSize,\n      renderPrice,\n      renderPosition,\n      quoteTokenSymbol,\n      exchange\n    } = this.props;\n\n    const priceLabel = (\n      <span>\n        <I s=\"Price\" /> ({quoteTokenSymbol})\n      </span>\n    );\n    const sizeLabel = <I s=\"Size\" />;\n    const positionLabel = <I s=\"My Size\" />;\n\n    const safeProps = R.omit(unsafePropNames, this.props);\n    const visibleAsks = asks.slice(Math.max(asks.length - depth, 0));\n    const visibleBids = bids.slice(0, depth);\n    const maxRow = Math.max(visibleAsks.length, visibleBids.length, 20);\n    const spread = this.props.latestTrade ? this.props.latestTrade.price : '-';\n\n    // Get priceFormat from orderBook.level\n    let market = this.props.market.currentMarket.current;\n    const baseTokenSymbol = this.props.market.currentMarket.baseTokenSymbol;\n    const baseToken = config.getTokenBySymbol(baseTokenSymbol, exchange.tokens);\n    const marketConfig = config.getMarketByPair(market, exchange.markets);\n    const precisionForPrice = marketConfig ? marketConfig.precisionForPrice : 8;\n    const precision = precisionForPrice - this.props.market.orderBook.level;\n    let priceFormat;\n    if (precision > 0) {\n      priceFormat = '0.' + '0'.repeat(precision);\n    } else if (precision < 0) {\n      priceFormat = '1' + '0'.repeat(-precision);\n    }\n    let sizeFormat;\n    if (baseToken.precision > 0) {\n      sizeFormat = '0.' + '0'.repeat(baseToken.precision);\n    } else {\n      sizeFormat = '1' + '0'.repeat(-baseToken.precision);\n    }\n\n    const dataConfigs = [\n      {\n        propName: 'price',\n        format: priceFormat,\n        getter: getPrice,\n        renderer: renderPrice\n      },\n      {\n        propName: 'size',\n        format: sizeFormat,\n        getter: getSize,\n        renderer: renderSize\n      },\n      {\n        propName: 'position',\n        format: sizeFormat,\n        getter: getPosition,\n        renderer: renderPosition\n      }\n    ];\n\n    let orderBookComponent = (\n      <AbsoluteContainer>\n        <StickyContainer>\n          {/* TABLE COLUMN HEADERS */}\n          <CompactTableHead>\n            <OrderBookHeaderPrice>{priceLabel}</OrderBookHeaderPrice>\n            <OrderBookHeaderSize>{sizeLabel}</OrderBookHeaderSize>\n            <OrderBookHeaderPosition\n              style={{\n                paddingRight: '12px'\n              }}\n            >\n              {positionLabel}\n            </OrderBookHeaderPosition>\n          </CompactTableHead>\n        </StickyContainer>\n        <ScrollContainer\n          style={{\n            visibility: this.state.hasOrders ? 'visible' : 'hidden'\n          }}\n          scrollerRef={c => {\n            this.scroller = ReactDOM.findDOMNode(c);\n          }}\n        >\n          {/* ASKS TABLE */}\n          {/* marginTop and marginBottom will change the center position of Spread. */}\n          <div\n            style={{\n              paddingBottom: '4px',\n              marginTop: '10px',\n              minHeight: 'calc(50% - 20px)',\n              position: 'relative'\n            }}\n          >\n            <CompactOrderTable\n              style={{\n                bottom: '0%'\n              }}\n              showSizeBar={showSizeBar}\n              headerLabels={[priceLabel, sizeLabel, positionLabel]}\n            >\n              {Array(Math.max(0, maxRow - visibleAsks.length))\n                .fill()\n                .map((x, i) => i)\n                .map(i => (\n                  <EmptyOrderRow key={i} />\n                ))}\n              {visibleAsks.map((order, index) => (\n                <OrderRow\n                  key={index}\n                  side=\"sell\"\n                  order={order}\n                  size={getSize(order)}\n                  onClick={onClickOrder}\n                  dataConfigs={dataConfigs}\n                  showSizeBar={showSizeBar}\n                  sizeBarMaxSize={sizeBarMaxSize}\n                  sizeBarUnitSize={sizeBarUnitSize}\n                  sizeBarMaxWidth={sizeBarMaxWidth}\n                  buyPrimary={this.props.colorManager.buyPrimary}\n                  buyBar={this.props.colorManager.buyBar}\n                  sellPrimary={this.props.colorManager.sellPrimary}\n                  sellBar={this.props.colorManager.sellBar}\n                />\n              ))}\n            </CompactOrderTable>\n          </div>\n          {/* SPREAD MARKER */}\n          <Spread\n            spread={spread}\n            label={<I s=\"Last Price\" />}\n            format={priceFormat}\n            buyPrimary={this.props.colorManager.buyPrimary}\n            sellPrimary={this.props.colorManager.sellPrimary}\n          />\n          {/* BIDS TABLE */}\n          <div\n            style={{\n              paddingTop: '4px',\n              marginBottom: '10px',\n              minHeight: 'calc(50% - 20px)',\n              background: colors.foreground\n            }}\n          >\n            <CompactOrderTable\n              style={{\n                marginTop: '0',\n                marginBottom: '72px' // 24*3\n              }}\n              showSizeBar={showSizeBar}\n              headerLabels={[sizeLabel, priceLabel, positionLabel]}\n              tableHeaderVisibility=\"collapse\"\n            >\n              {visibleBids.map((order, index) => (\n                <OrderRow\n                  key={index}\n                  side=\"buy\"\n                  order={order}\n                  size={getSize(order)}\n                  onClick={onClickOrder}\n                  dataConfigs={dataConfigs}\n                  showSizeBar={showSizeBar}\n                  sizeBarMaxSize={sizeBarMaxSize}\n                  sizeBarUnitSize={sizeBarUnitSize}\n                  sizeBarMaxWidth={sizeBarMaxWidth}\n                  buyPrimary={this.props.colorManager.buyPrimary}\n                  buyBar={this.props.colorManager.buyBar}\n                  sellPrimary={this.props.colorManager.sellPrimary}\n                  sellBar={this.props.colorManager.sellBar}\n                />\n              ))}\n\n              {Array(Math.max(0, maxRow - visibleBids.length))\n                .fill()\n                .map((x, i) => i)\n                .map(i => (\n                  <EmptyOrderRow key={i} />\n                ))}\n            </CompactOrderTable>\n          </div>\n        </ScrollContainer>\n      </AbsoluteContainer>\n    );\n\n    let headerContent;\n\n    if (this.props.hideHeader) {\n      headerContent = <div />;\n    } else {\n      headerContent = (\n        <div\n          style={{\n            paddingTop: '0px',\n            paddingLeft: '0px',\n            backgroundColor: colors.background\n          }}\n        >\n          <PanelHeader headerText={<I s=\"Order Book\" />} />\n        </div>\n      );\n    }\n\n    return (\n      <Panel {...safeProps}>\n        {/* UI HEADER */}\n        {headerContent}\n        {orderBookComponent}\n      </Panel>\n    );\n  }\n}\n\nOrderBook.propTypes = {\n  asks: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  bids: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  depth: PropTypes.number,\n  sizeBarMaxWidth: PropTypes.number,\n  sizeBarMaxSize: PropTypes.number,\n  sizeBarUnitSize: PropTypes.number,\n  showSizeBar: PropTypes.bool,\n  getSize: PropTypes.func,\n  getPrice: PropTypes.func,\n  getPosition: PropTypes.func,\n  sizeFormat: PropTypes.string,\n  priceFormat: PropTypes.string,\n  renderSize: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  renderPrice: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  renderPosition: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  onClickOrder: PropTypes.func\n};\n\nOrderBook.defaultProps = {\n  asks: [],\n  bids: [],\n  depth: Infinity,\n  showSizeBar: true,\n  sizeBarMaxWidth: 20,\n  sizeBarMaxSize: 1000,\n  sizeBarUnitSize: 50,\n  getSize: getters.getSize,\n  getPrice: getters.getPrice,\n  getPosition: getters.getPosition,\n  sizeFormat: '0.0000',\n  priceFormat: '0.000000',\n  renderSize: PrettySize,\n  renderPrice: PrettyPrice,\n  renderPosition: PrettyPosition\n};\n\nconst mapStateToProps = state => {\n  const { colorManager, layoutManager, market, exchange } = state;\n  return { colorManager, layoutManager, market, exchange };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderBook);\n","export const getSize = data => data.base_fill_amount;\nexport const getSide = data => (data.is_sell ? 'sell' : 'buy');\nexport const getFilled = data => data.filled;\n\nexport const getPrice = data => {\n  let price = Number(data.price).toPrecision();\n  return price;\n};\nexport const getPosition = data => data.position;\nexport const getTimeStamp = data => data.time;\n\nexport const getSideFromLightconeData = data =>\n  data.side.toUpperCase() === 'SELL' ? 'sell' : 'buy';\n\nexport const getTimeStampFromLightconeData = data => {\n  return data.timestamp;\n};\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport colors from 'colors';\n\nimport { Button } from 'antd';\nimport { updateOrderBookTradeHistoryPanelType } from 'redux/actions/Tabs';\n\nimport './TabHeader.less';\n\nclass TabHeader extends React.Component {\n  clickedBuyButton = () => {\n    this.props.updateOrderBookTradeHistoryPanelType('orderBook');\n  };\n\n  clickedSellButton = () => {\n    this.props.updateOrderBookTradeHistoryPanelType('tradeHistory');\n  };\n\n  render() {\n    const isBuy = this.props.tabs.type1 === 'orderBook' ? true : false;\n    const isSell = this.props.tabs.type1 === 'tradeHistory' ? true : false;\n\n    const buttonStyle = {\n      color: colors.textWhite,\n      backgroundColor: colors.background,\n      borderStyle: 'none',\n      height: '30px',\n      borderRadius: '0px',\n      fontWeight: '600',\n      fontSize: '0.9rem',\n      padding: '0px 2px',\n      margin: '0px 15px 0px 0px',\n      borderBottomWidth: '2px',\n      borderBottomStyle: 'solid',\n      borderBottomColor: 'transparent'\n    };\n\n    const buyButtonActiveStyle = {\n      ...buttonStyle,\n      color: colors.textWhite,\n      borderBottomColor: colors.theme\n    };\n\n    const buttonInactiveStyle = {\n      ...buttonStyle,\n      color: colors.textDim\n    };\n\n    return (\n      <div className=\"orderbook-and-trade-history-header-tab\">\n        <Button\n          style={isBuy ? buyButtonActiveStyle : buttonInactiveStyle}\n          onClick={this.clickedBuyButton}\n        >\n          <I s=\"Order Book\" />\n        </Button>\n        <Button\n          style={isSell ? buyButtonActiveStyle : buttonInactiveStyle}\n          onClick={this.clickedSellButton}\n        >\n          <I s=\"Recent Trades\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { tabs } = state;\n  return { tabs };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateOrderBookTradeHistoryPanelType: type =>\n      dispatch(updateOrderBookTradeHistoryPanelType(type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabHeader);\n","import styled from 'styled-components';\n\nconst BaseHeading = styled.th`\n  font-weight: 400;\n  text-align: right;\n  height: 32px;\n  padding: 1px;\n`;\n\nconst TableColHead = styled(BaseHeading)`\n  width: 23%;\n`;\n\nconst TableColHeadPrice = styled(BaseHeading)`\n  width: 33%;\n`;\n\nexport { TableColHead, TableColHeadPrice };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nconst CompactOrderTableRow = styled.tr`\n  font-size: 0.85rem;\n  height: 24px;\n  font-weight: 600;\n  background: ${colors.foreground};\n  &:hover {\n    cursor: pointer;\n    background: ${colors.background};\n  }\n`;\n\nconst CommonTableCell = styled.td`\n  text-align: right;\n  font-size: 0.85rem;\n  background: transparent;\n`;\n\nconst CompactOrderTableSize = styled(CommonTableCell)`\n  padding: 1px 10px 1px 1px;\n  width: 35%;\n`;\n\nconst CompactOrderTablePrice = styled(CommonTableCell)`\n  padding: 1px 5px 1px 8px;\n  width: 30%;\n`;\n\nconst CompactOrderTableDate = styled(CommonTableCell)`\n  padding: 1px 13px 1px 1px;\n  width: 33%;\n`;\n\nconst OrderRow = ({\n  side,\n  size,\n  onClick,\n  preOrder,\n  order,\n  dataConfigs,\n  buyPrimary,\n  sellPrimary,\n  ...props\n}) => {\n  return (\n    <CompactOrderTableRow\n      {...props}\n      onClick={e => {\n        e.preventDefault();\n        if (onClick) {\n          onClick(order, side);\n        }\n      }}\n    >\n      {dataConfigs.map(({ propName = 'data', format, getter, renderer }, i) => {\n        if (propName === 'size') {\n          return (\n            <CompactOrderTableSize key={i}>\n              {renderer({\n                side,\n                format,\n                [propName]: getter(order)\n              })}\n            </CompactOrderTableSize>\n          );\n        } else if (propName === 'price') {\n          const prePrice = preOrder ? getter(preOrder) : 0;\n          return (\n            <CompactOrderTablePrice key={i}>\n              {renderer({\n                side,\n                format,\n                [propName]: getter(order),\n                prePrice,\n                buyPrimary,\n                sellPrimary\n              })}\n            </CompactOrderTablePrice>\n          );\n        } else {\n          return (\n            <CompactOrderTableDate key={i}>\n              {renderer({\n                side,\n                format,\n                [propName]: getter(order)\n              })}\n            </CompactOrderTableDate>\n          );\n        }\n      })}\n    </CompactOrderTableRow>\n  );\n};\n\nOrderRow.propTypes = {\n  side: PropTypes.oneOf(['buy', 'sell']),\n  dataConfigs: PropTypes.arrayOf(PropTypes.object)\n};\n\nOrderRow.defaultProps = {\n  side: 'buy',\n  dataConfigs: []\n};\n\nexport default OrderRow;\n","import Moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport colors from 'colors';\n\nconst ThinLowContrast = styled.span`\n  color: ${colors.textDim};\n`;\n\nconst PrettyTimeStamp = ({ timestamp, format }) => {\n  return (\n    <ThinLowContrast>\n      {format ? Moment(timestamp).format(format) : timestamp}\n    </ThinLowContrast>\n  );\n};\n\nPrettyTimeStamp.propTypes = {\n  timestamp: PropTypes.number,\n  format: PropTypes.string\n};\n\nexport default PrettyTimeStamp;\n","import * as R from 'ramda';\nimport { connect } from 'react-redux';\nimport I from 'components/I';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as getters from '../components/defaults/getters';\nimport colors from 'colors';\n\nimport { TableColHead, TableColHeadPrice } from './styles/Styles';\nimport AbsoluteContainer from '../components/AbsoluteContainer';\nimport CompactOrderTable from '../components/CompactOrderTable';\nimport CompactTableHead from '../components/CompactTableHead';\nimport Panel from '../components/Panel';\nimport PanelHeader from '../components/PanelHeader';\nimport ScrollContainer from '../components/ScrollContainer';\nimport StickyContainer from '../components/StickyContainer';\n\nimport OrderRow from './components/OrderRow';\nimport PrettyPrice from '../components/PrettyPrice';\nimport PrettySize from '../components/PrettySize';\nimport PrettyTimeStamp from '../components/PrettyTimeStamp';\nimport config from 'lightcone/config';\n\nconst unsafePropNames = [\n  'trades',\n  'length',\n  'headerText',\n  'showSizeBar',\n  'sizeLabel',\n  'priceLabel',\n  'timeStampLabel',\n  'onClickTrade',\n  'getSideFromLightconeData',\n  'getTimeStampFromLightconeData',\n  'sizeFormat',\n  'priceFormat',\n  'timeStampFormat',\n  'renderSize',\n  'renderPrice',\n  'renderTimeStamp'\n];\n\nclass TradeHistory extends React.Component {\n  getSize = entry => {\n    try {\n      return config.fromWEI(\n        this.props.baseTokenSymbol,\n        entry.size,\n        this.props.exchange.tokens\n      );\n    } catch (error) {\n      return 0;\n    }\n  };\n\n  getPrice = entry => {\n    if (entry) {\n      return Number(entry.price);\n    } else {\n      return 0;\n    }\n  };\n\n  render() {\n    const {\n      trades,\n      length,\n      onClickTrade,\n      getSideFromLightconeData,\n      getTimeStampFromLightconeData,\n      sizeFormat,\n      priceFormat,\n      timeStampFormat,\n      renderSize,\n      renderPrice,\n      renderTimeStamp,\n      quoteTokenSymbol\n    } = this.props;\n\n    const headerText = <I s=\"Recent Trades\" />;\n    const sizeLabel = <I s=\"TradeAmount\" />;\n    const priceLabel = (\n      <span>\n        <I s=\"TradePrice\" /> ({quoteTokenSymbol})\n      </span>\n    );\n    const timeStampLabel = <I s=\"TradeTime\" />;\n\n    const safeProps = R.omit(unsafePropNames, this.props);\n    const visibleTrades = trades.slice(0, length);\n    const dataConfigs = [\n      {\n        propName: 'price',\n        format: priceFormat,\n        getter: this.getPrice,\n        renderer: renderPrice\n      },\n      {\n        propName: 'size',\n        format: sizeFormat,\n        getter: this.getSize,\n        renderer: renderSize\n      },\n      {\n        propName: 'timestamp',\n        format: timeStampFormat,\n        getter: getTimeStampFromLightconeData,\n        renderer: renderTimeStamp\n      }\n    ];\n\n    let headerContent;\n\n    if (this.props.hideHeader) {\n      headerContent = <div />;\n    } else {\n      headerContent = (\n        <div\n          style={{\n            paddingTop: '0px',\n            paddingLeft: '0px',\n            backgroundColor: colors.background\n          }}\n        >\n          <PanelHeader headerText={headerText} />\n        </div>\n      );\n    }\n\n    return (\n      <Panel {...safeProps}>\n        {/* UI HEADER */}\n        {headerContent}\n        <AbsoluteContainer>\n          <StickyContainer>\n            {/* TABLE COLUMN HEADERS */}\n            <CompactTableHead>\n              <TableColHeadPrice\n                style={{\n                  paddingLeft: '0px',\n                  textAlign: 'center'\n                }}\n              >\n                {priceLabel}\n              </TableColHeadPrice>\n              <TableColHead\n                style={{\n                  paddingRight: '13px',\n                  textAlign: 'center'\n                }}\n              >\n                {sizeLabel}\n              </TableColHead>\n              <TableColHead\n                style={{\n                  paddingRight: '13px',\n                  textAlign: 'right'\n                }}\n              >\n                {timeStampLabel}\n              </TableColHead>\n            </CompactTableHead>\n          </StickyContainer>\n          <ScrollContainer>\n            {/* TRADE TABLE */}\n            <CompactOrderTable\n              style={{\n                marginBottom: '3em',\n                marginTop: '-0.65em'\n              }}\n              showSizeBar={false}\n              headerLabels={[sizeLabel, priceLabel, timeStampLabel]}\n            >\n              {visibleTrades.map((trade, i) => (\n                <OrderRow\n                  key={i}\n                  order={trade}\n                  preOrder={\n                    i === trades.length - 1 ? null : visibleTrades[i + 1]\n                  }\n                  side={getSideFromLightconeData(trade)}\n                  size={this.getSize(trade)}\n                  onClick={onClickTrade}\n                  dataConfigs={dataConfigs}\n                  buyPrimary={this.props.colorManager.buyPrimary}\n                  buyBar={this.props.colorManager.buyBar}\n                  sellPrimary={this.props.colorManager.sellPrimary}\n                  sellBar={this.props.colorManager.sellBar}\n                />\n              ))}\n            </CompactOrderTable>\n          </ScrollContainer>\n        </AbsoluteContainer>\n      </Panel>\n    );\n  }\n}\n\nTradeHistory.propTypes = {\n  trades: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  length: PropTypes.number,\n  getSideFromLightconeData: PropTypes.func,\n  getTimeStampFromLightconeData: PropTypes.func,\n  sizeFormat: PropTypes.string,\n  priceFormat: PropTypes.string,\n  timeStampFormat: PropTypes.string,\n  renderSize: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  renderPrice: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  renderTimeStamp: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  onClickTrade: PropTypes.func,\n  onScrollBottom: PropTypes.func\n};\n\nTradeHistory.defaultProps = {\n  trades: [],\n  length: Infinity,\n  getSideFromLightconeData: getters.getSideFromLightconeData,\n  getTimeStampFromLightconeData: getters.getTimeStampFromLightconeData,\n  sizeFormat: '0.0000',\n  priceFormat: '0.000000',\n  timeStampFormat: 'HH:mm:ss',\n  renderSize: PrettySize,\n  renderPrice: PrettyPrice,\n  renderTimeStamp: PrettyTimeStamp\n};\n\nconst mapStateToProps = state => {\n  const { colorManager, market, currentMarket, tradeHistory, exchange } = state;\n  return {\n    colorManager,\n    market,\n    trades: tradeHistory.trades,\n    baseTokenSymbol: currentMarket.baseTokenSymbol,\n    quoteTokenSymbol: currentMarket.quoteTokenSymbol,\n    exchange\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TradeHistory);\n","import { Button } from 'antd';\nimport { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport './AggregationWidget.less';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons/faMinusCircle';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons/faPlusCircle';\nimport colors from 'colors';\nimport config from 'lightcone/config';\n\nimport { updateOrderBooksLevel } from 'redux/actions/market/OrderBook';\n\nclass AggregationWidget extends React.Component {\n  render() {\n    const marketConfig = config.getMarketByPair(\n      this.props.market.currentMarket.current,\n      this.props.exchange.markets\n    );\n\n    let maxLevel = 8;\n    let precision = 8;\n    if (marketConfig) {\n      maxLevel = marketConfig.orderbookAggLevels;\n      precision =\n        marketConfig.precisionForPrice - this.props.market.orderBook.level;\n    }\n\n    let showLevel = '1';\n    if (precision > 0) {\n      showLevel = '0.' + '0'.repeat(precision - 1) + '1';\n    } else if (precision < 0) {\n      showLevel = '1' + '0'.repeat(-precision);\n    }\n    return (\n      <div\n        className=\"order-book-level\"\n        style={{\n          backgroundColor: colors.lightForeground,\n          position: 'absolute',\n          bottom: '0px',\n          width: '100%',\n          fontSize: '0.85rem',\n          fontWeight: '700',\n          lineHeight: '30px'\n        }}\n      >\n        <div\n          style={{\n            color: colors.textDim,\n            display: 'inline-block',\n            marginLeft: '0px',\n            width: '40%',\n            textAlign: 'right',\n            padding: '1px 5% 1px 0px',\n            userSelect: 'none'\n          }}\n        >\n          <I s=\"Aggregation\" />\n        </div>\n        <div\n          style={{\n            color: colors.textDim,\n            display: 'inline-block',\n            width: '30%',\n            textAlign: 'right',\n            padding: '1px',\n            userSelect: 'none'\n          }}\n        >\n          {showLevel}\n        </div>\n\n        <Button\n          className={'order-book-level-button'}\n          style={{\n            marginRight: '10px',\n            background: 'none'\n          }}\n          disabled={this.props.market.orderBook.level === 0 ? true : false}\n          onClick={() => {\n            const nextValue = this.props.market.orderBook.level - 1;\n            if (nextValue >= 0) {\n              this.props.updateOrderBooksLevel(\n                this.props.market.currentMarket.current,\n                this.props.market.orderBook.level - 1\n              );\n            }\n          }}\n        >\n          <FontAwesomeIcon icon={faPlusCircle} />\n        </Button>\n\n        <Button\n          className={'order-book-level-button'}\n          style={{\n            background: 'none'\n          }}\n          disabled={this.props.market.orderBook.level === maxLevel - 1}\n          onClick={() => {\n            const nextValue = this.props.market.orderBook.level + 1;\n            if (nextValue < maxLevel) {\n              this.props.updateOrderBooksLevel(\n                this.props.market.currentMarket.current,\n                this.props.market.orderBook.level + 1\n              );\n            }\n          }}\n        >\n          <FontAwesomeIcon icon={faMinusCircle} />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { market, exchange } = state;\n  return { market, exchange };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateOrderBooksLevel: (market, level) =>\n      dispatch(updateOrderBooksLevel(market, level))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AggregationWidget);\n","import { connect } from 'react-redux';\nimport { formatter } from 'lightcone/common';\nimport { toBig } from 'lightcone/common/formatter';\nimport {\n  updateAmount,\n  updatePrice,\n  updateTradeType\n} from 'redux/actions/TradePanel';\nimport OrderBook from 'pages/trade/orderbook/OrderBook';\nimport React from 'react';\nimport TabHeader from './components/TabHeader';\nimport TradeHistory from 'pages/trade/trade-history/TradeHistory';\nimport colors from 'colors';\nimport config from 'lightcone/config';\n\nimport AggregationWidget from './components/AggregationWidget';\n\nimport './OrderBookTradeHistoryPanel.less';\n\nclass OrderBookTradeHistoryPanel extends React.Component {\n  render() {\n    let sizeBarMaxSize;\n\n    const { market, exchange } = this.props;\n    const baseTokenSymbol = this.props.market.currentMarket.baseTokenSymbol;\n    const quoteTokenSymbol = this.props.market.currentMarket.quoteTokenSymbol;\n    const baseToken = config.getTokenBySymbol(baseTokenSymbol, exchange.tokens);\n    const marketConfig = config.getMarketByPair(\n      market.currentMarket.current,\n      exchange.markets\n    ) || {\n      precisionForPrice: 6\n    };\n\n    const sizeFormat = baseToken.precision\n      ? '0.' + '0'.repeat(baseToken.precision)\n      : '1' + '0'.repeat(-baseToken.precision);\n    const priceFormat =\n      marketConfig.precisionForPrice > 0\n        ? ' 0.' + '0'.repeat(marketConfig.precisionForPrice)\n        : '1' + '0'.repeat(-marketConfig.precisionForPrice);\n\n    var sizeMaxInSell = Math.max.apply(\n      Math,\n      this.props.market.orderBook.sells.map(function(o) {\n        return o.sizeInNumber;\n      })\n    );\n\n    var sizeMaxInBuy = Math.max.apply(\n      Math,\n      this.props.market.orderBook.buys.map(function(o) {\n        return o.sizeInNumber;\n      })\n    );\n\n    sizeBarMaxSize = Math.max(sizeMaxInSell, sizeMaxInBuy);\n    if (!isFinite(sizeBarMaxSize)) {\n      sizeBarMaxSize = 1000;\n    }\n\n    const orderbookSide = (\n      <div className=\"orderbook-side\">\n        <OrderBook\n          hideHeader={false}\n          depth={30}\n          baseTokenSymbol={baseTokenSymbol}\n          quoteTokenSymbol={quoteTokenSymbol}\n          asks={this.props.market.orderBook.sells}\n          bids={this.props.market.orderBook.buys}\n          sizeBarMaxSize={sizeBarMaxSize}\n          latestTrade={this.props.market.tradeHistory.latestTrade}\n          getPrice={entry => {\n            // Have to check if entry is null or not\n            if (entry) {\n              return entry.price;\n            } else {\n              return 0;\n            }\n          }}\n          getSize={entry => {\n            try {\n              return entry.sizeInNumber;\n            } catch (error) {\n              return 0;\n            }\n          }}\n          getPosition={entry => {\n            const { openOrders } = this.props.myOrders;\n            var totalSize = 0;\n            for (var i = 0; i < openOrders.length; i = i + 1) {\n              const myOrder = openOrders[i];\n\n              const orderPrice =\n                myOrder['side'].toUpperCase() === 'SELL'\n                  ? toBig(myOrder['price']).toFixed(\n                      marketConfig.precisionForPrice -\n                        this.props.market.orderBook.level,\n                      2\n                    )\n                  : toBig(myOrder['price']).toFixed(\n                      marketConfig.precisionForPrice -\n                        this.props.market.orderBook.level,\n                      3\n                    );\n\n              if (\n                toBig(orderPrice).eq(entry['price']) &&\n                myOrder['side'] === entry['side'] &&\n                myOrder['status'] === 'processing'\n              ) {\n                try {\n                  const sizeInBigNumber = myOrder['size'];\n                  const filledInBigNumber = myOrder['filledSize'];\n                  const size = Number(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      sizeInBigNumber,\n                      exchange.tokens\n                    )\n                  );\n                  const filledSize = Number(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      filledInBigNumber,\n                      exchange.tokens\n                    )\n                  );\n                  totalSize = totalSize + size - filledSize;\n                } catch (error) {}\n              }\n            }\n            if (totalSize > 0) {\n              return totalSize;\n            } else {\n              return 'null';\n            }\n          }}\n          onClickOrder={(order, side) => {\n            this.props.updatePrice(toBig(order.price).toFixed());\n            let tradeSide = 'buy';\n            let size = 0;\n            if (side.toLowerCase() === 'buy') {\n              const slots = this.props.market.orderBook.buys.filter(\n                slot => parseFloat(slot.price) >= parseFloat(order.price)\n              );\n              size = slots\n                .map(slot =>\n                  formatter.toBig(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      slot.size,\n                      exchange.tokens\n                    )\n                  )\n                )\n                .reduce((sum, size) => sum.plus(size));\n              tradeSide = 'sell';\n            } else {\n              const slots = this.props.market.orderBook.sells.filter(\n                slot => parseFloat(slot.price) <= parseFloat(order.price)\n              );\n              size = slots\n                .map(slot =>\n                  formatter.toBig(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      slot.size,\n                      exchange.tokens\n                    )\n                  )\n                )\n                .reduce((sum, size) => sum.plus(size));\n            }\n            this.props.updateTradeType(tradeSide);\n            this.props.updateAmount(formatter.toNumber(size));\n          }}\n        />\n        <AggregationWidget />\n      </div>\n    );\n\n    let content = (\n      <div\n        style={{\n          display: this.props.tabs.type1 === 'orderBook' ? 'initial' : 'none'\n        }}\n      >\n        <OrderBook\n          style={{\n            height: 'calc(100vh - 64px - 45px - 45.59px + 8px)'\n          }}\n          hideHeader={true}\n          baseTokenSymbol={baseTokenSymbol}\n          quoteTokenSymbol={quoteTokenSymbol}\n          depth={1000}\n          asks={this.props.market.orderBook.sells}\n          bids={this.props.market.orderBook.buys}\n          sizeBarMaxSize={sizeBarMaxSize}\n          latestTrade={this.props.market.tradeHistory.latestTrade}\n          getPrice={entry => {\n            // Have to check if entry is null or not\n            if (entry) {\n              return entry.price;\n            } else {\n              return 0;\n            }\n          }}\n          getSize={entry => {\n            try {\n              return config.fromWEI(\n                baseTokenSymbol,\n                entry.size,\n                exchange.tokens\n              );\n            } catch (error) {\n              return 0;\n            }\n          }}\n          getPosition={entry => {\n            const { openOrders } = this.props.myOrders;\n            var totalSize = 0;\n            for (var i = 0; i < openOrders.length; i = i + 1) {\n              const myOrder = openOrders[i];\n              const orderPrice =\n                myOrder['side'].toUpperCase() === 'SELL'\n                  ? toBig(myOrder['price']).toFixed(\n                      marketConfig.precisionForPrice -\n                        this.props.market.orderBook.level,\n                      2\n                    )\n                  : toBig(myOrder['price']).toFixed(\n                      marketConfig.precisionForPrice -\n                        this.props.market.orderBook.level,\n                      3\n                    );\n\n              if (\n                toBig(orderPrice).eq(entry['price']) &&\n                myOrder['side'] === entry['side'] &&\n                myOrder['status'] === 'processing'\n              ) {\n                try {\n                  const sizeInBigNumber = myOrder['size'];\n                  const filledInBigNumber = myOrder['filledSize'];\n                  const size = Number(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      sizeInBigNumber,\n                      exchange.tokens\n                    )\n                  );\n                  const filledSize = Number(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      filledInBigNumber,\n                      exchange.tokens\n                    )\n                  );\n                  totalSize = totalSize + size - filledSize;\n                } catch (error) {}\n              }\n            }\n            if (totalSize > 0) {\n              return totalSize;\n            } else {\n              return 'null';\n            }\n          }}\n          onClickOrder={(order, side) => {\n            this.props.updatePrice(toBig(order.price).toFixed());\n            let tradeSide = 'buy';\n            let size = 0;\n            if (side.toLowerCase() === 'buy') {\n              const slots = this.props.market.orderBook.buys.filter(\n                slot => parseFloat(slot.price) >= parseFloat(order.price)\n              );\n              size = slots\n                .map(slot =>\n                  formatter.toBig(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      slot.size,\n                      exchange.tokens\n                    )\n                  )\n                )\n                .reduce((sum, size) => sum.plus(size));\n              tradeSide = 'sell';\n            } else {\n              const slots = this.props.market.orderBook.sells.filter(\n                slot => parseFloat(slot.price) <= parseFloat(order.price)\n              );\n              size = slots\n                .map(slot =>\n                  formatter.toBig(\n                    config.fromWEI(\n                      this.props.market.currentMarket.baseTokenSymbol,\n                      slot.size,\n                      exchange.tokens\n                    )\n                  )\n                )\n                .reduce((sum, size) => sum.plus(size));\n            }\n            this.props.updateTradeType(tradeSide);\n            this.props.updateAmount(formatter.toNumber(size));\n          }}\n        />\n        <AggregationWidget />\n      </div>\n    );\n    const orderBookAndTradeHistorySide = (\n      <div className=\"orderbook-side-and-trade-history\">\n        <div\n          style={{\n            height: '44px',\n            backgroundColor: colors.background\n          }}\n        >\n          <TabHeader />\n        </div>\n        {content}\n        <TradeHistory\n          style={{\n            display: this.props.tabs.type1 === 'orderBook' ? 'none' : 'initial',\n            height: 'calc(100vh - 64px - 45px - 45.59px + 8px)'\n          }}\n          hideHeader={true}\n          getTimeStamp={order => order.timestamp}\n          onClickTrade={(order, side) => {\n            this.props.updatePrice(toBig(order.price).toFixed());\n          }}\n          sizeFormat={sizeFormat}\n          priceFormat={priceFormat}\n        />\n      </div>\n    );\n\n    return (\n      <div>\n        {orderbookSide}\n        {orderBookAndTradeHistorySide}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { layoutManager, market, tabs, myOrders, exchange } = state;\n  return { layoutManager, market, tabs, myOrders, exchange };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updatePrice: price => dispatch(updatePrice(price)),\n    updateAmount: size => dispatch(updateAmount(size)),\n    updateTradeType: type => dispatch(updateTradeType(type))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrderBookTradeHistoryPanel);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport AppLayout from 'AppLayout';\nimport colors from 'colors';\n\nimport {\n  CancelOrderButton,\n  LargeTableRow,\n  TextCompactTableHeader\n} from 'styles/Styles';\nimport { ConfigProvider, Pagination, Table } from 'antd';\nimport { cancelOrders } from 'lightcone/api/v1/orders';\nimport EmptyTableIndicator from 'components/EmptyTableIndicator';\nimport Moment from 'moment';\n\nimport { notifyError, notifySuccess } from 'redux/actions/Notification';\n\nimport './OrderBaseTable.less';\n\nconst SmallPagination = styled(Pagination)`\n  padding: 4px !important;\n  text-align: right;\n  a {\n    color: colors.textDim + '!important';\n  }\n`;\n\nclass OrderBaseTable extends React.Component {\n  onClickCancel = order => {\n    // Send cancel request...\n    (async () => {\n      try {\n        const apiKey = this.props.dexAccount.account.apiKey;\n        // Use password to decode\n        if (this.props.dexAccount.password === null) {\n          throw new Error(\n            'Password is not correct! Please try again or reset Password.'\n          );\n        }\n        const signed = window.wallet.submitFlexCancel(\n          order.hash,\n          order.clientOrderId\n        );\n        await cancelOrders(\n          this.props.dexAccount.account.accountId,\n          signed.hash,\n          signed.clientOrderId,\n          signed.signature,\n          apiKey\n        );\n        notifySuccess(<I s=\"Your order has been cancelled.\" />);\n      } catch (err) {\n        notifyError(<I s=\"Failed to cancel your order.\" />);\n      }\n    })();\n  };\n\n  render() {\n    const emptyTableIndicator = () => (\n      <EmptyTableIndicator text={'NoOpenOrders'} marginTop={'4%'} />\n    );\n\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'padding',\n        width: 13\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Side\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'side',\n        width: 50\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Market\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'market',\n        width: 76\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Filled_Rate\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'filled',\n        width: 70\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Size\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'size'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Price\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'price'\n      },\n      {\n        title: (\n          <TextCompactTableHeader>\n            <I s=\"Timestamp\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'date',\n        width: 100\n      },\n      {\n        title: (\n          <TextCompactTableHeader\n            style={{\n              paddingRight: '9px'\n            }}\n          >\n            <I s=\"Status\" />\n          </TextCompactTableHeader>\n        ),\n        dataIndex: 'status'\n      }\n    ];\n\n    const data = [];\n    for (let i = 0; i < this.props.data.length; i++) {\n      const order = this.props.data[i];\n\n      var status = '-';\n      if (order.status === 'processing' || order.status === 'waiting') {\n        status = (\n          <CancelOrderButton\n            onClick={e => {\n              e.preventDefault();\n              this.onClickCancel(order);\n            }}\n          >\n            <I s=\"Cancel\" />\n          </CancelOrderButton>\n        );\n      } else if (order.status === 'processed') {\n        status = <I s=\"Filled\" />;\n      } else if (order.status === 'failed') {\n        status = <I s=\"Failed\" />;\n      } else if (\n        order.status === 'cancelling' ||\n        order.status === 'cancelled'\n      ) {\n        status = <I s=\"Cancelled\" />;\n      } else if (order.status === 'expired') {\n        status = <I s=\"Expired\" />;\n      }\n      data.push({\n        key: i,\n        side: (\n          <LargeTableRow\n            style={{\n              color:\n                order.side === 'BUY'\n                  ? this.props.colorManager.buyPrimary\n                  : this.props.colorManager.sellPrimary\n            }}\n          >\n            {order.side === 'BUY' ? <I s=\"Buy\" /> : <I s=\"Sell\" />}\n          </LargeTableRow>\n        ),\n        market: <LargeTableRow>{order.market}</LargeTableRow>,\n        size: <LargeTableRow>{order.sizeInString}</LargeTableRow>,\n        filled: (\n          <LargeTableRow\n            style={{\n              color: colors.textWhite\n            }}\n          >\n            {order.filled}\n          </LargeTableRow>\n        ),\n        price: (\n          <LargeTableRow\n            style={{\n              color:\n                order.side === 'BUY'\n                  ? this.props.colorManager.buyPrimary\n                  : this.props.colorManager.sellPrimary\n            }}\n          >\n            {order.price}\n          </LargeTableRow>\n        ),\n        date: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim\n            }}\n          >\n            {Moment(order.createdAt).format('MM/DD HH:mm:ss')}\n          </LargeTableRow>\n        ),\n        status: (\n          <LargeTableRow\n            style={{\n              color: colors.textDim,\n              textAlign: 'right',\n              paddingRight: '9px'\n            }}\n          >\n            {status}\n          </LargeTableRow>\n        )\n      });\n    }\n\n    return (\n      <div className={'open-orders'}>\n        <ConfigProvider renderEmpty={data.length === 0 && emptyTableIndicator}>\n          <Table\n            style={{\n              borderStyle: 'none',\n              borderWidth: '0px',\n              height:\n                this.props.total > this.props.limit\n                  ? AppLayout.tradeOrderBaseTableHeight\n                  : AppLayout.tradeOrderBaseTableHeightNoPagination\n            }}\n            size=\"middle\"\n            tableLayout={'fixed'}\n            columns={columns}\n            dataSource={data}\n            pagination={false}\n            scroll={{\n              y:\n                this.props.total > this.props.limit\n                  ? AppLayout.tradeOrderBaseTableScrollY\n                  : AppLayout.tradeOrderBaseTableScrollYNoPagination\n            }}\n          />\n          {this.props.total > this.props.limit ? (\n            <SmallPagination\n              size=\"small\"\n              style={{ background: colors.lightForeground }}\n              total={this.props.total}\n              current={this.props.current}\n              onChange={this.props.onChange}\n              pageSize={this.props.limit}\n            />\n          ) : (\n            <div />\n          )}\n        </ConfigProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { colorManager, dexAccount, myOrders, market } = state;\n  return { colorManager, dexAccount, myOrders, market };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderBaseTable);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport OrderBaseTable from './components/OrderBaseTable';\n\nimport { updateHistoryOrderOffset } from 'redux/actions/MyOrders';\n\nclass HistoricalOrders extends React.Component {\n  onChange = page => {\n    const offset = this.props.myOrders.historyOrdersLimit * (page - 1);\n    this.props.updateHistoryOrderOffset(offset);\n  };\n\n  render() {\n    const current =\n      Math.floor(\n        this.props.myOrders.historyOrdersOffset /\n          this.props.myOrders.historyOrdersLimit\n      ) + 1;\n    return (\n      <OrderBaseTable\n        placeHolder=\"NoHistoryOrders\"\n        data={this.props.myOrders.historyOrders}\n        total={this.props.myOrders.historyOrdersTotalNum}\n        limit={this.props.myOrders.historyOrdersLimit}\n        offset={this.props.myOrders.historyOrdersOffset}\n        current={current}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { myOrders } = state;\n  return { myOrders };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateHistoryOrderOffset: offset =>\n      dispatch(updateHistoryOrderOffset(offset))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoricalOrders);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport OrderBaseTable from './components/OrderBaseTable';\n\nimport { updateOpenOrderOffset } from 'redux/actions/MyOrders';\n\nclass OpenOrders extends React.Component {\n  onChange = page => {\n    const offset = this.props.myOrders.openOrdersLimit * (page - 1);\n    this.props.updateOpenOrderOffset(offset);\n  };\n\n  render() {\n    const current =\n      Math.floor(\n        this.props.myOrders.openOrdersOffset /\n          this.props.myOrders.openOrdersLimit\n      ) + 1;\n\n    return (\n      <OrderBaseTable\n        placeHolder=\"NoOpenOrders\"\n        data={this.props.myOrders.openOrders}\n        total={this.props.myOrders.openOrdersTotalNum}\n        limit={this.props.myOrders.openOrdersLimit}\n        offset={this.props.myOrders.openOrdersOffset}\n        current={current}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { myOrders } = state;\n  return { myOrders };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateOpenOrderOffset: offset => dispatch(updateOpenOrderOffset(offset))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenOrders);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport colors from 'colors';\n\nimport { Button } from 'antd';\nimport { updateMyOrdersAndMyTradesType } from 'redux/actions/Tabs';\n\nimport './TabHeader.less';\n\nclass TabHeader extends React.Component {\n  clickedOpenOrdersButton = () => {\n    this.props.updateMyOrdersAndMyTradesType('open-orders');\n    // this.props.increaseOpenOrdersReferenceCount();\n  };\n\n  clickedOrderHistory = () => {\n    this.props.updateMyOrdersAndMyTradesType('history-orders');\n    // this.props.increaseHistoryOrdersReferenceCount();\n  };\n\n  render() {\n    const isBuy = this.props.tabs.type2 === 'open-orders' ? true : false;\n    const isSell = this.props.tabs.type2 === 'history-orders' ? true : false;\n\n    const buttonStyle = {\n      color: colors.textWhite,\n      backgroundColor: colors.background,\n      borderStyle: 'none',\n      height: '30px',\n      borderRadius: '0px',\n      fontWeight: '600',\n      fontSize: '0.9rem',\n      padding: '0px 2px',\n      margin: '0px 15px 0px 0px',\n      borderBottomWidth: '2px',\n      borderBottomStyle: 'solid',\n      borderBottomColor: 'transparent'\n    };\n\n    const buyButtonActiveStyle = {\n      ...buttonStyle,\n      color: colors.textWhite,\n      borderBottomColor: colors.theme\n    };\n\n    const buttonInactiveStyle = {\n      ...buttonStyle,\n      color: colors.textDim\n    };\n\n    return (\n      <div className=\"my-orders-header-tab-row\">\n        <Button\n          style={isBuy ? buyButtonActiveStyle : buttonInactiveStyle}\n          onClick={this.clickedOpenOrdersButton}\n        >\n          <I s=\"Open Orders\" />\n        </Button>\n        <Button\n          style={isSell ? buyButtonActiveStyle : buttonInactiveStyle}\n          onClick={this.clickedOrderHistory}\n        >\n          <I s=\"Order History\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { myOrders, tabs } = state;\n  return {\n    myOrders,\n    tabs\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateMyOrdersAndMyTradesType: type =>\n      dispatch(updateMyOrdersAndMyTradesType(type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabHeader);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport AppLayout from 'AppLayout';\nimport colors from 'colors';\n\nimport HistoricalOrders from './HistoricalOrders';\nimport OpenOrders from './OpenOrders';\nimport TabHeader from './components/TabHeader';\n\nclass OpenAndHistoricalOrders extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          paddingLeft: '0px',\n          paddingTop: '0px',\n          marginTop: '0px',\n          borderWidth: '0px',\n          height: AppLayout.tradeOrderAndTradeHeight,\n          background: colors.foreground\n        }}\n      >\n        <div\n          style={{\n            height: '44px',\n            backgroundColor: colors.background\n          }}\n        >\n          <TabHeader />\n        </div>\n        <div\n          style={{\n            display: this.props.tabs.type2 === 'open-orders' ? 'block' : 'none'\n          }}\n        >\n          <OpenOrders />\n        </div>\n        <div\n          style={{\n            display:\n              this.props.tabs.type2 === 'history-orders' ? 'block' : 'none'\n          }}\n        >\n          <HistoricalOrders />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { tabs } = state;\n  return { tabs };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OpenAndHistoricalOrders);\n","import { HighlightTextSpan, RegularTextSpan } from 'styles/Styles';\nimport React from 'react';\nimport colors from 'colors';\n\nexport default class ColumnWrapper extends React.Component {\n  render() {\n    return (\n      <div>\n        <div\n          style={{\n            textAlign: this.props.textAlign\n          }}\n        >\n          <HighlightTextSpan\n            style={{\n              textAlign: this.props.textAlign,\n              whiteSpace: 'nowrap'\n            }}\n          >\n            {this.props.row1}\n          </HighlightTextSpan>\n        </div>\n        <div\n          style={{\n            textAlign: this.props.textAlign,\n            whiteSpace: 'nowrap'\n          }}\n        >\n          <RegularTextSpan\n            style={{\n              whiteSpace: 'nowrap',\n              color: this.props.row2Color\n                ? this.props.row2Color\n                : colors.textDim\n            }}\n          >\n            {this.props.row2}\n          </RegularTextSpan>\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport { List } from 'antd';\nimport { getTicker } from 'lightcone/api/LightconeAPI';\nimport { history } from 'redux/configureStore';\nimport colors from 'colors';\nimport config from 'lightcone/config';\nimport styled from 'styled-components';\n\nimport './MarketSelector.less';\nimport { getEtherscanLink } from 'lightcone/api/localStorgeAPI';\nimport ColumnWrapper from './components/ColumnWrapper';\n\nconst AssetIcon = styled.a`\n  display: inline-block;\n  width: 42px;\n  height: 28px;\n  border-radius: 50%;\n  margin-right: 16px;\n  margin-left: -8px;\n  margin-top: -8px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  background-origin: content-box;\n`;\n\nclass MarketSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: '',\n      tickers: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.isVisible !== false &&\n      this.props.isVisible !== prevProps.isVisible\n    ) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    (async () => {\n      try {\n        const tickers = await getTicker(\n          this.props.market.marketList.marketNames,\n          this.props.tokens\n        );\n        this.setState({\n          tickers\n        });\n      } catch (error) {}\n    })();\n  }\n\n  getAssetUrl(token, exchangeAddress) {\n    var addr = window.wallet ? window.wallet.address : exchangeAddress;\n    if (token.symbol === 'ETH')\n      return `${getEtherscanLink(this.props.chainId)}/address/${addr}`;\n    else\n      return `${getEtherscanLink(this.props.chainId)}/token/${\n        token.address\n      }?a=${addr}`;\n  }\n  getAssetIconUrl(token) {\n    var path;\n\n    if (token.symbol === 'ETH') {\n      path = 'info';\n    } else if (token.symbol === 'LRC') {\n      return 'url(/assets/images/LRC.png)';\n    } else {\n      path = 'assets/' + token.address;\n    }\n    return 'url(/assets/images/ethereum/' + path + '/logo.png)';\n  }\n\n  render() {\n    const { filter } = this.state;\n    const { tokens } = this.props;\n    const markets =\n      filter !== ''\n        ? this.props.market.marketList.markets.filter(x =>\n            x.markets.includes(filter.toUpperCase())\n          )\n        : this.props.market.marketList.markets;\n    let updatedMarkets = [];\n    for (let i = 0; i < markets.length; i = i + 1) {\n      const market = markets[i];\n      const tickers = this.state.tickers.filter(\n        x => x.market === market.market\n      );\n\n      let updatedMarket = {\n        ...market,\n        baseToken: config.getTokenBySymbol(market.market.split('-')[0], tokens),\n        quoteToken: config.getTokenBySymbol(market.market.split('-')[1], tokens)\n      };\n      if (tickers.length === 1) {\n        updatedMarket['ticker'] = tickers[0];\n      } else {\n        updatedMarket['ticker'] = {\n          percentChange24h: '-',\n          volume: '-',\n          close: '-'\n        };\n      }\n      updatedMarkets.push(updatedMarket);\n    }\n\n    return (\n      <div\n        style={{\n          width: '400px'\n        }}\n      >\n        <div\n          style={{\n            paddingTop: '8px'\n          }}\n        >\n          <List\n            bordered\n            dataSource={updatedMarkets}\n            renderItem={updatedMarket => (\n              <div\n                onClick={() => {\n                  if (this.props.market !== updatedMarket) {\n                    history.push('/trade/' + updatedMarket.market);\n                    this.props.closePopover();\n                  }\n                }}\n              >\n                <List.Item\n                  className=\"market-selector-list-item\"\n                  style={{\n                    backgroundColor: colors.background,\n                    borderTopStyle: 'none',\n                    marginBottom: '8px',\n                    height: '56px',\n                    borderRadius: '4px',\n                    cursor: 'pointer'\n                  }}\n                >\n                  <AssetIcon\n                    href={this.getAssetUrl(\n                      updatedMarket.baseToken,\n                      this.props.exchangeAddress\n                    )}\n                    target=\"_blank\"\n                    style={{\n                      backgroundImage: this.getAssetIconUrl(\n                        updatedMarket.baseToken\n                      )\n                    }}\n                  />\n\n                  <span\n                    style={{\n                      width: '20%',\n                      minWidth: '120px'\n                    }}\n                  >\n                    <ColumnWrapper\n                      textAlign=\"left\"\n                      row1={updatedMarket.market}\n                      row2={<I s={updatedMarket.baseToken.name} />}\n                    />\n                  </span>\n                  <span\n                    style={{\n                      width: '46%',\n                      marginRight: '4%'\n                    }}\n                  >\n                    <ColumnWrapper\n                      textAlign=\"right\"\n                      row1={`${updatedMarket.ticker.volume} ${updatedMarket.quoteToken.symbol}`}\n                      row2={<I s=\"24h Volume\" />}\n                    />\n                  </span>\n                  <span\n                    style={{\n                      width: '30%'\n                    }}\n                  >\n                    <ColumnWrapper\n                      textAlign=\"right\"\n                      row1={\n                        updatedMarket.ticker.close\n                          ? updatedMarket.ticker.close\n                          : '-'\n                      }\n                      row2={`${updatedMarket.ticker.percentChange24h}%`}\n                      row2Color={\n                        updatedMarket.ticker.percentChange24h &&\n                        updatedMarket.ticker.percentChange24h.startsWith('-')\n                          ? this.props.colorManager.down\n                          : this.props.colorManager.up\n                      }\n                    />\n                  </span>\n                </List.Item>\n              </div>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { colorManager, market, exchange } = state;\n\n  return {\n    colorManager,\n    chainId: exchange.chainId,\n    market,\n    markets: exchange.markets,\n    tokens: exchange.tokens,\n    exchangeAddress: exchange.exchangeAddress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketSelector);\n","import { HighlightTextSpan, RegularTextSpan } from 'styles/Styles';\nimport { connect } from 'react-redux';\nimport AppLayout from 'AppLayout';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\nimport styled from 'styled-components';\n\nimport { Button, Menu, Popover } from 'antd';\nimport MarketSelector from 'modals/market-selector/MarketSelector';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons/faDotCircle';\nimport { fetchTicker, restTicker } from 'redux/actions/market/Ticker';\n\nimport { tracker } from 'components/DefaultTracker';\n\nconst SelectMarketButton = styled(Button)`\n  border-style: none !important;\n  background-color: #292c42;\n  color: ${colors.textWhite};\n  height: 46px !important;\n  font-size: 0.9rem !important;\n  font-weight: 600 !important;\n\n  &:hover {\n    background: ${colors.background} !important;\n  }\n\n  &:focus {\n    background: ${colors.background} !important;\n  }\n`;\n\nconst BlinkFontAwesomeIcon = styled(FontAwesomeIcon)`\n  @keyframes blinker {\n    50% {\n      opacity: 0.67;\n      filter: drop-shadow(0 0 0px ${colors.green});\n    }\n  }\n  margin-right: 8px;\n  filter: drop-shadow(0 0 8px ${colors.green});\n  animation: blinker 3s ease-in-out infinite;\n`;\n\nconst MenuItem = styled(Menu.Item)`\n  cursor: 'default';\n  padding-left: 10px;\n  line-height: ${AppLayout.tickerBarHeight};\n`;\n\nconst MenuHighlightTextSpan = styled(HighlightTextSpan)`\n  padding-left: 12px;\n`;\n\nclass TickerBar extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.setModalVisible = this.setModalVisible.bind(this);\n    this.handleClickChange = this.handleClickChange.bind(this);\n  }\n\n  state = {\n    modalVisible: false\n  };\n\n  componentDidMount() {\n    this.props.fetchTicker(this.props.currentMarket.current, this.props.tokens);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps &&\n      prevProps.currentMarket &&\n      prevProps.currentMarket.current &&\n      prevProps.currentMarket.current !== this.props.currentMarket.current\n    ) {\n      this.props.restTicker();\n      this.props.fetchTicker(\n        this.props.currentMarket.current,\n        this.props.tokens\n      );\n    }\n  }\n\n  setModalVisible(modalVisible) {\n    this.setState({ modalVisible });\n  }\n\n  handleClickChange(visible) {\n    this.setState({\n      modalVisible: visible\n    });\n    tracker.trackEvent({\n      type: 'LOCATION_CHANGE',\n      data: {\n        location: 'market-selection',\n        visible: visible\n      }\n    });\n  }\n\n  render() {\n    const { ticker, currentMarket } = this.props;\n\n    // Find base price\n    const { prices } = this.props.cmcPrice;\n    let price = '-';\n    let priceUnit = this.props.cmcPrice.legal;\n    let priceLabel = <I s=\"Last Price\" />;\n\n    try {\n      const result = prices.filter(\n        x => x.symbol === currentMarket.baseTokenSymbol\n      );\n      price = result[0]['price'];\n    } catch (error) {}\n\n    return (\n      <div\n        style={{\n          borderBottomStyle: 'none'\n        }}\n      >\n        <Menu\n          selectedKeys={[]}\n          mode=\"horizontal\"\n          theme=\"dark\"\n          style={{\n            background: colors.foreground,\n            lineHeight: AppLayout.tickerBarHeight\n          }}\n        >\n          <Menu.Item\n            key=\"current-market\"\n            style={{\n              width: AppLayout.tradePanelWidth,\n              height: '46px',\n              background: '#303249',\n              paddingLeft: AppLayout.sidePadding,\n              paddingRight: AppLayout.sidePadding\n            }}\n          >\n            <Popover\n              overlayClassName=\"marketSelection\"\n              placement=\"bottomLeft\"\n              title={null}\n              content={\n                <MarketSelector\n                  isVisible={this.state.modalVisible}\n                  closePopover={() => {\n                    this.setModalVisible(false);\n                  }}\n                />\n              }\n              trigger=\"click\"\n              visible={this.state.modalVisible}\n              onVisibleChange={this.handleClickChange}\n            >\n              <SelectMarketButton\n                block\n                onClick={() => this.setModalVisible(true)}\n              >\n                <span\n                  style={{\n                    width: '94%',\n                    textAlign: 'left'\n                  }}\n                >\n                  {currentMarket.current}\n                </span>\n                <svg width=\"15px\" height=\"9px\" viewBox=\"0 0 10 6\">\n                  <defs>\n                    <linearGradient\n                      x1=\"0%\"\n                      y1=\"-21.957624%\"\n                      x2=\"100%\"\n                      y2=\"100%\"\n                      id=\"linearGradient-1\"\n                    >\n                      <stop stopColor=\"#00AEF3\" offset=\"0%\"></stop>\n                      <stop stopColor=\"#3750FF\" offset=\"100%\"></stop>\n                    </linearGradient>\n                  </defs>\n                  <g\n                    id=\"控件\"\n                    stroke=\"none\"\n                    strokeWidth=\"1\"\n                    fill=\"none\"\n                    fillRule=\"evenodd\"\n                  >\n                    <g\n                      id=\"选择\"\n                      transform=\"translate(-230.000000, -23.000000)\"\n                      fill=\"url(#linearGradient-1)\"\n                    >\n                      <g id=\"编组-2\">\n                        <g transform=\"translate(8.000000, 13.000000)\">\n                          <g\n                            id=\"Icon/right-Arrow\"\n                            transform=\"translate(227.000000, 11.000000) rotate(-270.000000) translate(-227.000000, -11.000000) translate(223.500000, 6.000000)\"\n                          >\n                            <g\n                              transform=\"translate(3.500000, 5.000000) rotate(-270.000000) translate(-3.500000, -5.000000) translate(-1.000000, 2.000000)\"\n                              id=\"Icon/Up-Arrow\"\n                            >\n                              <path d=\"M0.120616938,5.13596683 L4.1871372,0.18512069 C4.36855783,-0.0357525857 4.68889497,-0.0628236186 4.90263022,0.124655845 C4.92605459,0.145202709 4.9476254,0.167904898 4.96707703,0.192482859 L8.88530375,5.143329 C9.06278977,5.36759014 9.03074631,5.69807569 8.81373269,5.88148914 C8.72305225,5.95812954 8.60951179,6 8.49236581,6 L0.50761884,6 C0.227268696,6 0,5.76514131 0,5.47542843 C0,5.35107753 0.0427473669,5.23077031 0.120616938,5.13596683 Z\"></path>\n                            </g>\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </g>\n                </svg>\n              </SelectMarketButton>\n            </Popover>\n          </Menu.Item>\n          <MenuItem\n            key=\"current-market-trade-price\"\n            selectable={false}\n            style={{\n              paddingLeft: '12px'\n            }}\n          >\n            <RegularTextSpan>{priceLabel}</RegularTextSpan>\n            <MenuHighlightTextSpan>\n              {ticker.close} {currentMarket.quoteTokenSymbol} ({price}{' '}\n              {priceUnit})\n            </MenuHighlightTextSpan>\n          </MenuItem>\n          <MenuItem key=\"current-market-trade-change\" selectable={false}>\n            <RegularTextSpan>\n              <I s=\"24h Change\" />\n            </RegularTextSpan>\n            <MenuHighlightTextSpan\n              style={{\n                color: ticker.percentChange24h.startsWith('-')\n                  ? this.props.colorManager.down\n                  : this.props.colorManager.up\n              }}\n            >\n              {ticker.percentChange24h}\n            </MenuHighlightTextSpan>\n          </MenuItem>\n          <MenuItem key=\"current-market-trade-volume\" selectable={false}>\n            <RegularTextSpan>\n              <I s=\"24h Volume\" />\n            </RegularTextSpan>\n            <MenuHighlightTextSpan>\n              {ticker.volume} {currentMarket.quoteTokenSymbol}\n            </MenuHighlightTextSpan>\n          </MenuItem>\n          <MenuItem key=\"current-market-trade-high\" selectable={false}>\n            <RegularTextSpan>\n              <I s=\"High\" />\n            </RegularTextSpan>\n            <MenuHighlightTextSpan>\n              {ticker.high} {currentMarket.quoteTokenSymbol}\n            </MenuHighlightTextSpan>\n          </MenuItem>\n\n          <MenuItem key=\"current-market-trade-low\">\n            <RegularTextSpan>\n              <I s=\"Low\" />\n            </RegularTextSpan>\n            <MenuHighlightTextSpan>\n              {ticker.low} {currentMarket.quoteTokenSymbol}\n            </MenuHighlightTextSpan>\n          </MenuItem>\n\n          <Menu.Item\n            key=\"market-available\"\n            style={{\n              float: 'right',\n              paddingLeft: '0px',\n              paddingRight: '22px',\n              cursor: 'default'\n            }}\n          >\n            <span\n              style={{\n                paddingLeft: '8px',\n                fontSize: '0.85rem',\n                userSelect: 'none',\n                color: colors.green\n              }}\n            >\n              <BlinkFontAwesomeIcon icon={faDotCircle} />\n              <I s=\"Market Available\" />\n            </span>\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { ticker, currentMarket, cmcPrice, colorManager, exchange } = state;\n  return {\n    ticker,\n    currentMarket,\n    cmcPrice,\n    colorManager,\n    tokens: exchange.tokens\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    restTicker: () => dispatch(restTicker()),\n    fetchTicker: (market, tokens) => dispatch(fetchTicker(market, tokens))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TickerBar);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport { LOGGED_IN } from 'redux/actions/DexAccount';\nimport colors from 'colors';\n\nimport { Button, Col, Row } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faArrowAltCircleDown } from '@fortawesome/free-solid-svg-icons/faArrowAltCircleDown';\nimport { faArrowAltCircleUp } from '@fortawesome/free-solid-svg-icons/faArrowAltCircleUp';\nimport {\n  showDepositModal,\n  showWithdrawModal\n} from 'redux/actions/ModalManager';\n\nimport './AssetPanelButtons.less';\n\nclass AssetPanelButtons extends React.Component {\n  render() {\n    const { dexAccount, market } = this.props;\n    const submitButtonStyle = {\n      color: colors.textWhite,\n      borderWidth: '1px',\n      borderColor: colors.buttonBackground,\n      height: '36px',\n      borderRadius: '0px',\n      fontWeight: '600',\n      fontSize: '0.85rem',\n      backgroundColor: 'transparent',\n      margin: 'auto',\n      padding: '0px'\n    };\n\n    // If account doesn't login, disable buttons\n    let isButtonsDisable = true;\n    if (\n      typeof window.wallet !== 'undefined' &&\n      !!dexAccount &&\n      !!dexAccount.account\n    ) {\n      if (\n        dexAccount.account.keyPairCipherText &&\n        dexAccount.account &&\n        dexAccount.account.accountId\n      ) {\n        isButtonsDisable = false;\n      }\n    }\n\n    let buttons = (\n      <div>\n        <Row\n          className=\"row1\"\n          gutter={4}\n          style={{\n            color: colors.textWhite,\n            paddingTop: '0px' // Overwrite the value in row1\n          }}\n        >\n          <Col className=\"columnLeft\" span={12} style={{}}>\n            <Button\n              className=\"asset-panel-button\"\n              block\n              style={submitButtonStyle}\n              onClick={() => {\n                this.props.showDepositModal(\n                  true,\n                  market.currentMarket.baseTokenSymbol\n                );\n              }}\n              disabled={\n                isButtonsDisable || !this.props.metaMask.isDesiredNetwork\n              }\n            >\n              <FontAwesomeIcon\n                style={{ marginRight: '4px' }}\n                color={colors.green}\n                icon={faArrowAltCircleDown}\n              />\n\n              <I s=\"Deposit\" />\n            </Button>\n          </Col>\n          <Col className=\"columnRight\" span={12}>\n            <Button\n              className=\"asset-panel-button\"\n              block\n              style={submitButtonStyle}\n              onClick={() => {\n                this.props.showWithdrawModal(\n                  true,\n                  market.currentMarket.baseTokenSymbol\n                );\n              }}\n              disabled={\n                isButtonsDisable ||\n                this.props.dexAccount.account.state !== LOGGED_IN ||\n                !this.props.metaMask.isDesiredNetwork\n              }\n            >\n              <FontAwesomeIcon\n                style={{ marginRight: '4px' }}\n                color={colors.red}\n                icon={faArrowAltCircleUp}\n              />\n\n              <I s=\"Withdraw\" />\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n\n    return <div style={{}}>{buttons}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  const { balances, dexAccount, metaMask, market } = state;\n  return { balances, dexAccount, metaMask, market };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showDepositModal: (show, token) => dispatch(showDepositModal(show, token)),\n    showWithdrawModal: (show, token) => dispatch(showWithdrawModal(show, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetPanelButtons);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport colors from 'colors';\nimport config from 'lightcone/config';\n\nimport { Col, Row } from 'antd';\n\nimport AssetPanelButtons from './components/AssetPanelButtons';\n\nimport './AssetPanel.less';\n\nclass AssetPanel extends React.Component {\n  getAvailableAmount = (token, balances) => {\n    const holdBalance = balances.find(ba => ba.tokenId === token.tokenId);\n    return holdBalance\n      ? holdBalance.available\n      : Number(0).toFixed(token.precision);\n  };\n\n  getAvailableTotalInFiat = (token, availableAmount, prices, tokens) => {\n    if (prices) {\n      try {\n        const baseTokenPrice = prices.filter(x => x.symbol === token.symbol)[0][\n          'price'\n        ];\n        let availableTotal = (\n          parseFloat(baseTokenPrice) * parseFloat(availableAmount)\n        ).toFixed(token.precision);\n        return (\n          <div>{`${this.props.cmcPrice.legalPrefix}${availableTotal}`}</div>\n        );\n      } catch (error) {}\n    }\n    return <div>{Number(0).toFixed(token.precision)}</div>;\n  };\n\n  render() {\n    const { balances, market, exchange } = this.props;\n    const { prices } = this.props.cmcPrice;\n\n    let baseTokenAvailableAmount;\n    let baseTokenAvailableTotal;\n    let quoteTokenAvailableAmount;\n    let quoteTokenxAvailableTotal;\n\n    if (\n      balances &&\n      balances.length &&\n      prices &&\n      prices.length &&\n      exchange.tokens\n    ) {\n      const baseToken = config.getTokenBySymbol(\n        market.currentMarket.baseTokenSymbol,\n        exchange.tokens\n      );\n      baseTokenAvailableAmount = this.getAvailableAmount(baseToken, balances);\n      baseTokenAvailableTotal = this.getAvailableTotalInFiat(\n        baseToken,\n        baseTokenAvailableAmount,\n        prices,\n        exchange.tokens\n      );\n\n      const quoteToken = config.getTokenBySymbol(\n        market.currentMarket.quoteTokenSymbol,\n        exchange.tokens\n      );\n      quoteTokenAvailableAmount = this.getAvailableAmount(quoteToken, balances);\n      quoteTokenxAvailableTotal = this.getAvailableTotalInFiat(\n        quoteToken,\n        quoteTokenAvailableAmount,\n        prices,\n        exchange.tokens\n      );\n    } else {\n      baseTokenAvailableAmount = <div>-</div>;\n      baseTokenAvailableTotal = <div>&nbsp;</div>;\n      quoteTokenAvailableAmount = <div>-</div>;\n      quoteTokenxAvailableTotal = <div>&nbsp;</div>;\n    }\n\n    const header = (\n      <div className=\"header\">\n        <Row className=\"row\">\n          <Col span={8}>\n            <div\n              className=\"columnLeft\"\n              style={{ userSelect: 'none', color: colors.textDim }}\n            >\n              <I s=\"Asset\" />\n            </div>\n          </Col>\n          <Col span={16}>\n            <div\n              className=\"columnRight\"\n              style={{ userSelect: 'none', color: colors.textDim }}\n            >\n              <I s=\"Available Balance\" />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n\n    return (\n      <div className=\"asset-panel\">\n        {header}\n        <div className=\"body\">\n          <Row\n            className=\"row\"\n            gutter={16}\n            style={{\n              color: colors.textWhite,\n              fontSize: '0.9rem',\n              paddingTop: '16px',\n              paddingBottom: '0px'\n            }}\n          >\n            <Col className=\"columnLeft\" span={12} style={{}}>\n              {this.props.market.currentMarket.baseTokenSymbol}\n            </Col>\n            <Col\n              className=\"columnRight\"\n              span={12}\n              style={{\n                fontWeight: '600',\n                fontSize: '0.9rem',\n                color: colors.textWhite\n              }}\n            >\n              {baseTokenAvailableAmount}\n            </Col>\n          </Row>\n          <Row\n            className=\"row\"\n            gutter={16}\n            style={{\n              color: colors.textWhite,\n              paddingTop: '0px',\n              paddingBottom: '0px'\n            }}\n          >\n            <Col className=\"columnLeft\" span={12}></Col>\n            <Col\n              className=\"columnRight\"\n              span={12}\n              style={{\n                fontWeight: '600',\n                fontSize: '0.9rem',\n                color: colors.textDim\n              }}\n            >\n              {baseTokenAvailableTotal}\n            </Col>\n          </Row>\n          <Row\n            className=\"row\"\n            gutter={16}\n            style={{\n              color: colors.textWhite,\n              fontSize: '0.9rem',\n              paddingTop: '16px',\n              paddingBottom: '0px'\n            }}\n          >\n            <Col className=\"columnLeft\" span={12} style={{}}>\n              {this.props.market.currentMarket.quoteTokenSymbol}\n            </Col>\n            <Col\n              className=\"columnRight\"\n              span={12}\n              style={{\n                fontSize: '0.9rem',\n                fontWeight: '600',\n                color: colors.textWhite\n              }}\n            >\n              {quoteTokenAvailableAmount}\n            </Col>\n          </Row>\n          <Row\n            className=\"row\"\n            gutter={16}\n            style={{\n              color: colors.textWhite,\n              fontSize: '0.9rem',\n              paddingTop: '0px',\n              paddingBottom: '16px'\n            }}\n          >\n            <Col className=\"columnLeft\" span={12}></Col>\n            <Col\n              className=\"columnRight\"\n              span={12}\n              style={{\n                fontWeight: '600',\n                fontSize: '0.9rem',\n                color: colors.textDim\n              }}\n            >\n              {quoteTokenxAvailableTotal}\n            </Col>\n          </Row>\n          <AssetPanelButtons />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { balances, market, cmcPrice, exchange } = state;\n  return {\n    balances: balances.balances,\n    market,\n    cmcPrice,\n    exchange\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetPanel);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\nimport colors from 'colors';\n\nimport { Button, Col, Row } from 'antd';\nimport { updateTradeType } from 'redux/actions/TradePanel';\n\nclass TradeTabButtons extends React.Component {\n  clickedBuyButton = () => {\n    this.props.updateTradeType('buy');\n  };\n\n  clickedSellButton = () => {\n    this.props.updateTradeType('sell');\n  };\n\n  render() {\n    const isBuy = this.props.tradeType === 'buy';\n    const isSell = this.props.tradeType === 'sell';\n\n    const buttonStyle = {\n      color: colors.textBright,\n      borderStyle: 'none',\n      height: '32px',\n      borderRadius: '4px',\n      fontWeight: '600',\n      fontSize: '0.85rem',\n      textTransform: 'uppercase'\n    };\n\n    const buyButtonActiveStyle = {\n      ...buttonStyle,\n      background: this.props.buyPrimaryColor\n    };\n\n    const sellButtonActiveStyle = {\n      ...buttonStyle,\n      background: this.props.sellPrimaryColor\n    };\n\n    const buttonInactiveStyle = {\n      ...buttonStyle,\n      backgroundColor: colors.buttonBackground,\n      color: colors.textWhite,\n      height: '32px',\n      borderRadius: '4px'\n    };\n\n    return (\n      <div>\n        <Row\n          gutter={0}\n          style={{\n            paddingTop: '0px',\n            paddingBottom: '0px',\n            color: colors.textWhite,\n            backgroundColor: colors.buttonBackground,\n            borderRadius: '4px'\n          }}\n        >\n          <Col className=\"columnLeft\" span={12} style={{}}>\n            <Button\n              className={isBuy ? 'deposit-button' : 'logout-button'}\n              block\n              style={isBuy ? buyButtonActiveStyle : buttonInactiveStyle}\n              onClick={this.clickedBuyButton}\n            >\n              <I s=\"Buy\" />\n            </Button>\n          </Col>\n          <Col className=\"columnRight\" span={12}>\n            <Button\n              className={isSell ? 'withdraw-button' : 'logout-button'}\n              block\n              style={isSell ? sellButtonActiveStyle : buttonInactiveStyle}\n              onClick={this.clickedSellButton}\n            >\n              <I s=\"Sell\" />\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { colorManager } = state;\n  const { tradeType } = state.tradePanel;\n  return {\n    buyPrimaryColor: colorManager.buyPrimary,\n    sellPrimaryColor: colorManager.sellPrimary,\n    tradeType\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTradeType: tradeType => dispatch(updateTradeType(tradeType))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TradeTabButtons);\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport AppLayout from 'AppLayout';\nimport colors from 'colors';\n\nimport { ActionButton } from 'styles/Styles';\nimport { Button, Col, Form, Row, Spin } from 'antd';\n\nimport { showEnterPasswordModal } from 'redux/actions/ModalManager';\n\nimport { getOrderId, submitOrderToLightcone } from 'lightcone/api/LightconeAPI';\nimport { updateAmount, updatePrice } from 'redux/actions/TradePanel';\nimport AssetPanel from 'pages/trade/asset-panel/AssetPanel';\nimport NumericInput from 'components/NumericInput';\nimport TradeTabButtons from './components/TradeTabButtons';\n\nimport { LOGGED_IN } from 'redux/actions/DexAccount';\nimport { decrypt } from 'modals/components/utils';\nimport { formatter } from 'lightcone/common';\nimport config from 'lightcone/config';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons/faCircleNotch';\nimport { faEthereum } from '@fortawesome/free-brands-svg-icons/faEthereum';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\nimport { getEtherscanLink } from 'lightcone/api/localStorgeAPI';\nimport { notifyError, notifySuccess } from 'redux/actions/Notification';\nconst BigNumber = require('bignumber.js');\n\nconst EthereumIconWrapper = styled.div`\n  color: ${colors.textDim}\n  font-size: 0.85rem;\n  user-select: none;\n  text-align: center;\n  margin-top: 100px;\n\n  @media (max-height: 1000px) {\n    display: none;\n  }\n`;\n\nconst PercentageButton = styled(Button)`\nborder: none!important;\nwidth: 56px!important;\nfont-size: 0.85rem!important;\nmargin: 0!important;\ncolor: ${colors.textWhite}\nbackground: #292c42;\npadding-top: 2px!important;\npadding-bottom: 2px!important;\nline-height: 1rem!important;\n\n&[disabled],&[disabled]:hover {\n color: ${colors.textDim}!important;\n background: #292c42!important;\n}\n\n&:hover {\n  color: ${colors.textBright}!important;\n  background: ${colors.theme}!important;\n}\n\n`;\n\nclass TradePanel extends React.Component {\n  state = {\n    waitingForPassword: false,\n    validatePrice: true,\n    baseAmountValidate: true,\n    quoteAmountValidate: true,\n    errorMessage1: '',\n    errorToken: '',\n    errorMessage2: '',\n    loading: false,\n    isBuy: true,\n    sellToken: '-'\n  };\n\n  componentDidMount() {\n    const { tradePanel } = this.props;\n    const isBuy = tradePanel.tradeType.toLowerCase() === 'buy';\n    const sellToken = isBuy\n      ? this.props.currentMarket.quoteTokenSymbol\n      : this.props.currentMarket.baseTokenSymbol;\n    this.setState({ sellToken, isBuy });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    var inputPrecision;\n\n    if (\n      this.props.balances !== prevProps.balances ||\n      prevProps.tradePanel !== this.props.tradePanel ||\n      prevProps.currentMarket.current !== this.props.currentMarket.current\n    ) {\n      const { currentMarket, tradePanel, exchange } = this.props;\n      const tokens = currentMarket.current.split('-');\n      const isBuy = tradePanel.tradeType.toLowerCase() === 'buy';\n      const sellToken = isBuy ? tokens[1] : tokens[0];\n\n      const baseToken = config.getTokenBySymbol(\n        currentMarket.baseTokenSymbol,\n        exchange.tokens\n      );\n\n      const quoteToken = config.getTokenBySymbol(\n        currentMarket.quoteTokenSymbol,\n        exchange.tokens\n      );\n\n      if (baseToken.symbol && quoteToken.symbol) {\n        let errorMessage1 = '';\n        let errorToken = '';\n        let errorMessage2 = '';\n\n        let priceValidate =\n          !tradePanel.price || parseFloat(tradePanel.price) >= 0;\n\n        // Check the decimal points in price input.\n        if (\n          priceValidate &&\n          tradePanel.price &&\n          tradePanel.price.split('.').length === 2\n        ) {\n          inputPrecision = tradePanel.price.split('.')[1].length;\n          const marketConfig = config.getMarketByPair(\n            currentMarket.current,\n            exchange.markets\n          );\n          const { precisionForPrice } = marketConfig;\n          if (\n            inputPrecision > precisionForPrice ||\n            (parseFloat(tradePanel.price) === 0 &&\n              inputPrecision === precisionForPrice)\n          ) {\n            errorMessage1 = 'Maximum_price_input_decimal_part_1';\n            errorToken = `${precisionForPrice}`;\n            errorMessage2 = 'Maximum_input_decimal_part_2';\n            priceValidate = false;\n          }\n        }\n\n        // Start checking amount\n        const baseAmount = parseFloat(tradePanel.amount);\n        const quoteAmount =\n          !!tradePanel.amount &&\n          baseAmount > 0 &&\n          !!tradePanel.price &&\n          parseFloat(tradePanel.price) > 0\n            ? formatter\n                .toBig(baseAmount)\n                .times(tradePanel.price)\n                .toNumber()\n            : 0;\n\n        const minBaseAmount = Number(\n          config.fromWEI(\n            baseToken.symbol,\n            baseToken.minOrderAmount,\n            exchange.tokens\n          )\n        );\n        const maxBaseAmount = Number(\n          config.fromWEI(\n            baseToken.symbol,\n            baseToken.maxOrderAmount,\n            exchange.tokens\n          )\n        );\n\n        const minQuoteAmount = Number(\n          config.fromWEI(\n            quoteToken.symbol,\n            quoteToken.minOrderAmount,\n            exchange.tokens\n          )\n        );\n\n        const maxQuoteAmount = Number(\n          config.fromWEI(\n            quoteToken.symbol,\n            quoteToken.maxOrderAmount,\n            exchange.tokens\n          )\n        );\n\n        let baseAmountValidate =\n          !tradePanel.amount ||\n          baseAmount === 0 ||\n          (baseAmount >= minBaseAmount && baseAmount <= maxBaseAmount);\n\n        let quoteAmountValidate =\n          quoteAmount === 0 ||\n          (quoteAmount >= minQuoteAmount && quoteAmount <= maxQuoteAmount);\n\n        if (priceValidate && !baseAmountValidate) {\n          if (baseAmount < minBaseAmount) {\n            errorMessage1 = 'Minimum_order_size';\n            errorToken = ` ${minBaseAmount} ${baseToken.symbol}`;\n          } else if (baseAmount > maxBaseAmount) {\n            errorMessage1 = 'Maximum_order_size';\n            errorToken = ` ${maxBaseAmount} ${baseToken.symbol}`;\n          }\n        }\n\n        if (baseAmountValidate && !quoteAmountValidate) {\n          if (quoteAmount < minQuoteAmount) {\n            errorMessage1 = 'Minimum_order_size';\n            errorToken = ` ${minQuoteAmount} ${quoteToken.symbol}`;\n          } else if (quoteAmount > maxQuoteAmount) {\n            errorMessage1 = 'Maximum_order_size';\n            errorToken = ` ${maxQuoteAmount} ${quoteToken.symbol}`;\n          }\n        }\n\n        if (\n          priceValidate &&\n          !!tradePanel.price &&\n          !!tradePanel.amount &&\n          baseAmountValidate &&\n          quoteAmountValidate\n        ) {\n          const amount =\n            tradePanel.tradeType === 'sell' ? baseAmount : quoteAmount;\n          if (tradePanel.tradeType === 'sell') {\n            baseAmountValidate =\n              amount <= this.getAvailableAmount(sellToken, this.props.balances);\n            if (!baseAmountValidate) {\n              errorMessage1 = 'Your balance is insufficient!';\n            }\n          } else {\n            quoteAmountValidate =\n              amount <= this.getAvailableAmount(sellToken, this.props.balances);\n            if (!quoteAmountValidate) {\n              errorMessage1 = 'Your balance is insufficient!';\n            }\n          }\n        }\n\n        // Check the decimal points in amount input.\n        if (\n          baseAmountValidate &&\n          baseAmountValidate &&\n          tradePanel.amount &&\n          tradePanel.amount.split('.').length === 2\n        ) {\n          inputPrecision = tradePanel.amount.split('.')[1].length;\n          const precision = (baseToken && baseToken.precision) || 6;\n          if (\n            inputPrecision > precision ||\n            (parseFloat(tradePanel.amount) === 0 &&\n              inputPrecision === precision)\n          ) {\n            errorMessage1 = 'Maximum_amount_input_decimal_part_1';\n            errorToken = `${precision}`;\n            errorMessage2 = 'Maximum_input_decimal_part_2';\n            baseAmountValidate = false;\n          }\n        }\n\n        this.setState({\n          sellToken,\n          isBuy,\n          validatePrice: priceValidate,\n          baseAmountValidate,\n          quoteAmountValidate,\n          errorMessage1,\n          errorToken,\n          errorMessage2\n        });\n      }\n    }\n\n    if (\n      prevProps.modalManager.isEnterPasswordModalVisible !==\n        this.props.modalManager.isEnterPasswordModalVisible &&\n      this.props.modalManager.isEnterPasswordModalVisible === false &&\n      this.state.waitingForPassword === true\n    ) {\n      // Try to submit order again after users enter password.\n      this.setState(\n        {\n          waitingForPassword: false\n        },\n        () => {\n          this.pressedButton();\n        }\n      );\n    }\n  }\n\n  getAvailableAmount = (symbol, balances) => {\n    const { tokens } = this.props.exchange;\n    const selectedToken = config.getTokenBySymbol(symbol, tokens);\n    const holdBalance = balances.find(\n      ba => ba.tokenId === selectedToken.tokenId\n    );\n    try {\n      return holdBalance ? Number(holdBalance.available) : 0;\n    } catch {\n      return 0;\n    }\n  };\n\n  onPriceValueChange = value => {\n    const validate = value && parseFloat(value) >= 0;\n    if (validate === false) {\n      return;\n    }\n    this.props.updatePrice(value);\n  };\n\n  onAmountValueChange = value => {\n    this.props.updateAmount(value);\n  };\n\n  validatePrice = () => {\n    if (\n      this.props.tradePanel.price &&\n      parseFloat(this.props.tradePanel.price) > 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  validateAmount = () => {\n    if (\n      this.props.tradePanel.amount &&\n      parseFloat(this.props.tradePanel.amount) > 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  submitOrder = () => {\n    this.setState({\n      loading: true\n    });\n\n    (async () => {\n      try {\n        const { tradePanel, exchange } = this.props;\n        const { amount, price } = tradePanel;\n        const baseTokenSymbol = this.props.currentMarket.baseTokenSymbol;\n        const quoteTokenSymbol = this.props.currentMarket.quoteTokenSymbol;\n\n        const baseToken = config.getTokenBySymbol(\n          baseTokenSymbol,\n          exchange.tokens\n        );\n        const quoteToken = config.getTokenBySymbol(\n          quoteTokenSymbol,\n          exchange.tokens\n        );\n\n        // Amount is always in base token\n        const amountInBigNumber = new BigNumber(amount);\n\n        const isBuy = this.props.tradePanel.tradeType === 'buy';\n\n        var tokenS;\n        var tokenSId;\n\n        var tokenB;\n\n        var amountS = 0;\n        var amountB = 0;\n\n        if (isBuy) {\n          // Buying means selling ETH to get LRC. User enter LRC amount\n          tokenS = quoteTokenSymbol;\n          tokenSId = quoteToken.tokenId;\n          amountS = amountInBigNumber.times(price).toFixed();\n\n          tokenB = baseTokenSymbol;\n          amountB = amountInBigNumber.toFixed();\n        } else {\n          // Selling means selling LRC to get ETH. User enter LRC amount\n          tokenS = baseTokenSymbol;\n          tokenSId = baseToken.tokenId;\n          amountS = amountInBigNumber.toFixed();\n\n          tokenB = quoteTokenSymbol;\n          amountB = amountInBigNumber.times(price).toFixed();\n        }\n\n        // Use password to decode\n        if (this.props.dexAccount.account.password === null) {\n          throw new Error('Invalid password! Please try again!');\n        }\n        const keyPairCipherText = this.props.dexAccount.account\n          .keyPairCipherText;\n        const tradingPrivKey = decrypt(\n          keyPairCipherText,\n          this.props.dexAccount.account.password\n        );\n        if (tradingPrivKey === null) {\n          throw new Error('Invalid password! Please try again!');\n        }\n\n        // Get order id\n        const accountId = this.props.dexAccount.account.accountId;\n        const apiKey = this.props.dexAccount.account.apiKey;\n        // Use token sell id\n        const orderId = await getOrderId(accountId, tokenSId, apiKey);\n\n        // Timestamp in second\n        const validSince = new Date().getTime() / 1000 - 3600;\n        const validUntil = new Date().getTime() / 1000 + 3600 * 24 * 30;\n\n        const signedOrder = window.wallet.submitOrder(\n          exchange.tokens,\n          exchange.exchangeId,\n          tokenS,\n          tokenB,\n          amountS,\n          amountB,\n          orderId,\n          validSince,\n          validUntil,\n          config.getLabel(),\n          isBuy,\n          config.getChannelId()\n        );\n\n        await submitOrderToLightcone(signedOrder, apiKey);\n\n        // Reset trade form\n        this.props.updateAmount('');\n        notifySuccess(<I s=\"Your order has been submitted.\" />);\n      } catch (err) {\n        console.log(err);\n        notifyError(<I s=\"Failed to submit your order.\" />);\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    })();\n  };\n\n  pressedButton = () => {\n    if (this.validatePrice() === false) {\n      this.setState({\n        validatePrice: false\n      });\n      return;\n    } else {\n      this.setState({\n        validatePrice: true\n      });\n    }\n\n    if (this.validateAmount() === false) {\n      this.setState({\n        validateAmount: false\n      });\n      return;\n    } else {\n      this.setState({\n        validateAmount: true\n      });\n    }\n\n    if (this.props.dexAccount.account.password === null) {\n      this.setState({\n        waitingForPassword: true\n      });\n      this.props.showEnterPasswordModal(true);\n    } else {\n      this.submitOrder();\n    }\n  };\n\n  hangleAmountPercentage = percentage => {\n    const { sellToken, isBuy } = this.state;\n    const {\n      balances,\n      tradePanel,\n      exchange: { tokens }\n    } = this.props;\n\n    const price =\n      tradePanel.price && Number(tradePanel.price) > 0\n        ? Number(tradePanel.price)\n        : 0;\n    const availableAmount = isBuy\n      ? price\n        ? this.getAvailableAmount(sellToken, balances) / price\n        : 0\n      : this.getAvailableAmount(sellToken, balances);\n\n    const amount = availableAmount * percentage;\n    // Use base token precision to floor amount input\n    const baseToken = config.getTokenBySymbol(\n      this.props.currentMarket.baseTokenSymbol,\n      tokens\n    );\n    const scale = Math.pow(10, baseToken.precision);\n    this.props.updateAmount(Math.floor(amount * scale) / scale);\n  };\n\n  render() {\n    const { isBuy } = this.state;\n    const { currentMarket, exchange } = this.props;\n    const marketConfig = config.getMarketByPair(\n      currentMarket.current,\n      exchange.markets\n    );\n    const baseTokenSymbol = this.props.currentMarket.baseTokenSymbol;\n    const quoteTokenSymbol = this.props.currentMarket.quoteTokenSymbol;\n    const baseToken = config.getTokenBySymbol(baseTokenSymbol, exchange.tokens);\n    const quoteToken = config.getTokenBySymbol(\n      quoteTokenSymbol,\n      exchange.tokens\n    );\n    const disabled =\n      !marketConfig ||\n      !marketConfig.enabled ||\n      this.props.dexAccount.account.state !== LOGGED_IN ||\n      !this.props.metaMask.isDesiredNetwork ||\n      !this.state.baseAmountValidate ||\n      !this.state.quoteAmountValidate ||\n      !this.state.validatePrice ||\n      !this.props.tradePanel.price ||\n      parseFloat(this.props.tradePanel.price) === 0 ||\n      !this.props.tradePanel.amount ||\n      parseFloat(this.props.tradePanel.amount) === 0;\n\n    const percentageButtonDisabled =\n      isBuy &&\n      (!this.props.tradePanel.price || this.props.tradePanel.price <= 0);\n\n    const buyOrSellButton = isBuy ? (\n      <ActionButton\n        block\n        buttonbackground={this.props.buyPrimaryColor}\n        disabled={disabled}\n        onClick={() => this.pressedButton()}\n      >\n        <I s=\"Buy\" />\n        &nbsp; {baseTokenSymbol}\n      </ActionButton>\n    ) : (\n      <ActionButton\n        block\n        buttonbackground={this.props.sellPrimaryColor}\n        disabled={disabled}\n        onClick={() => this.pressedButton()}\n      >\n        <I s=\"Sell\" />\n        &nbsp; {baseTokenSymbol}\n      </ActionButton>\n    );\n\n    return (\n      <div\n        style={{\n          height: AppLayout.mainScreenHeight,\n          backgroundColor: '#303249',\n          overflow: 'scroll'\n        }}\n      >\n        <div\n          style={{\n            padding: `16px ${AppLayout.sidePadding} 0px`\n          }}\n        >\n          <AssetPanel />\n        </div>\n        <div\n          style={{\n            padding: `16px ${AppLayout.sidePadding} 0px`\n          }}\n        >\n          <div\n            style={{\n              paddingTop: '0px',\n              paddingBottom: '0px'\n            }}\n          >\n            <TradeTabButtons />\n            <div\n              style={{\n                marginBottom: '10px'\n              }}\n            >\n              <Form>\n                <div\n                  style={{\n                    paddingTop: '16px',\n                    paddingBottom: '4px',\n                    paddingLeft: '0px',\n                    fontSize: '0.9rem',\n                    userSelect: 'none',\n                    fontWeight: '400',\n                    color: colors.textDim\n                  }}\n                >\n                  <I s=\"Price\" />\n                </div>\n                <Form.Item\n                  style={{\n                    paddingTop: '0px',\n                    paddingBottom: '16px'\n                  }}\n                  colon={false}\n                >\n                  <NumericInput\n                    decimals={\n                      (marketConfig && marketConfig.precisionForPrice) || 6\n                    }\n                    color={\n                      this.state.validatePrice ? colors.textWhite : colors.red\n                    }\n                    borderColor={\n                      this.state.validatePrice ? colors.border : colors.red\n                    }\n                    value={this.props.tradePanel.price}\n                    onChange={this.onPriceValueChange}\n                    suffix={quoteTokenSymbol}\n                    disabled={this.props.dexAccount.account.state !== LOGGED_IN}\n                  />\n                </Form.Item>\n                <div\n                  style={{\n                    paddingTop: '0px',\n                    paddingBottom: '4px',\n                    paddingLeft: '0px',\n                    userSelect: 'none',\n                    fontSize: '0.9rem',\n                    color: colors.textDim\n                  }}\n                >\n                  <I s=\"Amount\" />\n                </div>\n                <Form.Item\n                  style={{\n                    paddingBottom: '16px'\n                  }}\n                  colon={false}\n                >\n                  <NumericInput\n                    decimals={(baseToken && baseToken.precision) || 6}\n                    color={\n                      this.state.baseAmountValidate\n                        ? colors.textWhite\n                        : colors.red\n                    }\n                    borderColor={\n                      this.state.baseAmountValidate ? colors.border : colors.red\n                    }\n                    value={this.props.tradePanel.amount}\n                    onChange={this.onAmountValueChange}\n                    suffix={baseTokenSymbol}\n                    disabled={this.props.dexAccount.account.state !== LOGGED_IN}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '4px',\n                      display: 'flex',\n                      justifyContent: 'space-between'\n                    }}\n                  >\n                    <PercentageButton\n                      disabled={percentageButtonDisabled}\n                      onClick={() => this.hangleAmountPercentage(0.25)}\n                    >\n                      25%\n                    </PercentageButton>\n                    <PercentageButton\n                      disabled={percentageButtonDisabled}\n                      onClick={() => this.hangleAmountPercentage(0.5)}\n                    >\n                      50%\n                    </PercentageButton>\n                    <PercentageButton\n                      disabled={percentageButtonDisabled}\n                      onClick={() => this.hangleAmountPercentage(0.75)}\n                    >\n                      75%\n                    </PercentageButton>\n                    <PercentageButton\n                      disabled={percentageButtonDisabled}\n                      onClick={() => this.hangleAmountPercentage(1)}\n                    >\n                      100%\n                    </PercentageButton>\n                  </div>\n                </Form.Item>\n                <div\n                  style={{\n                    paddingTop: '0px',\n                    paddingBottom: '4px',\n                    paddingLeft: '0px',\n                    userSelect: 'none',\n                    fontSize: '0.9rem',\n                    color: colors.textDim\n                  }}\n                >\n                  <Row className=\"row\">\n                    <Col span={8}>\n                      <div className=\"columnLeft\">\n                        <I s=\"Total\" />\n                      </div>\n                    </Col>\n                    <Col span={16}>\n                      <div\n                        className=\"columnRight\"\n                        style={{\n                          fontWeight: '600',\n                          textAlign: 'right',\n                          fontSize: '0.9rem',\n                          color: colors.textWhite\n                        }}\n                      >\n                        {!!this.props.tradePanel.price &&\n                        !!this.props.tradePanel.amount\n                          ? Number(\n                              new BigNumber(this.props.tradePanel.price)\n                                .times(this.props.tradePanel.amount)\n                                .toFixed(\n                                  (quoteToken && quoteToken.precision) || 6\n                                )\n                            )\n                          : Number(0).toFixed(\n                              (quoteToken && quoteToken.precision) || 6\n                            )}{' '}\n                        {quoteTokenSymbol}\n                      </div>\n                    </Col>\n                  </Row>\n                </div>\n                <div\n                  style={{\n                    fontSize: '0.85rem',\n                    color: colors.red,\n                    height: '24px',\n                    fontWeight: '600'\n                  }}\n                >\n                  {this.props.dexAccount.account.state === LOGGED_IN &&\n                    (!this.state.baseAmountValidate ||\n                      !this.state.quoteAmountValidate ||\n                      !this.state.validatePrice) && (\n                      <div>\n                        <FontAwesomeIcon\n                          style={{ marginRight: '8px' }}\n                          size=\"1x\"\n                          icon={faExclamationTriangle}\n                        />\n                        <I s={this.state.errorMessage1} />\n                        {this.state.errorToken}\n                        <I s={this.state.errorMessage2} />\n                      </div>\n                    )}\n                </div>\n              </Form>\n            </div>\n          </div>\n          <Spin\n            spinning={this.state.loading}\n            indicator={<FontAwesomeIcon icon={faCircleNotch} spin />}\n          >\n            {buyOrSellButton}\n          </Spin>\n        </div>\n        <EthereumIconWrapper>\n          <a\n            style={{ color: colors.textDim }}\n            href={`${getEtherscanLink(this.props.exchange.chainId)}/address/${\n              exchange.exchangeAddress\n            }`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon\n              size=\"3x\"\n              style={{ opacity: 0.5, marginBottom: '8px' }}\n              icon={faEthereum}\n            />\n            <div>\n              <I s=\"Powered by Ethereum & Loopring\" />\n            </div>\n          </a>\n        </EthereumIconWrapper>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    currentMarket,\n    tradePanel,\n    Web3,\n    dexAccount,\n    balances,\n    modalManager,\n    colorManager,\n    metaMask,\n    myOrders,\n    exchange\n  } = state;\n\n  return {\n    currentMarket,\n    tradePanel,\n    Web3,\n    dexAccount,\n    balances: balances.balances,\n    modalManager,\n    buyPrimaryColor: colorManager.buyPrimary,\n    sellPrimaryColor: colorManager.sellPrimary,\n    metaMask,\n    myOrders,\n    exchange\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAmount: amount => dispatch(updateAmount(amount)),\n    updatePrice: price => dispatch(updatePrice(price)),\n    showEnterPasswordModal: show => dispatch(showEnterPasswordModal(show))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TradePanel);\n","import { getCandlestick } from 'lightcone/api/LightconeAPI';\nimport lightcone_v3_config from 'lightcone/config';\n\nconst supportedResolutions = ['1', '15', '240', 'D', '6D'];\n\nconst config = {\n  supported_resolutions: supportedResolutions\n};\n\nexport default class DataFeed {\n  constructor(tokens) {\n    this.tokens = tokens;\n  }\n\n  onReady(cb) {\n    setTimeout(() => cb(config), 0);\n  }\n\n  searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {}\n\n  resolveSymbol(symbolName, onSymbolResolvedCallback, onResolveErrorCallback) {\n    // expects a symbolInfo object in response\n    var symbol_stub = {\n      name: symbolName,\n      description: '',\n      type: 'crypto',\n      session: '24x7',\n      timezone: 'Etc/UTC',\n      exchange: '',\n      minmov: 1,\n      pricescale: 1000000,\n      has_intraday: true,\n      intraday_multipliers: ['1'],\n      supported_resolution: supportedResolutions,\n      volume_precision: 2,\n      data_status: 'streaming'\n    };\n\n    /*\n    var split_data = symbolName.split(/[:/]/);\n\t\tif (split_data[2].match(/USD|EUR|JPY|AUD|GBP|KRW|CNY/)) {\n\t\t\tsymbol_stub.pricescale = 100\n    }\n    */\n\n    setTimeout(function() {\n      onSymbolResolvedCallback(symbol_stub);\n    }, 0);\n\n    // onResolveErrorCallback('Not feeling it today')\n  }\n\n  getBars(\n    symbolInfo,\n    resolution,\n    from,\n    to,\n    onHistoryCallback,\n    onErrorCallback,\n    firstDataRequest\n  ) {\n    let market = symbolInfo['name'];\n\n    (async () => {\n      try {\n        // Only 1hr returns data\n        var candles = await getCandlestick(market, '1hr');\n        candles.reverse();\n\n        let startTimestamp;\n        let endTimestamp;\n        let quoteToken;\n        let i;\n\n        var newCandles = {};\n        for (i = 0; i < candles.length; i = i + 1) {\n          const candle = candles[i];\n          const tokens = market.split('-');\n          quoteToken = tokens[1];\n\n          if (startTimestamp === undefined) {\n            startTimestamp = candle['start'];\n          } else {\n            endTimestamp = candle['start'];\n          }\n\n          const start = candle['start'];\n\n          let parsedCandle = {\n            time: start,\n            low: Number(candle['low']),\n            high: Number(candle['high']),\n            open: Number(candle['open']),\n            close: Number(candle['close']),\n            volume: Number(\n              lightcone_v3_config.fromWEI(\n                quoteToken,\n                candle['volume'],\n                this.tokens\n              )\n            )\n          };\n          newCandles[start] = parsedCandle;\n        }\n\n        var newMoreCandles = [];\n        var lastCandle = newCandles[startTimestamp];\n        for (i = startTimestamp; i <= endTimestamp; i = i + 3600000) {\n          if (newCandles[i] === undefined) {\n            lastCandle['time'] = i;\n            newMoreCandles.push(Object.assign({}, lastCandle));\n          } else {\n            const candle = newCandles[i];\n            newMoreCandles.push(candle);\n            lastCandle = {\n              time: candle['start'],\n              low: Number(candle['close']),\n              high: Number(candle['close']),\n              open: Number(candle['close']),\n              close: Number(candle['close']),\n              volume: 0\n            };\n          }\n        }\n\n        if (firstDataRequest) {\n          if (newMoreCandles) {\n            onHistoryCallback(newMoreCandles, {\n              noData: false\n            });\n          } else {\n            onHistoryCallback(newMoreCandles, {\n              noData: true\n            });\n          }\n        }\n      } catch (error) {}\n    })();\n  }\n  subscribeBars(\n    symbolInfo,\n    resolution,\n    onRealtimeCallback,\n    subscribeUID,\n    onResetCacheNeededCallback\n  ) {\n    // TradingView JS API集成教程(三)：第2部分-实时图表更新\n    // https://www.jianshu.com/p/49cdc530262d\n  }\n  unsubscribeBars(subscriberUID) {}\n  calculateHistoryDepth(resolution, resolutionBack, intervalBack) {\n    // https://github.com/tradingview/charting_library/wiki/JS-Api#calculatehistorydepthresolution-resolutionback-intervalback\n    // while optional, this makes sure we request 24 hours of minute data at a time\n    // CryptoCompare's minute data endpoint will throw an error if we request data beyond 7 days in the past, and return no data\n    return resolution < 60\n      ? { resolutionBack: 'D', intervalBack: '14' }\n      : undefined;\n  }\n  getMarks(symbolInfo, startDate, endDate, onDataCallback, resolution) {}\n  getTimeScaleMarks(\n    symbolInfo,\n    startDate,\n    endDate,\n    onDataCallback,\n    resolution\n  ) {}\n  getServerTime(cb) {}\n}\n","import './PriceChart.less';\nimport * as React from 'react';\nimport { widget } from '../../../charting_library/charting_library.min';\nimport colors from 'colors';\n\nimport DataFeed from './api/';\n\n// Tutorial: https://medium.com/@jonchurch/tradingview-charting-library-js-api-setup-for-crypto-part-1-57e37f5b3d5a\nexport class PriceChart extends React.PureComponent {\n  static defaultProps = {\n    interval: '1',\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    language: 'en',\n    containerId: 'tv_chart_container',\n    datafeedUrl: 'https://demo_feed.tradingview.com',\n    libraryPath: '/charting_library/',\n    chartsStorageUrl: 'https://saveload.tradingview.com',\n    chartsStorageApiVersion: '1.1',\n    clientId: 'tradingview.com',\n    userId: 'public_user_id',\n    fullscreen: false,\n    autosize: true,\n    studiesOverrides: {\n      'moving average exponential.plot.color': '#696A9B',\n      'moving average exponential.plot.linewidth': 2,\n      'moving average exponential.precision': 6,\n      'volume.volume ma.transparency': 100,\n      'volume.show ma': false\n    }\n  };\n\n  tvWidget = null;\n\n  componentDidMount() {\n    this.initTvWidget(this.props.tokens);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.market !== this.props.market ||\n      this.props.tokens !== prevProps.tokens\n    ) {\n      // https://github.com/tradingview/charting_library/wiki/Chart-Methods\n      // this.tvWidget.setSymbol(this.props.market, this.props.interval, () => {\n      //   console.log('Reload completed. this.tvWidget', this.tvWidget);\n      // });\n      this.initTvWidget(this.props.tokens);\n    }\n    if (\n      prevProps.upColor !== this.props.upColor ||\n      prevProps.downColor !== this.props.downColor\n    ) {\n      this.initTvWidget(this.props.tokens);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.tvWidget !== null) {\n      this.tvWidget.remove();\n      this.tvWidget = null;\n    }\n  }\n\n  initTvWidget(tokens) {\n    const widgetOptions = {\n      debug: false,\n      symbol: this.props.market,\n      // BEWARE: no trailing slash is expected in feed URL\n      datafeed: new DataFeed(tokens),\n      // https://github.com/tradingview/charting_library/wiki/Resolution\n      interval: this.props.interval,\n\n      timezone: this.props.timezone,\n      container_id: this.props.containerId,\n      library_path: this.props.libraryPath,\n\n      // https://github.com/tradingview/charting_library/wiki/Localization\n      locale: this.props.language,\n\n      // https://github.com/tradingview/charting_library/wiki/Featuresets\n      disabled_features: [\n        'display_market_status',\n        // \"create_volume_indicator_by_default\", volume\n        // 'volume_force_overlay', // k线与销量分开\n        // 'create_volume_indicator_by_default_once',\n        'header_symbol_search', // 搜索栏\n        'header_screenshot', // 照相机\n        'header_fullscreen_button', // 全屏按钮\n        // \"header_indicators\",\n        'header_settings',\n        'header_resolutions', //分辨率\n        'header_undo_redo', // 左右箭头\n        'header_compare', // compare\n        'header_chart_type', // 图表类型\n        'header_undo_redo', // 左右箭头\n        'header_symbol_search', // 搜索\n        'main_series_scale_menu',\n        'property_pages',\n        'left_toolbar', // 左边工具栏\n        'header_widget',\n        'header_widget_dom_node', // 顶部工具栏\n        'border_around_the_chart', // 周围边框\n        'pane_context_menu', // 图表右键菜单\n        'timeframes_toolbar', // 底部时间栏目\n        'timezone_menu',\n        'symbol_search_hot_key', // 搜索热键\n        'caption_buttons_text_if_possible',\n        'control_bar',\n        'context_menus', //长按纵坐标菜单显示\n        'use_localstorage_for_settings',\n        'scales_context_menu',\n        'show_chart_property_page',\n        'edit_buttons_in_legend',\n        'move_logo_to_main_pane',\n        'delete_button_in_legend',\n        'show_hide_button_in_legend'\n      ],\n\n      enabled_features: [\n        // Volume indicator shows 0.01 n/a #3797\n        // https://github.com/tradingview/charting_library/issues/3797\n        'hide_last_na_study_output'\n        // 'move_logo_to_main_pane'\n      ],\n      charts_storage_url: this.props.chartsStorageUrl,\n      charts_storage_api_version: this.props.chartsStorageApiVersion,\n      client_id: this.props.clientId,\n      user_id: this.props.userId,\n      fullscreen: this.props.fullscreen,\n      autosize: this.props.autosize,\n      studies_overrides: this.props.studiesOverrides,\n      theme: 'Dark',\n\n      time_frames: [\n        {\n          text: '1hr',\n          resolution: '60',\n          description: '1 Hour',\n          title: '1H'\n        }\n      ],\n      // https://github.com/stevenGame/jr-chart/blob/f9cbe3497c781029473b05014ee9c4e61f506670/docs/Overrides.md\n      overrides: {\n        editorFontsList: ['Montserrat', 'sans-serif'],\n        volumePaneSize: 'small',\n        'symbolWatermarkProperties.color': 'rgba(0, 0, 0, 0)',\n        'paneProperties.topMargin': 30, // 图表上边际\n        'paneProperties.bottomMargin': 20, // 柱状图表下边际\n        'paneProperties.background': '#292B42', // Background\n        'paneProperties.vertGridProperties.color': '#00000000',\n        'paneProperties.horzGridProperties.color': '#00000000',\n        'paneProperties.legendProperties.showLegend': true,\n        'symbolWatermarkProperties.transparency': 100,\n        'mainSeriesProperties.candleStyle.upColor': this.props.upColor,\n        'mainSeriesProperties.candleStyle.downColor': this.props.downColor,\n        'mainSeriesProperties.candleStyle.borderUpColor': this.props.upColor,\n        'mainSeriesProperties.candleStyle.borderDownColor': this.props\n          .downColor,\n        'mainSeriesProperties.candleStyle.wickUpColor': this.props.upColor,\n        'mainSeriesProperties.candleStyle.wickDownColor': this.props.downColor,\n        'scalesProperties.lineColor': '#242539',\n        'scalesProperties.textColor': '#696A9B',\n        'mainSeriesProperties.priceLineWidth': 1,\n        'mainSeriesProperties.showPriceLine': true,\n        'scalesProperties.showSymbolLabels': false,\n        'scalesProperties.fontSize': 11.2, // 0.85rem of 14px\n        'scalesProperties.showSeriesLastValue': true,\n        'paneProperties.legendProperties.showStudyArguments': true, // Hide ohlc button in trading view #424\n        'paneProperties.legendProperties.showStudyTitles': true,\n        'paneProperties.legendProperties.showStudyValues': true,\n        'paneProperties.legendProperties.showSeriesTitle': false,\n        'paneProperties.legendProperties.showSeriesOHLC': true, // enable OHLC\n        'paneProperties.crossHairProperties.color': '#696A9B'\n      }\n    };\n\n    this.tvWidget = new widget(widgetOptions);\n    this.tvWidget.onChartReady(() => {\n      // https://github.com/tradingview/charting_library/blob/e49b50a9bf8f57d2601dbba63b6e10a42c3c9f1d/charting_library/charting_library.min.d.ts#L859-L860\n      // https://github.com/tradingview/charting_library/wiki/Studies-Overrides\n      this.tvWidget\n        .chart()\n        .createStudy('Moving Average Exponential', false, false, [9]);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          style={{\n            backgroundColor: colors.foreground\n          }}\n          id={this.props.containerId}\n          className={'PriceChart'}\n        />\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport I from 'components/I';\nimport React from 'react';\n\nimport AppLayout from 'AppLayout';\nimport OrderBookTradeHistoryPanel from 'pages/trade/orderbook-and-trade-history/OrderBookTradeHistoryPanel';\nimport TradeHistory from 'pages/trade/trade-history/TradeHistory';\nimport colors from 'colors';\n\nimport OpenAndHistoricalOrders from 'pages/trade/open-orders/OpenAndHistoricalOrders';\nimport PanelHeader from './components/PanelHeader';\nimport TickerBar from './ticker-bar/TickerBar';\n\nimport TradePanel from 'pages/trade/trade-panel/TradePanel';\n\nimport { Layout } from 'antd';\nimport { updateAmount, updatePrice } from 'redux/actions/TradePanel';\nimport { updateColumns } from 'redux/actions/LayoutManager';\nimport MarketService from 'components/services/MarketService';\n\nimport { PriceChart } from 'pages/trade/price-chart/PriceChart';\nimport { getLanguage } from 'lightcone/api/localStorgeAPI';\nimport PageMobile from 'components/MobileIndicator';\nimport config from 'lightcone/config';\n\nimport CookieConsent from 'react-cookie-consent';\n\nimport './TradePage.less';\n\nconst { Sider, Content } = Layout;\n\nclass TradePage extends React.Component {\n  render() {\n    const { currentMarket, exchange } = this.props;\n    const baseTokenSymbol = currentMarket.baseTokenSymbol;\n    const baseToken = config.getTokenBySymbol(baseTokenSymbol, exchange.tokens);\n    const marketConfig = config.getMarketByPair(\n      currentMarket.current,\n      exchange.markets\n    ) || {\n      precisionForPrice: 6\n    };\n\n    const sizeFormat = baseToken.precision\n      ? '0.' + '0'.repeat(baseToken.precision)\n      : '1' + '0'.repeat(-baseToken.precision);\n    const priceFormat =\n      marketConfig.precisionForPrice > 0\n        ? ' 0.' + '0'.repeat(marketConfig.precisionForPrice)\n        : '1' + '0'.repeat(-marketConfig.precisionForPrice);\n\n    let priceChart = (\n      <div\n        style={{\n          background: colors.foreground\n        }}\n      >\n        <div\n          style={{\n            fontSize: '0.9rem',\n            fontWeight: '400',\n            color: colors.textDim,\n            paddingLeft: '16px',\n            lineHeight: '32px',\n            background: 'linear-gradient(180deg, #2e2f4a 0%, #25263b 100%)'\n          }}\n        >\n          {currentMarket.current}\n        </div>\n        <PriceChart\n          market={currentMarket.current}\n          upColor={this.props.colorManager.up}\n          downColor={this.props.colorManager.down}\n          language={getLanguage()}\n          tokens={exchange.tokens}\n        />\n      </div>\n    );\n\n    let contentComponent;\n    if (this.props.layoutManager.numColumns !== 1) {\n      contentComponent = (\n        <div\n          style={{\n            width: '100%'\n          }}\n        >\n          <PanelHeader headerText={<I s=\"Trading View\" />} />\n          {priceChart}\n          <OpenAndHistoricalOrders />\n        </div>\n      );\n    } else {\n      contentComponent = (\n        <div\n          style={{\n            display: 'block',\n            position: 'relative',\n            height: AppLayout.mainScreenHeight\n          }}\n        >\n          <div>\n            <TradePanel />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <MarketService {...this.props} />\n        <div className=\"desktop-layout\">\n          <TickerBar />\n          <Layout\n            hasSider={true}\n            style={{\n              height: AppLayout.mainScreenHeight,\n              backgroundColor: colors.background\n            }}\n          >\n            <Sider\n              width={AppLayout.tradePanelWidth}\n              style={{\n                paddingTop: '0px',\n                backgroundColor: colors.sidePanelBackground,\n                borderStyle: 'none',\n                height: AppLayout.mainScreenHeight\n              }}\n              trigger={null}\n              breakpoint=\"sm\"\n              collapsedWidth=\"0\"\n              onBreakpoint={broken => {}}\n              onCollapse={(collapsed, type) => {\n                this.props.updateColumns();\n              }}\n            >\n              <div\n                style={{\n                  display: 'block',\n                  position: 'relative',\n                  height: AppLayout.mainScreenHeight\n                }}\n              >\n                <TradePanel />\n              </div>\n            </Sider>\n            <Sider\n              className=\"orderbook-and-trade-history-sider\"\n              width={AppLayout.orderBookWidth}\n              style={{\n                marginLeft: AppLayout.sidePadding,\n                marginRight: AppLayout.sidePadding\n              }}\n              trigger={null}\n              breakpoint=\"lg\"\n              collapsedWidth=\"0\"\n              onBreakpoint={broken => {}}\n              onCollapse={(collapsed, type) => {\n                this.props.updateColumns();\n              }}\n            >\n              <OrderBookTradeHistoryPanel />\n            </Sider>\n            <Content\n              width=\"100%\"\n              style={{\n                paddingTop: '0px'\n              }}\n            >\n              {contentComponent}\n            </Content>\n            <Sider\n              className=\"trade-history-sider\"\n              width={AppLayout.tradeHistoryWidth}\n              trigger={null}\n              onBreakpoint={broken => {}}\n              onCollapse={(collapsed, type) => {\n                this.props.updateColumns();\n              }}\n            >\n              <TradeHistory\n                getTimeStamp={order => order.timestamp}\n                onClickTrade={(order, side) => {\n                  this.props.updatePrice(order.price);\n                }}\n                sizeFormat={sizeFormat}\n                priceFormat={priceFormat}\n              />\n            </Sider>\n          </Layout>\n        </div>\n        <div className=\"mobile-layout\">\n          <PageMobile />\n        </div>\n\n        <CookieConsent\n          location=\"bottom\"\n          cookieName=\"cookie-consent-1.0\"\n          style={{\n            textAlign: 'center',\n            fontSize: '0.9rem',\n            height: '64px',\n            boxShadow: '0 0 0 5000px rgba(0, 0, 0, 0.45)',\n            background: colors.foreground,\n            color: colors.textBright\n          }}\n          buttonText={<I s=\"I Agree\" />}\n          buttonStyle={{\n            color: colors.textBright,\n            borderRadius: '4px',\n            minWidth: '100px',\n            fontWeight: '600',\n            background: colors.theme,\n            fontSize: '0.9rem'\n          }}\n          expires={365}\n        >\n          <I s=\"CookieConsentMessage\" />\n          <a href=\"/legal/terms\" target=\"_blank\">\n            <I s=\"Terms of Use\" />\n          </a>\n          <I s=\", \" />\n          <a href=\"/legal/privacy-policy\" target=\"_blank\">\n            <I s=\"Privacy Policy\" />\n          </a>\n          <I s=\", \" />\n          <a href=\"/legal/cookie-policy\" target=\"_blank\">\n            <I s=\"Cookie Policy\" />\n          </a>\n          <I s=\", and \" />\n          <a href=\"/legal/disclaimer\" target=\"_blank\">\n            <I s=\"Disclaimer\" />\n          </a>\n          <I s=\".\" />\n        </CookieConsent>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    colorManager,\n    layoutManager,\n    currentMarket,\n    tokens,\n    exchange\n  } = state;\n  return {\n    colorManager,\n    layoutManager,\n    currentMarket,\n    tokens,\n    exchange\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAmount: amount => dispatch(updateAmount(amount)),\n    updatePrice: price => dispatch(updatePrice(price)),\n    updateColumns: () => dispatch(updateColumns())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TradePage);\n","import { Redirect, Route, Switch } from 'react-router';\nimport React from 'react';\n\nimport {\n  MyBalancesPage,\n  MyDepositsPage,\n  MyWithdrawalsPage\n} from 'pages/account/AccountPages';\n\nimport {\n  MyOpenOrdersPage,\n  MyOrderHistoryPage,\n  MyTradesPage\n} from 'pages/orders/OrderPages';\n\nimport {\n  CookiePolicyPage,\n  DisclaimerPage,\n  PrivacyPolicyPage,\n  TermsPage\n} from 'pages/legal/LegalPages';\n\nimport {\n  APIPage,\n  Beta1RewardsPage,\n  FeesPage,\n  ListingPage\n} from 'pages/docs/DocumentPages';\n\nimport NotFoundPage from 'pages/not-found/NotFoundPage';\nimport TopNavBar from 'components/top-nav-bar/TopNavBar';\nimport TradePage from 'pages/trade/TradePage';\n\nconst routes = (\n  <div>\n    <TopNavBar />\n    <Switch id=\"side-bar-container\">\n      <Route exact path=\"/\" render={() => <Redirect to=\"/trade/LRC-ETH\" />} />\n      <Route\n        exact\n        path=\"/trade\"\n        render={() => <Redirect to=\"/trade/LRC-ETH\" />}\n      />\n      <Route exact path=\"/trade/:pair\" component={TradePage} />\n      <Route exact path=\"/orders/open-orders\" component={MyOpenOrdersPage} />\n      <Route\n        exact\n        path=\"/orders/order-history\"\n        component={MyOrderHistoryPage}\n      />\n      <Route exact path=\"/orders/trade-history\" component={MyTradesPage} />\n      <Route exact path=\"/account/balances\" component={MyBalancesPage} />\n      <Route exact path=\"/account/deposits\" component={MyDepositsPage} />\n      <Route exact path=\"/account/withdrawals\" component={MyWithdrawalsPage} />\n      <Route exact path=\"/legal/terms\" component={TermsPage} />\n      <Route exact path=\"/legal/disclaimer\" component={DisclaimerPage} />\n      <Route exact path=\"/legal/privacy-policy\" component={PrivacyPolicyPage} />\n      <Route exact path=\"/legal/cookie-policy\" component={CookiePolicyPage} />\n      <Route exact path=\"/document/api\" component={APIPage} />\n      <Route exact path=\"/document/fees\" component={FeesPage} />\n      <Route exact path=\"/document/listing\" component={ListingPage} />\n      <Route exact path=\"/document/beta1\" component={Beta1RewardsPage} />\n      <Route exact path=\"/404\" component={NotFoundPage} />\n      <Route path=\"/*\" render={() => <Redirect to=\"/404\" />} />\n    </Switch>\n  </div>\n);\n\nexport default routes;\n","import { AppContainer } from 'react-hot-loader';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.less';\n\nimport App from './App';\n\nimport configureStore, { history } from 'redux/configureStore';\n\nconst store = configureStore();\n\nconst render = () => {\n  ReactDOM.render(\n    <AppContainer>\n      <Provider store={store}>\n        <App history={history} />\n      </Provider>\n    </AppContainer>,\n    document.getElementById('root')\n  );\n};\n\nrender();\n\n// Hot reloading\nif (module.hot) {\n  // Reload components\n  module.hot.accept('./App', () => {\n    render();\n  });\n}\n","import { toBig, toFixed } from '../common/formatter';\nconst config = require('./config.json');\n\nfunction getRelayerHost() {\n  if (\n    window.location.hostname === 'beta.loopring.io' ||\n    window.location.hostname === 'loopring.io' ||\n    window.location.hostname === 'www.loopring.io'\n  ) {\n    return config.prodServerUrl;\n  } else {\n    return config.uatServerUrl;\n  }\n}\n\nfunction getServer() {\n  return 'https://' + getRelayerHost();\n}\n\nfunction getWsServer() {\n  return 'wss://' + getRelayerHost() + '/v1/ws';\n}\n\nfunction getChannelId() {\n  return config.defaultChannelId;\n}\n\nfunction getLabel() {\n  return config.label;\n}\n\nfunction getMaxFeeBips() {\n  return config.maxFeeBips;\n}\n\nfunction getTokenBySymbol(symbol, tokens) {\n  if (typeof symbol === 'undefined') {\n    return {};\n  }\n  return (\n    tokens.find(token => token.symbol.toLowerCase() === symbol.toLowerCase()) ||\n    {}\n  );\n}\n\nfunction getTokenByAddress(address, tokens) {\n  if (typeof address === 'undefined') {\n    return {};\n  }\n  return tokens.find(\n    token => token.address.toLowerCase() === address.toLowerCase()\n  );\n}\n\nfunction getTokenByTokenId(tokenId, tokens) {\n  if (typeof tokenId === 'undefined') {\n    return {};\n  }\n  return tokens.find(token => token.tokenId === tokenId);\n}\n\nfunction fromWEI(symbol, valueInWEI, tokens, { precision, ceil } = {}) {\n  const token = getTokenBySymbol(symbol, tokens);\n  const precisionToFixed = precision ? precision : token.precision;\n  const value = toBig(valueInWEI).div('1e' + token.decimals);\n  return toFixed(value, precisionToFixed, ceil);\n}\n\nfunction toWEI(symbol, value, tokens) {\n  const token = getTokenBySymbol(symbol, tokens);\n  if (typeof token === 'undefined') {\n    return 0;\n  }\n  const valueInBN = toBig(value).times('1e' + token.decimals);\n  return valueInBN.toString(10);\n}\n\nfunction getMarketByPair(pair, markets) {\n  if (pair) {\n    return markets.find(m => m.market === pair);\n  }\n}\n\nfunction isSupportedMarket(market, markets) {\n  return !!getMarketByPair(market, markets);\n}\n\nfunction getMarketsByTokenR(token, markets) {\n  return markets.filter(item => item.split('-')[1] === token);\n}\n\nfunction getMarketsByTokenL(token, markets) {\n  return markets.filter(item => item.split('-')[0] === token);\n}\n\nfunction getTokenSupportedMarkets(token) {\n  const leftMarket = getMarketsByTokenL(token);\n  const rightMarket = getMarketsByTokenR(token);\n  return [...leftMarket, ...rightMarket];\n}\n\nfunction getGasLimitByType(type) {\n  if (type) {\n    return config.txs.find(tx => type === tx.type);\n  }\n}\n\nfunction getFeeByType(type, fees) {\n  if (type) {\n    return fees.find(fee => type === fee.type);\n  }\n}\n\nfunction getMaxAmountInWEI() {\n  return config.maxAmount;\n}\n\nexport default {\n  getRelayerHost,\n  getServer,\n  getWsServer,\n  getTokenBySymbol,\n  getTokenByAddress,\n  getTokenByTokenId,\n  getMarketByPair,\n  getGasLimitByType,\n  getFeeByType,\n  getChannelId,\n  getLabel,\n  isSupportedMarket,\n  getMarketsByTokenR,\n  getTokenSupportedMarkets,\n  getMaxFeeBips,\n  getMaxAmountInWEI,\n  fromWEI,\n  toWEI\n};\n","import { request } from '../../../common';\nimport config from '../../../config';\n\nexport async function getAllowance(owner, symbol, tokens) {\n  let token = config.getTokenBySymbol(symbol, tokens);\n  let tokenAddress = token.address;\n  const data = {\n    owner,\n    token: tokenAddress\n  };\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/allowances',\n    data\n  });\n\n  return response['allowances'];\n}\n","import { getAllowance } from 'lightcone/api/v1/allowances';\nimport { getEthBalance } from 'lightcone/api/v1/ethBalance';\nimport { getTokenBalance } from 'lightcone/api/v1/tokenBalance';\nimport CryptoJS from 'crypto-js';\nimport config from 'lightcone/config';\n\nexport function encrypt(originalText, password) {\n  const cipherText = CryptoJS.AES.encrypt(originalText, password).toString();\n  return cipherText;\n}\n\nexport function decrypt(cipherText, password) {\n  try {\n    if (cipherText && cipherText.length) {\n      const bytes = CryptoJS.AES.decrypt(cipherText, password);\n      const originalText = bytes.toString(CryptoJS.enc.Utf8);\n\n      // Fail to decrypt\n      if (originalText.length === 0) {\n        return null;\n      }\n      return originalText;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function fetchWalletBalance(owner, tokenSymbol, tokens) {\n  const tokenBalance = await (tokenSymbol.toUpperCase() === 'ETH'\n    ? getEthBalance(owner)\n    : getTokenBalance(owner, tokenSymbol, tokens));\n\n  return config.fromWEI(tokenSymbol, tokenBalance, tokens);\n}\n\nexport async function fetchAllowance(owner, tokenSymbol, tokens) {\n  if (tokenSymbol.toUpperCase() === 'ETH') {\n    return 0;\n  } else {\n    const allowance = await getAllowance(owner, tokenSymbol, tokens);\n    return Number(config.fromWEI(tokenSymbol, allowance, tokens));\n  }\n}\n","export const UPDATE_TRADE_TYPE = 'UPDATE_TRADE_TYPE';\nexport const UPDATE_AMOUNT = 'UPDATE_AMOUNT';\nexport const UPDATE_PRICE = 'UPDATE_PRICE';\nexport const EMPTY_TRADE_FORM = 'EMPTY_TRADE_FORM';\n\nexport function updateTradeType(tradeType) {\n  return {\n    type: UPDATE_TRADE_TYPE,\n    payload: {\n      tradeType\n    }\n  };\n}\n\nexport function updateAmount(amount) {\n  return {\n    type: UPDATE_AMOUNT,\n    payload: {\n      amount\n    }\n  };\n}\n\nexport function updatePrice(price) {\n  return {\n    type: UPDATE_PRICE,\n    payload: {\n      price\n    }\n  };\n}\n\nexport function emptyTradePanel() {\n  return {\n    type: EMPTY_TRADE_FORM,\n    payload: {}\n  };\n}\n","import { request } from '../../../common';\nimport config from '../../../config';\n\nexport async function getUserTrades({\n  accountId,\n  limit,\n  offset,\n  market,\n  apiKey,\n  tokens\n}) {\n  const headers = {\n    'X-API-KEY': apiKey\n  };\n  const data = {\n    accountId,\n    limit,\n    offset\n  };\n  if (typeof market !== 'undefined') {\n    data.market = market;\n  }\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/user/trades',\n    headers: headers,\n    data\n  });\n\n  const totalNum = response['totalNum'];\n\n  const trades = response['trades'];\n  const updatedTrades = map(trades, tokens);\n  return {\n    accountId,\n    trades: updatedTrades,\n    totalNum,\n    limit,\n    offset\n  };\n}\n\n// Map API modal to UI modal\nfunction map(trades, configTokens) {\n  let updatedTrades = [];\n  for (let i = 0; i < trades.length; i = i + 1) {\n    const trade = trades[i];\n    let updatedTrade = { ...trade };\n    const market = updatedTrade.market;\n    const tokens = market.split('-');\n    const baseToken = tokens[0];\n\n    // Used in table directly\n    const sizeInString = config.fromWEI(baseToken, trade.size, configTokens);\n    updatedTrade['sizeInString'] = sizeInString;\n\n    let feeInString = '';\n    if (Number(trade.filledSize) === 0) {\n      feeInString = '-';\n    } else {\n      feeInString = config.fromWEI(baseToken, trade.fee, configTokens, {\n        precision: 8\n      });\n    }\n    updatedTrade['feeInString'] = feeInString;\n\n    updatedTrades.push(updatedTrade);\n  }\n  return updatedTrades;\n}\n","import { getOrders } from 'lightcone/api/v1/orders';\nimport { getUserTrades } from 'lightcone/api/v1/userTrades';\n\nexport const UPDATE_ALL_OPEN_ORDERS = 'UPDATE_ALL_OPEN_ORDERS';\nexport const UPDATE_ALL_HISTORY_ORDERS = 'UPDATE_ALL_HISTORY_ORDERS';\nexport const EMPTY_ALL_OPEN_ORDERS = 'EMPTY_ALL_OPEN_ORDERS';\nexport const EMPTY_ALL_HISTORY_ORDERS = 'EMPTY_ALL_HISTORY_ORDERS';\n\n// Trades\nexport const UPDATE_USER_TRANSACTIONS = 'UPDATE_USER_TRANSACTIONS';\nexport const EMPTY_USER_TRANSACTIONS = 'EMPTY_USER_TRANSACTIONS';\n\n//Socket\nexport const UPDATE_SOCKET_ALL_ORDER = 'UPDATE_SOCKET_ALL_ORDER';\n\nexport function updateSocketAllOrder(order) {\n  return {\n    type: UPDATE_SOCKET_ALL_ORDER,\n    payload: {\n      order\n    }\n  };\n}\n\nexport function updateAllOpenOrders(payload) {\n  return {\n    type: UPDATE_ALL_OPEN_ORDERS,\n    payload\n  };\n}\n\nexport function fetchMyOpenOrders(accountId, limit, offset, apiKey, tokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        const response = await getOrders({\n          accountId,\n          limit,\n          offset,\n          statuses: ['waiting', 'processing'],\n          apiKey,\n          tokens\n        });\n        dispatch(updateAllOpenOrders(response));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function updateAllHistoryOrders(payload) {\n  return {\n    type: UPDATE_ALL_HISTORY_ORDERS,\n    payload\n  };\n}\n\nexport function fetchMyHistoryOrders(accountId, limit, offset, apiKey, tokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        const response = await getOrders({\n          accountId,\n          limit,\n          offset,\n          statuses: ['processed', 'failed', 'cancelled', 'expired'],\n          apiKey,\n          tokens\n        });\n        dispatch(updateAllHistoryOrders(response));\n      } catch (error) {}\n    })();\n  };\n}\n\nexport function emptyAllOpenOrders() {\n  return {\n    type: EMPTY_ALL_OPEN_ORDERS,\n    payload: {}\n  };\n}\n\nexport function emptyAllHistoryOrders() {\n  return {\n    type: EMPTY_ALL_HISTORY_ORDERS,\n    payload: {}\n  };\n}\n\nexport function updateUserTransactions(response) {\n  return {\n    type: UPDATE_USER_TRANSACTIONS,\n    payload: response\n  };\n}\n\nexport function fetchUserTransactions(\n  accountId,\n  limit,\n  offset,\n  apiKey,\n  tokens\n) {\n  return dispatch => {\n    (async () => {\n      try {\n        const response = await getUserTrades({\n          accountId,\n          limit,\n          offset,\n          apiKey,\n          tokens\n        });\n        dispatch(updateUserTransactions(response));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n\nexport function emptyUserTransactions() {\n  return {\n    type: EMPTY_USER_TRANSACTIONS,\n    payload: {}\n  };\n}\n","import React from 'react';\n\nconst Group = ({ label, children }) => {\n  return (\n    <div\n      style={{\n        fontWeight: '400',\n        fontSize: '0.9rem'\n      }}\n    >\n      {label ? (\n        <div\n          style={{\n            paddingBottom: '8px',\n            userSelect: 'none'\n          }}\n        >\n          {label}\n        </div>\n      ) : (\n        <span />\n      )}\n      <div\n        style={{\n          paddingBottom: '18px'\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Group;\n","import { bigInt, bn128 } from 'snarkjs';\n\nconst Base8 = [\n  bigInt(\n    '16540640123574156134436876038791482806971768689494387082833631921987005038935'\n  ),\n  bigInt(\n    '20819045374670962167435360035096875258406992893633759881276124905556507972311'\n  )\n];\nconst order = bigInt(\n  '21888242871839275222246405745257275088614511777268538073601725287587578984328'\n);\nconst subOrder = order.shr(3);\nconst p = bn128.r;\n\nfunction addPoint(a, b) {\n  const q = bn128.r;\n  const cta = bigInt('168700');\n  const d = bigInt('168696');\n  const res = [];\n\n  res[0] = bigInt(\n    bigInt(a[0])\n      .mul(b[1])\n      .add(bigInt(b[0]).mul(a[1]))\n      .mul(\n        bigInt(\n          bigInt('1').add(\n            d\n              .mul(a[0])\n              .mul(b[0])\n              .mul(a[1])\n              .mul(b[1])\n          )\n        ).inverse(q)\n      )\n  ).affine(q);\n  res[1] = bigInt(\n    bigInt(a[1])\n      .mul(b[1])\n      .sub(cta.mul(a[0]).mul(b[0]))\n      .mul(\n        bigInt(\n          bigInt('1').sub(\n            d\n              .mul(a[0])\n              .mul(b[0])\n              .mul(a[1])\n              .mul(b[1])\n          )\n        ).inverse(q)\n      )\n  ).affine(q);\n\n  return res;\n}\n\nfunction mulPointEscalar(base, e) {\n  let res = [bigInt('0'), bigInt('1')];\n  let rem = bigInt(e);\n  let exp = base;\n\n  while (!rem.isZero()) {\n    if (rem.isOdd()) {\n      res = addPoint(res, exp);\n    }\n    exp = addPoint(exp, exp);\n    rem = rem.shr(1);\n  }\n\n  return res;\n}\n\nfunction inSubgroup(P) {\n  if (!inCurve(P)) return false;\n  const res = mulPointEscalar(P, exports.subOrder);\n  return res[0].equals(bigInt(0)) && res[1].equals(bigInt(1));\n}\n\nfunction inCurve(P) {\n  const F = bn128.Fr;\n\n  const a = bigInt('168700');\n  const d = bigInt('168696');\n\n  const x2 = F.square(P[0]);\n  const y2 = F.square(P[1]);\n\n  if (!F.equals(F.add(F.mul(a, x2), y2), F.add(F.one, F.mul(F.mul(x2, y2), d))))\n    return false;\n\n  return true;\n}\n\nfunction packPoint(P) {\n  const buff = bigInt.leInt2Buff(P[1], 32);\n  if (P[0].greater(exports.p.shr(1))) {\n    buff[31] = buff[31] | 0x80;\n  }\n  return buff;\n}\n\nfunction unpackPoint(_buff) {\n  const F = bn128.Fr;\n\n  const buff = Buffer.from(_buff);\n  let sign = false;\n  const P = new Array(2);\n  if (buff[31] & 0x80) {\n    sign = true;\n    buff[31] = buff[31] & 0x7f;\n  }\n  P[1] = bigInt.leBuff2int(buff);\n  if (P[1].greaterOrEquals(exports.p)) return null;\n\n  const a = bigInt('168700');\n  const d = bigInt('168696');\n\n  const y2 = F.square(P[1]);\n\n  let x = F.sqrt(F.div(F.sub(F.one, y2), F.sub(a, F.mul(d, y2))));\n\n  if (x == null) return null;\n\n  if (sign) x = F.neg(x);\n\n  P[0] = F.affine(x);\n\n  return P;\n}\n\nexport default {\n  addPoint,\n  mulPointEscalar,\n  inCurve,\n  inSubgroup,\n  packPoint,\n  unpackPoint,\n  Base8,\n  order,\n  subOrder,\n  p\n};\n","import axios from 'axios';\nimport config from '../config';\n\nexport const SERVER_URL = config.getServer();\n\n/**\n * @description Supports single request and batch request;\n * @param options\n * @param parse\n * @returns {Promise}\n */\nexport default function request(options, parse) {\n  options.timeout = options.timeout || 15000;\n  options.baseURL = options.baseURL || SERVER_URL;\n\n  return axios(options).then(response => {\n    if (parse) {\n      return parse(response);\n    } else {\n      return parseResponse(response);\n    }\n  });\n}\n\nfunction parseResponse(response) {\n  const data = response['data'];\n  const resultInfo = data['resultInfo'];\n  const errorData = data['error'];\n\n  // Some API endpoints in the old versions don't have resultInfo.\n  if (resultInfo) {\n    const code = resultInfo['code'];\n    if (code !== 0) {\n      const errorMessage = resultInfo['message'];\n      throw Error(errorMessage);\n    }\n    return data;\n  } else if (errorData) {\n    const code = errorData['code'];\n    if (code !== 0) {\n      const errorMessage = `${errorData['code']} ${errorData['message']}`;\n      throw Error(errorMessage);\n    }\n    return data;\n  } else {\n    return data;\n  }\n}\n","import { request } from '../../../common';\nimport config from '../../../config';\n\nexport async function getDepth(market, level, limit, configTokens) {\n  const data = {\n    market,\n    level,\n    limit\n  };\n  const tokens = market.split('-');\n  const baseToken = tokens[0];\n\n  const response = await request({\n    method: 'POST',\n    url: '/api/v1/depth',\n    data\n  });\n\n  const depth = response['depth'];\n  const bids = depth['bids'];\n  let updatedBids = [];\n  for (let i = 0; i < bids.length; i = i + 1) {\n    const bid = bids[i];\n    let updatedBid = {\n      price: bid.price,\n      size: bid.size,\n      volume: bid.volume,\n      count: bid.count,\n      sizeInNumber: config.fromWEI(baseToken, bid.size, configTokens)\n    };\n    updatedBids.push(updatedBid);\n  }\n\n  const asks = depth['asks'];\n  let updatedAsks = [];\n  for (let i = 0; i < asks.length; i = i + 1) {\n    const ask = asks[i];\n    let updatedAsk = {\n      price: ask.price,\n      size: ask.size,\n      volume: ask.volume,\n      count: ask.count,\n      sizeInNumber: config.fromWEI(baseToken, ask.size, configTokens)\n    };\n    updatedAsks.push(updatedAsk);\n  }\n\n  return {\n    bids: updatedBids,\n    asks: updatedAsks,\n    version: depth['version']\n  };\n}\n","import { getDepth } from 'lightcone/api/v1/depth';\n\nexport const UPDATE_ORDER_BOOKS = 'UPDATE_ORDER_BOOKS';\nexport const UPDATE_ORDER_BOOKS_LEVEL = 'UPDATE_ORDER_BOOKS_LEVEL';\nexport const UPDATE_SOCKET_ORDER_BOOKS = 'UPDATE_SOCKET_ORDER_BOOKS';\nexport const EMPTY_ORDER_BOOKS = 'EMPTY_ORDER_BOOKS';\n\nexport function updateSocketOrderBooks(sells, buys, startVersion, endVersion) {\n  const asks = sells.map(slot => ({\n    ...slot,\n    side: 'SELL'\n  }));\n  const bids = buys.map(slot => ({\n    ...slot,\n    side: 'BUY'\n  }));\n\n  return {\n    type: UPDATE_SOCKET_ORDER_BOOKS,\n    payload: {\n      sells: asks,\n      buys: bids,\n      startVersion,\n      endVersion\n    }\n  };\n}\n\nexport function emptyOrderBooks(level) {\n  return {\n    type: EMPTY_ORDER_BOOKS,\n    payload: {\n      level\n    }\n  };\n}\n\nexport function updateOrderBooks(sells, buys, version) {\n  return {\n    type: UPDATE_ORDER_BOOKS,\n    payload: {\n      sells,\n      buys,\n      version\n    }\n  };\n}\n\nexport function fetchOrderBooks(market, level, tokens) {\n  return dispatch => {\n    (async () => {\n      try {\n        const depth = await getDepth(market, level, 200, tokens);\n        const asks = depth.asks.map(obj => ({\n          ...obj,\n          side: 'SELL'\n        }));\n        const bids = depth.bids.map(obj => ({\n          ...obj,\n          side: 'BUY'\n        }));\n        dispatch(updateOrderBooks(asks.reverse(), bids, depth.version));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n\nfunction internalUpdateOrderBooksLevel(level) {\n  return {\n    type: UPDATE_ORDER_BOOKS_LEVEL,\n    payload: {\n      level\n    }\n  };\n}\n\nexport function updateOrderBooksLevel(market, level) {\n  return dispatch => {\n    (async () => {\n      try {\n        dispatch(internalUpdateOrderBooksLevel(level));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  };\n}\n"],"sourceRoot":""}